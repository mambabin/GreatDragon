// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "VersionInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* VersionInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VersionInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_VersionInfo_2eproto() {
  protobuf_AddDesc_VersionInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "VersionInfo.proto");
  GOOGLE_CHECK(file != NULL);
  VersionInfo_descriptor_ = file->message_type(0);
  static const int VersionInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionInfo, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionInfo, origin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionInfo, guid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionInfo, md5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionInfo, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionInfo, litter_),
  };
  VersionInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VersionInfo_descriptor_,
      VersionInfo::default_instance_,
      VersionInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VersionInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(VersionInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_VersionInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VersionInfo_descriptor_, &VersionInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_VersionInfo_2eproto() {
  delete VersionInfo::default_instance_;
  delete VersionInfo_reflection_;
}

void protobuf_AddDesc_VersionInfo_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021VersionInfo.proto\"g\n\013VersionInfo\022\017\n\007ve"
    "rsion\030\001 \001(\003\022\016\n\006origin\030\002 \003(\t\022\014\n\004guid\030\003 \003("
    "\t\022\013\n\003md5\030\004 \003(\t\022\014\n\004size\030\005 \003(\005\022\016\n\006litter\030\006"
    " \003(\014", 124);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "VersionInfo.proto", &protobuf_RegisterTypes);
  VersionInfo::default_instance_ = new VersionInfo();
  VersionInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_VersionInfo_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_VersionInfo_2eproto {
  StaticDescriptorInitializer_VersionInfo_2eproto() {
    protobuf_AddDesc_VersionInfo_2eproto();
  }
} static_descriptor_initializer_VersionInfo_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int VersionInfo::kVersionFieldNumber;
const int VersionInfo::kOriginFieldNumber;
const int VersionInfo::kGuidFieldNumber;
const int VersionInfo::kMd5FieldNumber;
const int VersionInfo::kSizeFieldNumber;
const int VersionInfo::kLitterFieldNumber;
#endif  // !_MSC_VER

VersionInfo::VersionInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void VersionInfo::InitAsDefaultInstance() {
}

VersionInfo::VersionInfo(const VersionInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void VersionInfo::SharedCtor() {
  _cached_size_ = 0;
  version_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

VersionInfo::~VersionInfo() {
  SharedDtor();
}

void VersionInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void VersionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VersionInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VersionInfo_descriptor_;
}

const VersionInfo& VersionInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_VersionInfo_2eproto();  return *default_instance_;
}

VersionInfo* VersionInfo::default_instance_ = NULL;

VersionInfo* VersionInfo::New() const {
  return new VersionInfo;
}

void VersionInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    version_ = GOOGLE_LONGLONG(0);
  }
  origin_.Clear();
  guid_.Clear();
  md5_.Clear();
  size_.Clear();
  litter_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool VersionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 version = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_origin;
        break;
      }
      
      // repeated string origin = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_origin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_origin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->origin(0).data(), this->origin(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_origin;
        if (input->ExpectTag(26)) goto parse_guid;
        break;
      }
      
      // repeated string guid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_guid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->guid(0).data(), this->guid(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_guid;
        if (input->ExpectTag(34)) goto parse_md5;
        break;
      }
      
      // repeated string md5 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_md5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_md5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->md5(0).data(), this->md5(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_md5;
        if (input->ExpectTag(40)) goto parse_size;
        break;
      }
      
      // repeated int32 size = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_size())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_size())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_size;
        if (input->ExpectTag(50)) goto parse_litter;
        break;
      }
      
      // repeated bytes litter = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_litter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_litter()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_litter;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void VersionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 version = 1;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->version(), output);
  }
  
  // repeated string origin = 2;
  for (int i = 0; i < this->origin_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->origin(i).data(), this->origin(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->origin(i), output);
  }
  
  // repeated string guid = 3;
  for (int i = 0; i < this->guid_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->guid(i).data(), this->guid(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->guid(i), output);
  }
  
  // repeated string md5 = 4;
  for (int i = 0; i < this->md5_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->md5(i).data(), this->md5(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->md5(i), output);
  }
  
  // repeated int32 size = 5;
  for (int i = 0; i < this->size_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->size(i), output);
  }
  
  // repeated bytes litter = 6;
  for (int i = 0; i < this->litter_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->litter(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* VersionInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 version = 1;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->version(), target);
  }
  
  // repeated string origin = 2;
  for (int i = 0; i < this->origin_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->origin(i).data(), this->origin(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->origin(i), target);
  }
  
  // repeated string guid = 3;
  for (int i = 0; i < this->guid_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->guid(i).data(), this->guid(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->guid(i), target);
  }
  
  // repeated string md5 = 4;
  for (int i = 0; i < this->md5_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->md5(i).data(), this->md5(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->md5(i), target);
  }
  
  // repeated int32 size = 5;
  for (int i = 0; i < this->size_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->size(i), target);
  }
  
  // repeated bytes litter = 6;
  for (int i = 0; i < this->litter_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(6, this->litter(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int VersionInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->version());
    }
    
  }
  // repeated string origin = 2;
  total_size += 1 * this->origin_size();
  for (int i = 0; i < this->origin_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->origin(i));
  }
  
  // repeated string guid = 3;
  total_size += 1 * this->guid_size();
  for (int i = 0; i < this->guid_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->guid(i));
  }
  
  // repeated string md5 = 4;
  total_size += 1 * this->md5_size();
  for (int i = 0; i < this->md5_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->md5(i));
  }
  
  // repeated int32 size = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->size_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->size(i));
    }
    total_size += 1 * this->size_size() + data_size;
  }
  
  // repeated bytes litter = 6;
  total_size += 1 * this->litter_size();
  for (int i = 0; i < this->litter_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->litter(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VersionInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const VersionInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const VersionInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void VersionInfo::MergeFrom(const VersionInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  origin_.MergeFrom(from.origin_);
  guid_.MergeFrom(from.guid_);
  md5_.MergeFrom(from.md5_);
  size_.MergeFrom(from.size_);
  litter_.MergeFrom(from.litter_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void VersionInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VersionInfo::CopyFrom(const VersionInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VersionInfo::IsInitialized() const {
  
  return true;
}

void VersionInfo::Swap(VersionInfo* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    origin_.Swap(&other->origin_);
    guid_.Swap(&other->guid_);
    md5_.Swap(&other->md5_);
    size_.Swap(&other->size_);
    litter_.Swap(&other->litter_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata VersionInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = VersionInfo_descriptor_;
  metadata.reflection = VersionInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
