// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "PlayerAtt.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* RoomInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_FriendInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_FriendInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RecordInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RecordInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_DesignationRecord_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_DesignationRecord_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_PetAsset_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PetAsset_reflection_ = NULL;
const ::google::protobuf::Descriptor* PB_PlayerAtt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PB_PlayerAtt_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_PlayerAtt_2eproto() {
  protobuf_AddDesc_PlayerAtt_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "PlayerAtt.proto");
  GOOGLE_CHECK(file != NULL);
  RoomInfo_descriptor_ = file->message_type(0);
  static const int RoomInfo_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, leader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, roles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, noPower_),
  };
  RoomInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RoomInfo_descriptor_,
      RoomInfo::default_instance_,
      RoomInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RoomInfo));
  PB_FriendInfo_descriptor_ = file->message_type(1);
  static const int PB_FriendInfo_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FriendInfo, roleID_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FriendInfo, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FriendInfo, professionType_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FriendInfo, loveHeart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FriendInfo, flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FriendInfo, vip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FriendInfo, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FriendInfo, power_),
  };
  PB_FriendInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_FriendInfo_descriptor_,
      PB_FriendInfo::default_instance_,
      PB_FriendInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FriendInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_FriendInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_FriendInfo));
  RecordInfo_descriptor_ = file->message_type(2);
  static const int RecordInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordInfo, role_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordInfo, arg1_),
  };
  RecordInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RecordInfo_descriptor_,
      RecordInfo::default_instance_,
      RecordInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RecordInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RecordInfo));
  PB_DesignationRecord_descriptor_ = file->message_type(3);
  static const int PB_DesignationRecord_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_DesignationRecord, has_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_DesignationRecord, start_),
  };
  PB_DesignationRecord_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_DesignationRecord_descriptor_,
      PB_DesignationRecord::default_instance_,
      PB_DesignationRecord_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_DesignationRecord, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_DesignationRecord, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_DesignationRecord));
  PB_PetAsset_descriptor_ = file->message_type(4);
  static const int PB_PetAsset_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PetAsset, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PetAsset, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PetAsset, pet_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PetAsset, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PetAsset, level_),
  };
  PB_PetAsset_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_PetAsset_descriptor_,
      PB_PetAsset::default_instance_,
      PB_PetAsset_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PetAsset, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PetAsset, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_PetAsset));
  PB_PlayerAtt_descriptor_ = file->message_type(5);
  static const int PB_PlayerAtt_offsets_[33] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, att_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, missions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, itemPackage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, alt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, prevLogin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, friends_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, passGuide_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, prevLogout_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, dayEvent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, fixedEvent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, designationRecord_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, showDesignation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, mails_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, pets_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, fans_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, firstLoginIP_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, lastLoginIP_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, totalNum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, loginNum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, createTime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, faction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, godDueDate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, godRankIndex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, godRecordInfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, godRecordArg1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, godRankRecords_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, minGodRank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, propertieType_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, haloLevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, haloValue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, selfcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, othercode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, haloCount_),
  };
  PB_PlayerAtt_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PB_PlayerAtt_descriptor_,
      PB_PlayerAtt::default_instance_,
      PB_PlayerAtt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PB_PlayerAtt, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PB_PlayerAtt));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_PlayerAtt_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RoomInfo_descriptor_, &RoomInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_FriendInfo_descriptor_, &PB_FriendInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RecordInfo_descriptor_, &RecordInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_DesignationRecord_descriptor_, &PB_DesignationRecord::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_PetAsset_descriptor_, &PB_PetAsset::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PB_PlayerAtt_descriptor_, &PB_PlayerAtt::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_PlayerAtt_2eproto() {
  delete RoomInfo::default_instance_;
  delete RoomInfo_reflection_;
  delete PB_FriendInfo::default_instance_;
  delete PB_FriendInfo_reflection_;
  delete RecordInfo::default_instance_;
  delete RecordInfo_reflection_;
  delete PB_DesignationRecord::default_instance_;
  delete PB_DesignationRecord_reflection_;
  delete PB_PetAsset::default_instance_;
  delete PB_PetAsset_reflection_;
  delete PB_PlayerAtt::default_instance_;
  delete PB_PlayerAtt_reflection_;
}

void protobuf_AddDesc_PlayerAtt_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_ProfessionInfo_2eproto();
  ::protobuf_AddDesc_RoleAtt_2eproto();
  ::protobuf_AddDesc_MissionInfo_2eproto();
  ::protobuf_AddDesc_ItemInfo_2eproto();
  ::protobuf_AddDesc_MailInfo_2eproto();
  ::protobuf_AddDesc_FightInfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017PlayerAtt.proto\032\024ProfessionInfo.proto\032"
    "\rRoleAtt.proto\032\021MissionInfo.proto\032\016ItemI"
    "nfo.proto\032\016MailInfo.proto\032\017FightInfo.pro"
    "to\"b\n\010RoomInfo\022\n\n\002id\030\001 \001(\005\022\013\n\003map\030\002 \001(\005\022"
    "\016\n\006leader\030\003 \001(\t\022\r\n\005count\030\004 \001(\005\022\r\n\005roles\030"
    "\005 \003(\005\022\017\n\007noPower\030\006 \001(\010\"\256\001\n\rPB_FriendInfo"
    "\022\022\n\006roleID\030\001 \001(\003:\002-1\022\014\n\004name\030\002 \001(\t\022/\n\016pr"
    "ofessionType\030\003 \001(\0162\027.PB_ProfessionInfo.T"
    "ype\022\021\n\tloveHeart\030\004 \001(\010\022\014\n\004flag\030\005 \001(\010\022\013\n\003"
    "vip\030\006 \001(\005\022\r\n\005level\030\007 \001(\005\022\r\n\005power\030\010 \001(\005\""
    "8\n\nRecordInfo\022\034\n\004role\030\001 \001(\0132\016.PB_FriendI"
    "nfo\022\014\n\004arg1\030\002 \001(\003\"2\n\024PB_DesignationRecor"
    "d\022\013\n\003has\030\001 \001(\010\022\r\n\005start\030\002 \001(\003\"^\n\013PB_PetA"
    "sset\022\016\n\002id\030\001 \001(\005:\002-1\022\014\n\004name\030\002 \001(\t\022\021\n\tpe"
    "t_level\030\003 \001(\005\022\017\n\007quality\030\004 \001(\005\022\r\n\005level\030"
    "\005 \001(\005\"\260\006\n\014PB_PlayerAtt\022\030\n\003att\030\001 \001(\0132\013.PB"
    "_RoleAtt\022&\n\010missions\030\002 \001(\0132\024.PB_MissionA"
    "llRecord\022$\n\013itemPackage\030\003 \001(\0132\017.PB_ItemP"
    "ackage\022\024\n\003alt\030\004 \001(\0132\007.PB_ALT\022\021\n\tprevLogi"
    "n\030\005 \001(\003\022\037\n\007friends\030\006 \003(\0132\016.PB_FriendInfo"
    "\022\021\n\tpassGuide\030\007 \003(\005\022\022\n\nprevLogout\030\010 \001(\003\022"
    "\020\n\010dayEvent\030\t \003(\005\022\022\n\nfixedEvent\030\n \003(\005\0220\n"
    "\021designationRecord\030\013 \003(\0132\025.PB_Designatio"
    "nRecord\022\027\n\017showDesignation\030\014 \003(\005\022\033\n\005mail"
    "s\030\r \003(\0132\014.PB_MailInfo\022\032\n\004pets\030\016 \003(\0132\014.PB"
    "_PetAsset\022\034\n\004fans\030\017 \003(\0132\016.PB_FriendInfo\022"
    "\024\n\014firstLoginIP\030\020 \001(\t\022\023\n\013lastLoginIP\030\021 \001"
    "(\t\022\020\n\010totalNum\030\022 \001(\005\022\020\n\010loginNum\030\023 \001(\005\022\022"
    "\n\ncreateTime\030\024 \001(\005\022\017\n\007faction\030\025 \001(\t\022\022\n\ng"
    "odDueDate\030\027 \001(\005\022\024\n\014godRankIndex\030\030 \001(\005\022%\n"
    "\rgodRecordInfo\030\031 \003(\0132\016.PB_FriendInfo\022\025\n\r"
    "godRecordArg1\030\032 \003(\003\022\026\n\016godRankRecords\030\033 "
    "\003(\010\022\026\n\nminGodRank\030\035 \001(\005:\002-1\022\025\n\rpropertie"
    "Type\030\036 \003(\005\022\021\n\thaloLevel\030\037 \003(\005\022\021\n\thaloVal"
    "ue\030  \003(\005\022\020\n\010selfcode\030! \001(\t\022\021\n\tothercode\030"
    "\" \001(\t\022\021\n\thaloCount\030# \003(\005", 1424);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PlayerAtt.proto", &protobuf_RegisterTypes);
  RoomInfo::default_instance_ = new RoomInfo();
  PB_FriendInfo::default_instance_ = new PB_FriendInfo();
  RecordInfo::default_instance_ = new RecordInfo();
  PB_DesignationRecord::default_instance_ = new PB_DesignationRecord();
  PB_PetAsset::default_instance_ = new PB_PetAsset();
  PB_PlayerAtt::default_instance_ = new PB_PlayerAtt();
  RoomInfo::default_instance_->InitAsDefaultInstance();
  PB_FriendInfo::default_instance_->InitAsDefaultInstance();
  RecordInfo::default_instance_->InitAsDefaultInstance();
  PB_DesignationRecord::default_instance_->InitAsDefaultInstance();
  PB_PetAsset::default_instance_->InitAsDefaultInstance();
  PB_PlayerAtt::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_PlayerAtt_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_PlayerAtt_2eproto {
  StaticDescriptorInitializer_PlayerAtt_2eproto() {
    protobuf_AddDesc_PlayerAtt_2eproto();
  }
} static_descriptor_initializer_PlayerAtt_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RoomInfo::kIdFieldNumber;
const int RoomInfo::kMapFieldNumber;
const int RoomInfo::kLeaderFieldNumber;
const int RoomInfo::kCountFieldNumber;
const int RoomInfo::kRolesFieldNumber;
const int RoomInfo::kNoPowerFieldNumber;
#endif  // !_MSC_VER

RoomInfo::RoomInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RoomInfo::InitAsDefaultInstance() {
}

RoomInfo::RoomInfo(const RoomInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RoomInfo::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  map_ = 0;
  leader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  count_ = 0;
  noPower_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomInfo::~RoomInfo() {
  SharedDtor();
}

void RoomInfo::SharedDtor() {
  if (leader_ != &::google::protobuf::internal::kEmptyString) {
    delete leader_;
  }
  if (this != default_instance_) {
  }
}

void RoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomInfo_descriptor_;
}

const RoomInfo& RoomInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PlayerAtt_2eproto();  return *default_instance_;
}

RoomInfo* RoomInfo::default_instance_ = NULL;

RoomInfo* RoomInfo::New() const {
  return new RoomInfo;
}

void RoomInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    map_ = 0;
    if (has_leader()) {
      if (leader_ != &::google::protobuf::internal::kEmptyString) {
        leader_->clear();
      }
    }
    count_ = 0;
    noPower_ = false;
  }
  roles_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_map;
        break;
      }
      
      // optional int32 map = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_map:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &map_)));
          set_has_map();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_leader;
        break;
      }
      
      // optional string leader = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_leader()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->leader().data(), this->leader().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }
      
      // optional int32 count = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_roles;
        break;
      }
      
      // repeated int32 roles = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roles:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_roles())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_roles())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_roles;
        if (input->ExpectTag(48)) goto parse_noPower;
        break;
      }
      
      // optional bool noPower = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_noPower:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &noPower_)));
          set_has_noPower();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional int32 map = 2;
  if (has_map()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->map(), output);
  }
  
  // optional string leader = 3;
  if (has_leader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader().data(), this->leader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->leader(), output);
  }
  
  // optional int32 count = 4;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }
  
  // repeated int32 roles = 5;
  for (int i = 0; i < this->roles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->roles(i), output);
  }
  
  // optional bool noPower = 6;
  if (has_noPower()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->noPower(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RoomInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional int32 map = 2;
  if (has_map()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->map(), target);
  }
  
  // optional string leader = 3;
  if (has_leader()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->leader().data(), this->leader().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->leader(), target);
  }
  
  // optional int32 count = 4;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }
  
  // repeated int32 roles = 5;
  for (int i = 0; i < this->roles_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->roles(i), target);
  }
  
  // optional bool noPower = 6;
  if (has_noPower()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->noPower(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RoomInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional int32 map = 2;
    if (has_map()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->map());
    }
    
    // optional string leader = 3;
    if (has_leader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->leader());
    }
    
    // optional int32 count = 4;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }
    
    // optional bool noPower = 6;
    if (has_noPower()) {
      total_size += 1 + 1;
    }
    
  }
  // repeated int32 roles = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->roles_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->roles(i));
    }
    total_size += 1 * this->roles_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RoomInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RoomInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RoomInfo::MergeFrom(const RoomInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  roles_.MergeFrom(from.roles_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_map()) {
      set_map(from.map());
    }
    if (from.has_leader()) {
      set_leader(from.leader());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_noPower()) {
      set_noPower(from.noPower());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomInfo::CopyFrom(const RoomInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfo::IsInitialized() const {
  
  return true;
}

void RoomInfo::Swap(RoomInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(map_, other->map_);
    std::swap(leader_, other->leader_);
    std::swap(count_, other->count_);
    roles_.Swap(&other->roles_);
    std::swap(noPower_, other->noPower_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RoomInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomInfo_descriptor_;
  metadata.reflection = RoomInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_FriendInfo::kRoleIDFieldNumber;
const int PB_FriendInfo::kNameFieldNumber;
const int PB_FriendInfo::kProfessionTypeFieldNumber;
const int PB_FriendInfo::kLoveHeartFieldNumber;
const int PB_FriendInfo::kFlagFieldNumber;
const int PB_FriendInfo::kVipFieldNumber;
const int PB_FriendInfo::kLevelFieldNumber;
const int PB_FriendInfo::kPowerFieldNumber;
#endif  // !_MSC_VER

PB_FriendInfo::PB_FriendInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PB_FriendInfo::InitAsDefaultInstance() {
}

PB_FriendInfo::PB_FriendInfo(const PB_FriendInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PB_FriendInfo::SharedCtor() {
  _cached_size_ = 0;
  roleID_ = GOOGLE_LONGLONG(-1);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  professionType_ = 0;
  loveHeart_ = false;
  flag_ = false;
  vip_ = 0;
  level_ = 0;
  power_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_FriendInfo::~PB_FriendInfo() {
  SharedDtor();
}

void PB_FriendInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void PB_FriendInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_FriendInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_FriendInfo_descriptor_;
}

const PB_FriendInfo& PB_FriendInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PlayerAtt_2eproto();  return *default_instance_;
}

PB_FriendInfo* PB_FriendInfo::default_instance_ = NULL;

PB_FriendInfo* PB_FriendInfo::New() const {
  return new PB_FriendInfo;
}

void PB_FriendInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleID_ = GOOGLE_LONGLONG(-1);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    professionType_ = 0;
    loveHeart_ = false;
    flag_ = false;
    vip_ = 0;
    level_ = 0;
    power_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_FriendInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 roleID = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleID_)));
          set_has_roleID();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_professionType;
        break;
      }
      
      // optional .PB_ProfessionInfo.Type professionType = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_professionType:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PB_ProfessionInfo_Type_IsValid(value)) {
            set_professionType(static_cast< ::PB_ProfessionInfo_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_loveHeart;
        break;
      }
      
      // optional bool loveHeart = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_loveHeart:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &loveHeart_)));
          set_has_loveHeart();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_flag;
        break;
      }
      
      // optional bool flag = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &flag_)));
          set_has_flag();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_vip;
        break;
      }
      
      // optional int32 vip = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_)));
          set_has_vip();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_level;
        break;
      }
      
      // optional int32 level = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_power;
        break;
      }
      
      // optional int32 power = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_power:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &power_)));
          set_has_power();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_FriendInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 roleID = 1 [default = -1];
  if (has_roleID()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleID(), output);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // optional .PB_ProfessionInfo.Type professionType = 3;
  if (has_professionType()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->professionType(), output);
  }
  
  // optional bool loveHeart = 4;
  if (has_loveHeart()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->loveHeart(), output);
  }
  
  // optional bool flag = 5;
  if (has_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->flag(), output);
  }
  
  // optional int32 vip = 6;
  if (has_vip()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->vip(), output);
  }
  
  // optional int32 level = 7;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->level(), output);
  }
  
  // optional int32 power = 8;
  if (has_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->power(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_FriendInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 roleID = 1 [default = -1];
  if (has_roleID()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleID(), target);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // optional .PB_ProfessionInfo.Type professionType = 3;
  if (has_professionType()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->professionType(), target);
  }
  
  // optional bool loveHeart = 4;
  if (has_loveHeart()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->loveHeart(), target);
  }
  
  // optional bool flag = 5;
  if (has_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->flag(), target);
  }
  
  // optional int32 vip = 6;
  if (has_vip()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->vip(), target);
  }
  
  // optional int32 level = 7;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->level(), target);
  }
  
  // optional int32 power = 8;
  if (has_power()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->power(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_FriendInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 roleID = 1 [default = -1];
    if (has_roleID()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->roleID());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional .PB_ProfessionInfo.Type professionType = 3;
    if (has_professionType()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->professionType());
    }
    
    // optional bool loveHeart = 4;
    if (has_loveHeart()) {
      total_size += 1 + 1;
    }
    
    // optional bool flag = 5;
    if (has_flag()) {
      total_size += 1 + 1;
    }
    
    // optional int32 vip = 6;
    if (has_vip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip());
    }
    
    // optional int32 level = 7;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
    // optional int32 power = 8;
    if (has_power()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->power());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_FriendInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_FriendInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_FriendInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_FriendInfo::MergeFrom(const PB_FriendInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleID()) {
      set_roleID(from.roleID());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_professionType()) {
      set_professionType(from.professionType());
    }
    if (from.has_loveHeart()) {
      set_loveHeart(from.loveHeart());
    }
    if (from.has_flag()) {
      set_flag(from.flag());
    }
    if (from.has_vip()) {
      set_vip(from.vip());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_power()) {
      set_power(from.power());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_FriendInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_FriendInfo::CopyFrom(const PB_FriendInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_FriendInfo::IsInitialized() const {
  
  return true;
}

void PB_FriendInfo::Swap(PB_FriendInfo* other) {
  if (other != this) {
    std::swap(roleID_, other->roleID_);
    std::swap(name_, other->name_);
    std::swap(professionType_, other->professionType_);
    std::swap(loveHeart_, other->loveHeart_);
    std::swap(flag_, other->flag_);
    std::swap(vip_, other->vip_);
    std::swap(level_, other->level_);
    std::swap(power_, other->power_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_FriendInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_FriendInfo_descriptor_;
  metadata.reflection = PB_FriendInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RecordInfo::kRoleFieldNumber;
const int RecordInfo::kArg1FieldNumber;
#endif  // !_MSC_VER

RecordInfo::RecordInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RecordInfo::InitAsDefaultInstance() {
  role_ = const_cast< ::PB_FriendInfo*>(&::PB_FriendInfo::default_instance());
}

RecordInfo::RecordInfo(const RecordInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RecordInfo::SharedCtor() {
  _cached_size_ = 0;
  role_ = NULL;
  arg1_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RecordInfo::~RecordInfo() {
  SharedDtor();
}

void RecordInfo::SharedDtor() {
  if (this != default_instance_) {
    delete role_;
  }
}

void RecordInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RecordInfo_descriptor_;
}

const RecordInfo& RecordInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PlayerAtt_2eproto();  return *default_instance_;
}

RecordInfo* RecordInfo::default_instance_ = NULL;

RecordInfo* RecordInfo::New() const {
  return new RecordInfo;
}

void RecordInfo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_role()) {
      if (role_ != NULL) role_->::PB_FriendInfo::Clear();
    }
    arg1_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RecordInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PB_FriendInfo role = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_role()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_arg1;
        break;
      }
      
      // optional int64 arg1 = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_arg1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &arg1_)));
          set_has_arg1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RecordInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .PB_FriendInfo role = 1;
  if (has_role()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->role(), output);
  }
  
  // optional int64 arg1 = 2;
  if (has_arg1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->arg1(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RecordInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PB_FriendInfo role = 1;
  if (has_role()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->role(), target);
  }
  
  // optional int64 arg1 = 2;
  if (has_arg1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->arg1(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RecordInfo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PB_FriendInfo role = 1;
    if (has_role()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->role());
    }
    
    // optional int64 arg1 = 2;
    if (has_arg1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->arg1());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RecordInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RecordInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RecordInfo::MergeFrom(const RecordInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_role()) {
      mutable_role()->::PB_FriendInfo::MergeFrom(from.role());
    }
    if (from.has_arg1()) {
      set_arg1(from.arg1());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RecordInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordInfo::CopyFrom(const RecordInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordInfo::IsInitialized() const {
  
  return true;
}

void RecordInfo::Swap(RecordInfo* other) {
  if (other != this) {
    std::swap(role_, other->role_);
    std::swap(arg1_, other->arg1_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RecordInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RecordInfo_descriptor_;
  metadata.reflection = RecordInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_DesignationRecord::kHasFieldNumber;
const int PB_DesignationRecord::kStartFieldNumber;
#endif  // !_MSC_VER

PB_DesignationRecord::PB_DesignationRecord()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PB_DesignationRecord::InitAsDefaultInstance() {
}

PB_DesignationRecord::PB_DesignationRecord(const PB_DesignationRecord& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PB_DesignationRecord::SharedCtor() {
  _cached_size_ = 0;
  has_ = false;
  start_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_DesignationRecord::~PB_DesignationRecord() {
  SharedDtor();
}

void PB_DesignationRecord::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PB_DesignationRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_DesignationRecord::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_DesignationRecord_descriptor_;
}

const PB_DesignationRecord& PB_DesignationRecord::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PlayerAtt_2eproto();  return *default_instance_;
}

PB_DesignationRecord* PB_DesignationRecord::default_instance_ = NULL;

PB_DesignationRecord* PB_DesignationRecord::New() const {
  return new PB_DesignationRecord;
}

void PB_DesignationRecord::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    has_ = false;
    start_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_DesignationRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool has = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_)));
          set_has_has();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_start;
        break;
      }
      
      // optional int64 start = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_)));
          set_has_start();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_DesignationRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool has = 1;
  if (has_has()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->has(), output);
  }
  
  // optional int64 start = 2;
  if (has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->start(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_DesignationRecord::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool has = 1;
  if (has_has()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->has(), target);
  }
  
  // optional int64 start = 2;
  if (has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->start(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_DesignationRecord::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool has = 1;
    if (has_has()) {
      total_size += 1 + 1;
    }
    
    // optional int64 start = 2;
    if (has_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_DesignationRecord::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_DesignationRecord* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_DesignationRecord*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_DesignationRecord::MergeFrom(const PB_DesignationRecord& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_has()) {
      set_has(from.has());
    }
    if (from.has_start()) {
      set_start(from.start());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_DesignationRecord::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_DesignationRecord::CopyFrom(const PB_DesignationRecord& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_DesignationRecord::IsInitialized() const {
  
  return true;
}

void PB_DesignationRecord::Swap(PB_DesignationRecord* other) {
  if (other != this) {
    std::swap(has_, other->has_);
    std::swap(start_, other->start_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_DesignationRecord::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_DesignationRecord_descriptor_;
  metadata.reflection = PB_DesignationRecord_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_PetAsset::kIdFieldNumber;
const int PB_PetAsset::kNameFieldNumber;
const int PB_PetAsset::kPetLevelFieldNumber;
const int PB_PetAsset::kQualityFieldNumber;
const int PB_PetAsset::kLevelFieldNumber;
#endif  // !_MSC_VER

PB_PetAsset::PB_PetAsset()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PB_PetAsset::InitAsDefaultInstance() {
}

PB_PetAsset::PB_PetAsset(const PB_PetAsset& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PB_PetAsset::SharedCtor() {
  _cached_size_ = 0;
  id_ = -1;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  pet_level_ = 0;
  quality_ = 0;
  level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_PetAsset::~PB_PetAsset() {
  SharedDtor();
}

void PB_PetAsset::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void PB_PetAsset::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_PetAsset::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PetAsset_descriptor_;
}

const PB_PetAsset& PB_PetAsset::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PlayerAtt_2eproto();  return *default_instance_;
}

PB_PetAsset* PB_PetAsset::default_instance_ = NULL;

PB_PetAsset* PB_PetAsset::New() const {
  return new PB_PetAsset;
}

void PB_PetAsset::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = -1;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    pet_level_ = 0;
    quality_ = 0;
    level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_PetAsset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_pet_level;
        break;
      }
      
      // optional int32 pet_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pet_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pet_level_)));
          set_has_pet_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_quality;
        break;
      }
      
      // optional int32 quality = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }
      
      // optional int32 level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_PetAsset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1 [default = -1];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // optional int32 pet_level = 3;
  if (has_pet_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->pet_level(), output);
  }
  
  // optional int32 quality = 4;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->quality(), output);
  }
  
  // optional int32 level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->level(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_PetAsset::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1 [default = -1];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // optional int32 pet_level = 3;
  if (has_pet_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->pet_level(), target);
  }
  
  // optional int32 quality = 4;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->quality(), target);
  }
  
  // optional int32 level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->level(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_PetAsset::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional int32 pet_level = 3;
    if (has_pet_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pet_level());
    }
    
    // optional int32 quality = 4;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->quality());
    }
    
    // optional int32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_PetAsset::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_PetAsset* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_PetAsset*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_PetAsset::MergeFrom(const PB_PetAsset& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_pet_level()) {
      set_pet_level(from.pet_level());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_PetAsset::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PetAsset::CopyFrom(const PB_PetAsset& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PetAsset::IsInitialized() const {
  
  return true;
}

void PB_PetAsset::Swap(PB_PetAsset* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(pet_level_, other->pet_level_);
    std::swap(quality_, other->quality_);
    std::swap(level_, other->level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_PetAsset::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PetAsset_descriptor_;
  metadata.reflection = PB_PetAsset_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PB_PlayerAtt::kAttFieldNumber;
const int PB_PlayerAtt::kMissionsFieldNumber;
const int PB_PlayerAtt::kItemPackageFieldNumber;
const int PB_PlayerAtt::kAltFieldNumber;
const int PB_PlayerAtt::kPrevLoginFieldNumber;
const int PB_PlayerAtt::kFriendsFieldNumber;
const int PB_PlayerAtt::kPassGuideFieldNumber;
const int PB_PlayerAtt::kPrevLogoutFieldNumber;
const int PB_PlayerAtt::kDayEventFieldNumber;
const int PB_PlayerAtt::kFixedEventFieldNumber;
const int PB_PlayerAtt::kDesignationRecordFieldNumber;
const int PB_PlayerAtt::kShowDesignationFieldNumber;
const int PB_PlayerAtt::kMailsFieldNumber;
const int PB_PlayerAtt::kPetsFieldNumber;
const int PB_PlayerAtt::kFansFieldNumber;
const int PB_PlayerAtt::kFirstLoginIPFieldNumber;
const int PB_PlayerAtt::kLastLoginIPFieldNumber;
const int PB_PlayerAtt::kTotalNumFieldNumber;
const int PB_PlayerAtt::kLoginNumFieldNumber;
const int PB_PlayerAtt::kCreateTimeFieldNumber;
const int PB_PlayerAtt::kFactionFieldNumber;
const int PB_PlayerAtt::kGodDueDateFieldNumber;
const int PB_PlayerAtt::kGodRankIndexFieldNumber;
const int PB_PlayerAtt::kGodRecordInfoFieldNumber;
const int PB_PlayerAtt::kGodRecordArg1FieldNumber;
const int PB_PlayerAtt::kGodRankRecordsFieldNumber;
const int PB_PlayerAtt::kMinGodRankFieldNumber;
const int PB_PlayerAtt::kPropertieTypeFieldNumber;
const int PB_PlayerAtt::kHaloLevelFieldNumber;
const int PB_PlayerAtt::kHaloValueFieldNumber;
const int PB_PlayerAtt::kSelfcodeFieldNumber;
const int PB_PlayerAtt::kOthercodeFieldNumber;
const int PB_PlayerAtt::kHaloCountFieldNumber;
#endif  // !_MSC_VER

PB_PlayerAtt::PB_PlayerAtt()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PB_PlayerAtt::InitAsDefaultInstance() {
  att_ = const_cast< ::PB_RoleAtt*>(&::PB_RoleAtt::default_instance());
  missions_ = const_cast< ::PB_MissionAllRecord*>(&::PB_MissionAllRecord::default_instance());
  itemPackage_ = const_cast< ::PB_ItemPackage*>(&::PB_ItemPackage::default_instance());
  alt_ = const_cast< ::PB_ALT*>(&::PB_ALT::default_instance());
}

PB_PlayerAtt::PB_PlayerAtt(const PB_PlayerAtt& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PB_PlayerAtt::SharedCtor() {
  _cached_size_ = 0;
  att_ = NULL;
  missions_ = NULL;
  itemPackage_ = NULL;
  alt_ = NULL;
  prevLogin_ = GOOGLE_LONGLONG(0);
  prevLogout_ = GOOGLE_LONGLONG(0);
  firstLoginIP_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  lastLoginIP_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  totalNum_ = 0;
  loginNum_ = 0;
  createTime_ = 0;
  faction_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  godDueDate_ = 0;
  godRankIndex_ = 0;
  minGodRank_ = -1;
  selfcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  othercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PB_PlayerAtt::~PB_PlayerAtt() {
  SharedDtor();
}

void PB_PlayerAtt::SharedDtor() {
  if (firstLoginIP_ != &::google::protobuf::internal::kEmptyString) {
    delete firstLoginIP_;
  }
  if (lastLoginIP_ != &::google::protobuf::internal::kEmptyString) {
    delete lastLoginIP_;
  }
  if (faction_ != &::google::protobuf::internal::kEmptyString) {
    delete faction_;
  }
  if (selfcode_ != &::google::protobuf::internal::kEmptyString) {
    delete selfcode_;
  }
  if (othercode_ != &::google::protobuf::internal::kEmptyString) {
    delete othercode_;
  }
  if (this != default_instance_) {
    delete att_;
    delete missions_;
    delete itemPackage_;
    delete alt_;
  }
}

void PB_PlayerAtt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PB_PlayerAtt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PB_PlayerAtt_descriptor_;
}

const PB_PlayerAtt& PB_PlayerAtt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_PlayerAtt_2eproto();  return *default_instance_;
}

PB_PlayerAtt* PB_PlayerAtt::default_instance_ = NULL;

PB_PlayerAtt* PB_PlayerAtt::New() const {
  return new PB_PlayerAtt;
}

void PB_PlayerAtt::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_att()) {
      if (att_ != NULL) att_->::PB_RoleAtt::Clear();
    }
    if (has_missions()) {
      if (missions_ != NULL) missions_->::PB_MissionAllRecord::Clear();
    }
    if (has_itemPackage()) {
      if (itemPackage_ != NULL) itemPackage_->::PB_ItemPackage::Clear();
    }
    if (has_alt()) {
      if (alt_ != NULL) alt_->::PB_ALT::Clear();
    }
    prevLogin_ = GOOGLE_LONGLONG(0);
    prevLogout_ = GOOGLE_LONGLONG(0);
  }
  if (_has_bits_[15 / 32] & (0xffu << (15 % 32))) {
    if (has_firstLoginIP()) {
      if (firstLoginIP_ != &::google::protobuf::internal::kEmptyString) {
        firstLoginIP_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_lastLoginIP()) {
      if (lastLoginIP_ != &::google::protobuf::internal::kEmptyString) {
        lastLoginIP_->clear();
      }
    }
    totalNum_ = 0;
    loginNum_ = 0;
    createTime_ = 0;
    if (has_faction()) {
      if (faction_ != &::google::protobuf::internal::kEmptyString) {
        faction_->clear();
      }
    }
    godDueDate_ = 0;
    godRankIndex_ = 0;
  }
  if (_has_bits_[26 / 32] & (0xffu << (26 % 32))) {
    minGodRank_ = -1;
    if (has_selfcode()) {
      if (selfcode_ != &::google::protobuf::internal::kEmptyString) {
        selfcode_->clear();
      }
    }
    if (has_othercode()) {
      if (othercode_ != &::google::protobuf::internal::kEmptyString) {
        othercode_->clear();
      }
    }
  }
  friends_.Clear();
  passGuide_.Clear();
  dayEvent_.Clear();
  fixedEvent_.Clear();
  designationRecord_.Clear();
  showDesignation_.Clear();
  mails_.Clear();
  pets_.Clear();
  fans_.Clear();
  godRecordInfo_.Clear();
  godRecordArg1_.Clear();
  godRankRecords_.Clear();
  propertieType_.Clear();
  haloLevel_.Clear();
  haloValue_.Clear();
  haloCount_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PB_PlayerAtt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PB_RoleAtt att = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_att()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_missions;
        break;
      }
      
      // optional .PB_MissionAllRecord missions = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_missions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_missions()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_itemPackage;
        break;
      }
      
      // optional .PB_ItemPackage itemPackage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_itemPackage:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_itemPackage()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_alt;
        break;
      }
      
      // optional .PB_ALT alt = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_alt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alt()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_prevLogin;
        break;
      }
      
      // optional int64 prevLogin = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prevLogin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &prevLogin_)));
          set_has_prevLogin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_friends;
        break;
      }
      
      // repeated .PB_FriendInfo friends = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_friends:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friends()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_friends;
        if (input->ExpectTag(56)) goto parse_passGuide;
        break;
      }
      
      // repeated int32 passGuide = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_passGuide:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_passGuide())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_passGuide())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_passGuide;
        if (input->ExpectTag(64)) goto parse_prevLogout;
        break;
      }
      
      // optional int64 prevLogout = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prevLogout:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &prevLogout_)));
          set_has_prevLogout();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_dayEvent;
        break;
      }
      
      // repeated int32 dayEvent = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dayEvent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 72, input, this->mutable_dayEvent())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dayEvent())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_dayEvent;
        if (input->ExpectTag(80)) goto parse_fixedEvent;
        break;
      }
      
      // repeated int32 fixedEvent = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fixedEvent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 80, input, this->mutable_fixedEvent())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_fixedEvent())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_fixedEvent;
        if (input->ExpectTag(90)) goto parse_designationRecord;
        break;
      }
      
      // repeated .PB_DesignationRecord designationRecord = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_designationRecord:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_designationRecord()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_designationRecord;
        if (input->ExpectTag(96)) goto parse_showDesignation;
        break;
      }
      
      // repeated int32 showDesignation = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_showDesignation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 96, input, this->mutable_showDesignation())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_showDesignation())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_showDesignation;
        if (input->ExpectTag(106)) goto parse_mails;
        break;
      }
      
      // repeated .PB_MailInfo mails = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_mails:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mails()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_mails;
        if (input->ExpectTag(114)) goto parse_pets;
        break;
      }
      
      // repeated .PB_PetAsset pets = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pets()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_pets;
        if (input->ExpectTag(122)) goto parse_fans;
        break;
      }
      
      // repeated .PB_FriendInfo fans = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fans:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fans()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_fans;
        if (input->ExpectTag(130)) goto parse_firstLoginIP;
        break;
      }
      
      // optional string firstLoginIP = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_firstLoginIP:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_firstLoginIP()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->firstLoginIP().data(), this->firstLoginIP().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_lastLoginIP;
        break;
      }
      
      // optional string lastLoginIP = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lastLoginIP:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastLoginIP()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->lastLoginIP().data(), this->lastLoginIP().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_totalNum;
        break;
      }
      
      // optional int32 totalNum = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_totalNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totalNum_)));
          set_has_totalNum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_loginNum;
        break;
      }
      
      // optional int32 loginNum = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_loginNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &loginNum_)));
          set_has_loginNum();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_createTime;
        break;
      }
      
      // optional int32 createTime = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_createTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &createTime_)));
          set_has_createTime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_faction;
        break;
      }
      
      // optional string faction = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_faction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_faction()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->faction().data(), this->faction().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_godDueDate;
        break;
      }
      
      // optional int32 godDueDate = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_godDueDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &godDueDate_)));
          set_has_godDueDate();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_godRankIndex;
        break;
      }
      
      // optional int32 godRankIndex = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_godRankIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &godRankIndex_)));
          set_has_godRankIndex();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_godRecordInfo;
        break;
      }
      
      // repeated .PB_FriendInfo godRecordInfo = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_godRecordInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_godRecordInfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_godRecordInfo;
        if (input->ExpectTag(208)) goto parse_godRecordArg1;
        break;
      }
      
      // repeated int64 godRecordArg1 = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_godRecordArg1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 208, input, this->mutable_godRecordArg1())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_godRecordArg1())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_godRecordArg1;
        if (input->ExpectTag(216)) goto parse_godRankRecords;
        break;
      }
      
      // repeated bool godRankRecords = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_godRankRecords:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 216, input, this->mutable_godRankRecords())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_godRankRecords())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_godRankRecords;
        if (input->ExpectTag(232)) goto parse_minGodRank;
        break;
      }
      
      // optional int32 minGodRank = 29 [default = -1];
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_minGodRank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minGodRank_)));
          set_has_minGodRank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_propertieType;
        break;
      }
      
      // repeated int32 propertieType = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_propertieType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 240, input, this->mutable_propertieType())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_propertieType())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_propertieType;
        if (input->ExpectTag(248)) goto parse_haloLevel;
        break;
      }
      
      // repeated int32 haloLevel = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_haloLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 248, input, this->mutable_haloLevel())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_haloLevel())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_haloLevel;
        if (input->ExpectTag(256)) goto parse_haloValue;
        break;
      }
      
      // repeated int32 haloValue = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_haloValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 256, input, this->mutable_haloValue())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_haloValue())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_haloValue;
        if (input->ExpectTag(266)) goto parse_selfcode;
        break;
      }
      
      // optional string selfcode = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_selfcode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selfcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->selfcode().data(), this->selfcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(274)) goto parse_othercode;
        break;
      }
      
      // optional string othercode = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_othercode:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_othercode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->othercode().data(), this->othercode().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_haloCount;
        break;
      }
      
      // repeated int32 haloCount = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_haloCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 280, input, this->mutable_haloCount())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_haloCount())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_haloCount;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PB_PlayerAtt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .PB_RoleAtt att = 1;
  if (has_att()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->att(), output);
  }
  
  // optional .PB_MissionAllRecord missions = 2;
  if (has_missions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->missions(), output);
  }
  
  // optional .PB_ItemPackage itemPackage = 3;
  if (has_itemPackage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->itemPackage(), output);
  }
  
  // optional .PB_ALT alt = 4;
  if (has_alt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->alt(), output);
  }
  
  // optional int64 prevLogin = 5;
  if (has_prevLogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->prevLogin(), output);
  }
  
  // repeated .PB_FriendInfo friends = 6;
  for (int i = 0; i < this->friends_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->friends(i), output);
  }
  
  // repeated int32 passGuide = 7;
  for (int i = 0; i < this->passGuide_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->passGuide(i), output);
  }
  
  // optional int64 prevLogout = 8;
  if (has_prevLogout()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->prevLogout(), output);
  }
  
  // repeated int32 dayEvent = 9;
  for (int i = 0; i < this->dayEvent_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      9, this->dayEvent(i), output);
  }
  
  // repeated int32 fixedEvent = 10;
  for (int i = 0; i < this->fixedEvent_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      10, this->fixedEvent(i), output);
  }
  
  // repeated .PB_DesignationRecord designationRecord = 11;
  for (int i = 0; i < this->designationRecord_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->designationRecord(i), output);
  }
  
  // repeated int32 showDesignation = 12;
  for (int i = 0; i < this->showDesignation_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      12, this->showDesignation(i), output);
  }
  
  // repeated .PB_MailInfo mails = 13;
  for (int i = 0; i < this->mails_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->mails(i), output);
  }
  
  // repeated .PB_PetAsset pets = 14;
  for (int i = 0; i < this->pets_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->pets(i), output);
  }
  
  // repeated .PB_FriendInfo fans = 15;
  for (int i = 0; i < this->fans_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->fans(i), output);
  }
  
  // optional string firstLoginIP = 16;
  if (has_firstLoginIP()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->firstLoginIP().data(), this->firstLoginIP().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      16, this->firstLoginIP(), output);
  }
  
  // optional string lastLoginIP = 17;
  if (has_lastLoginIP()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lastLoginIP().data(), this->lastLoginIP().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->lastLoginIP(), output);
  }
  
  // optional int32 totalNum = 18;
  if (has_totalNum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->totalNum(), output);
  }
  
  // optional int32 loginNum = 19;
  if (has_loginNum()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->loginNum(), output);
  }
  
  // optional int32 createTime = 20;
  if (has_createTime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->createTime(), output);
  }
  
  // optional string faction = 21;
  if (has_faction()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->faction().data(), this->faction().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->faction(), output);
  }
  
  // optional int32 godDueDate = 23;
  if (has_godDueDate()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->godDueDate(), output);
  }
  
  // optional int32 godRankIndex = 24;
  if (has_godRankIndex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->godRankIndex(), output);
  }
  
  // repeated .PB_FriendInfo godRecordInfo = 25;
  for (int i = 0; i < this->godRecordInfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->godRecordInfo(i), output);
  }
  
  // repeated int64 godRecordArg1 = 26;
  for (int i = 0; i < this->godRecordArg1_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      26, this->godRecordArg1(i), output);
  }
  
  // repeated bool godRankRecords = 27;
  for (int i = 0; i < this->godRankRecords_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      27, this->godRankRecords(i), output);
  }
  
  // optional int32 minGodRank = 29 [default = -1];
  if (has_minGodRank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->minGodRank(), output);
  }
  
  // repeated int32 propertieType = 30;
  for (int i = 0; i < this->propertieType_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      30, this->propertieType(i), output);
  }
  
  // repeated int32 haloLevel = 31;
  for (int i = 0; i < this->haloLevel_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      31, this->haloLevel(i), output);
  }
  
  // repeated int32 haloValue = 32;
  for (int i = 0; i < this->haloValue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      32, this->haloValue(i), output);
  }
  
  // optional string selfcode = 33;
  if (has_selfcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->selfcode().data(), this->selfcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      33, this->selfcode(), output);
  }
  
  // optional string othercode = 34;
  if (has_othercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->othercode().data(), this->othercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      34, this->othercode(), output);
  }
  
  // repeated int32 haloCount = 35;
  for (int i = 0; i < this->haloCount_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      35, this->haloCount(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PB_PlayerAtt::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .PB_RoleAtt att = 1;
  if (has_att()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->att(), target);
  }
  
  // optional .PB_MissionAllRecord missions = 2;
  if (has_missions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->missions(), target);
  }
  
  // optional .PB_ItemPackage itemPackage = 3;
  if (has_itemPackage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->itemPackage(), target);
  }
  
  // optional .PB_ALT alt = 4;
  if (has_alt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->alt(), target);
  }
  
  // optional int64 prevLogin = 5;
  if (has_prevLogin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->prevLogin(), target);
  }
  
  // repeated .PB_FriendInfo friends = 6;
  for (int i = 0; i < this->friends_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->friends(i), target);
  }
  
  // repeated int32 passGuide = 7;
  for (int i = 0; i < this->passGuide_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->passGuide(i), target);
  }
  
  // optional int64 prevLogout = 8;
  if (has_prevLogout()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->prevLogout(), target);
  }
  
  // repeated int32 dayEvent = 9;
  for (int i = 0; i < this->dayEvent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(9, this->dayEvent(i), target);
  }
  
  // repeated int32 fixedEvent = 10;
  for (int i = 0; i < this->fixedEvent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(10, this->fixedEvent(i), target);
  }
  
  // repeated .PB_DesignationRecord designationRecord = 11;
  for (int i = 0; i < this->designationRecord_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->designationRecord(i), target);
  }
  
  // repeated int32 showDesignation = 12;
  for (int i = 0; i < this->showDesignation_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(12, this->showDesignation(i), target);
  }
  
  // repeated .PB_MailInfo mails = 13;
  for (int i = 0; i < this->mails_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->mails(i), target);
  }
  
  // repeated .PB_PetAsset pets = 14;
  for (int i = 0; i < this->pets_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->pets(i), target);
  }
  
  // repeated .PB_FriendInfo fans = 15;
  for (int i = 0; i < this->fans_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->fans(i), target);
  }
  
  // optional string firstLoginIP = 16;
  if (has_firstLoginIP()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->firstLoginIP().data(), this->firstLoginIP().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->firstLoginIP(), target);
  }
  
  // optional string lastLoginIP = 17;
  if (has_lastLoginIP()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->lastLoginIP().data(), this->lastLoginIP().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->lastLoginIP(), target);
  }
  
  // optional int32 totalNum = 18;
  if (has_totalNum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->totalNum(), target);
  }
  
  // optional int32 loginNum = 19;
  if (has_loginNum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->loginNum(), target);
  }
  
  // optional int32 createTime = 20;
  if (has_createTime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->createTime(), target);
  }
  
  // optional string faction = 21;
  if (has_faction()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->faction().data(), this->faction().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->faction(), target);
  }
  
  // optional int32 godDueDate = 23;
  if (has_godDueDate()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->godDueDate(), target);
  }
  
  // optional int32 godRankIndex = 24;
  if (has_godRankIndex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->godRankIndex(), target);
  }
  
  // repeated .PB_FriendInfo godRecordInfo = 25;
  for (int i = 0; i < this->godRecordInfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->godRecordInfo(i), target);
  }
  
  // repeated int64 godRecordArg1 = 26;
  for (int i = 0; i < this->godRecordArg1_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(26, this->godRecordArg1(i), target);
  }
  
  // repeated bool godRankRecords = 27;
  for (int i = 0; i < this->godRankRecords_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(27, this->godRankRecords(i), target);
  }
  
  // optional int32 minGodRank = 29 [default = -1];
  if (has_minGodRank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->minGodRank(), target);
  }
  
  // repeated int32 propertieType = 30;
  for (int i = 0; i < this->propertieType_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(30, this->propertieType(i), target);
  }
  
  // repeated int32 haloLevel = 31;
  for (int i = 0; i < this->haloLevel_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(31, this->haloLevel(i), target);
  }
  
  // repeated int32 haloValue = 32;
  for (int i = 0; i < this->haloValue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(32, this->haloValue(i), target);
  }
  
  // optional string selfcode = 33;
  if (has_selfcode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->selfcode().data(), this->selfcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        33, this->selfcode(), target);
  }
  
  // optional string othercode = 34;
  if (has_othercode()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->othercode().data(), this->othercode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->othercode(), target);
  }
  
  // repeated int32 haloCount = 35;
  for (int i = 0; i < this->haloCount_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(35, this->haloCount(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PB_PlayerAtt::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .PB_RoleAtt att = 1;
    if (has_att()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->att());
    }
    
    // optional .PB_MissionAllRecord missions = 2;
    if (has_missions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->missions());
    }
    
    // optional .PB_ItemPackage itemPackage = 3;
    if (has_itemPackage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->itemPackage());
    }
    
    // optional .PB_ALT alt = 4;
    if (has_alt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->alt());
    }
    
    // optional int64 prevLogin = 5;
    if (has_prevLogin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->prevLogin());
    }
    
    // optional int64 prevLogout = 8;
    if (has_prevLogout()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->prevLogout());
    }
    
  }
  if (_has_bits_[15 / 32] & (0xffu << (15 % 32))) {
    // optional string firstLoginIP = 16;
    if (has_firstLoginIP()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->firstLoginIP());
    }
    
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string lastLoginIP = 17;
    if (has_lastLoginIP()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lastLoginIP());
    }
    
    // optional int32 totalNum = 18;
    if (has_totalNum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totalNum());
    }
    
    // optional int32 loginNum = 19;
    if (has_loginNum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->loginNum());
    }
    
    // optional int32 createTime = 20;
    if (has_createTime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->createTime());
    }
    
    // optional string faction = 21;
    if (has_faction()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->faction());
    }
    
    // optional int32 godDueDate = 23;
    if (has_godDueDate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->godDueDate());
    }
    
    // optional int32 godRankIndex = 24;
    if (has_godRankIndex()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->godRankIndex());
    }
    
  }
  if (_has_bits_[26 / 32] & (0xffu << (26 % 32))) {
    // optional int32 minGodRank = 29 [default = -1];
    if (has_minGodRank()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minGodRank());
    }
    
    // optional string selfcode = 33;
    if (has_selfcode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->selfcode());
    }
    
    // optional string othercode = 34;
    if (has_othercode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->othercode());
    }
    
  }
  // repeated .PB_FriendInfo friends = 6;
  total_size += 1 * this->friends_size();
  for (int i = 0; i < this->friends_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->friends(i));
  }
  
  // repeated int32 passGuide = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->passGuide_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->passGuide(i));
    }
    total_size += 1 * this->passGuide_size() + data_size;
  }
  
  // repeated int32 dayEvent = 9;
  {
    int data_size = 0;
    for (int i = 0; i < this->dayEvent_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->dayEvent(i));
    }
    total_size += 1 * this->dayEvent_size() + data_size;
  }
  
  // repeated int32 fixedEvent = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->fixedEvent_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->fixedEvent(i));
    }
    total_size += 1 * this->fixedEvent_size() + data_size;
  }
  
  // repeated .PB_DesignationRecord designationRecord = 11;
  total_size += 1 * this->designationRecord_size();
  for (int i = 0; i < this->designationRecord_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->designationRecord(i));
  }
  
  // repeated int32 showDesignation = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->showDesignation_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->showDesignation(i));
    }
    total_size += 1 * this->showDesignation_size() + data_size;
  }
  
  // repeated .PB_MailInfo mails = 13;
  total_size += 1 * this->mails_size();
  for (int i = 0; i < this->mails_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->mails(i));
  }
  
  // repeated .PB_PetAsset pets = 14;
  total_size += 1 * this->pets_size();
  for (int i = 0; i < this->pets_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pets(i));
  }
  
  // repeated .PB_FriendInfo fans = 15;
  total_size += 1 * this->fans_size();
  for (int i = 0; i < this->fans_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fans(i));
  }
  
  // repeated .PB_FriendInfo godRecordInfo = 25;
  total_size += 2 * this->godRecordInfo_size();
  for (int i = 0; i < this->godRecordInfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->godRecordInfo(i));
  }
  
  // repeated int64 godRecordArg1 = 26;
  {
    int data_size = 0;
    for (int i = 0; i < this->godRecordArg1_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->godRecordArg1(i));
    }
    total_size += 2 * this->godRecordArg1_size() + data_size;
  }
  
  // repeated bool godRankRecords = 27;
  {
    int data_size = 0;
    data_size = 1 * this->godRankRecords_size();
    total_size += 2 * this->godRankRecords_size() + data_size;
  }
  
  // repeated int32 propertieType = 30;
  {
    int data_size = 0;
    for (int i = 0; i < this->propertieType_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->propertieType(i));
    }
    total_size += 2 * this->propertieType_size() + data_size;
  }
  
  // repeated int32 haloLevel = 31;
  {
    int data_size = 0;
    for (int i = 0; i < this->haloLevel_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->haloLevel(i));
    }
    total_size += 2 * this->haloLevel_size() + data_size;
  }
  
  // repeated int32 haloValue = 32;
  {
    int data_size = 0;
    for (int i = 0; i < this->haloValue_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->haloValue(i));
    }
    total_size += 2 * this->haloValue_size() + data_size;
  }
  
  // repeated int32 haloCount = 35;
  {
    int data_size = 0;
    for (int i = 0; i < this->haloCount_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->haloCount(i));
    }
    total_size += 2 * this->haloCount_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PB_PlayerAtt::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PB_PlayerAtt* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PB_PlayerAtt*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PB_PlayerAtt::MergeFrom(const PB_PlayerAtt& from) {
  GOOGLE_CHECK_NE(&from, this);
  friends_.MergeFrom(from.friends_);
  passGuide_.MergeFrom(from.passGuide_);
  dayEvent_.MergeFrom(from.dayEvent_);
  fixedEvent_.MergeFrom(from.fixedEvent_);
  designationRecord_.MergeFrom(from.designationRecord_);
  showDesignation_.MergeFrom(from.showDesignation_);
  mails_.MergeFrom(from.mails_);
  pets_.MergeFrom(from.pets_);
  fans_.MergeFrom(from.fans_);
  godRecordInfo_.MergeFrom(from.godRecordInfo_);
  godRecordArg1_.MergeFrom(from.godRecordArg1_);
  godRankRecords_.MergeFrom(from.godRankRecords_);
  propertieType_.MergeFrom(from.propertieType_);
  haloLevel_.MergeFrom(from.haloLevel_);
  haloValue_.MergeFrom(from.haloValue_);
  haloCount_.MergeFrom(from.haloCount_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_att()) {
      mutable_att()->::PB_RoleAtt::MergeFrom(from.att());
    }
    if (from.has_missions()) {
      mutable_missions()->::PB_MissionAllRecord::MergeFrom(from.missions());
    }
    if (from.has_itemPackage()) {
      mutable_itemPackage()->::PB_ItemPackage::MergeFrom(from.itemPackage());
    }
    if (from.has_alt()) {
      mutable_alt()->::PB_ALT::MergeFrom(from.alt());
    }
    if (from.has_prevLogin()) {
      set_prevLogin(from.prevLogin());
    }
    if (from.has_prevLogout()) {
      set_prevLogout(from.prevLogout());
    }
  }
  if (from._has_bits_[15 / 32] & (0xffu << (15 % 32))) {
    if (from.has_firstLoginIP()) {
      set_firstLoginIP(from.firstLoginIP());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_lastLoginIP()) {
      set_lastLoginIP(from.lastLoginIP());
    }
    if (from.has_totalNum()) {
      set_totalNum(from.totalNum());
    }
    if (from.has_loginNum()) {
      set_loginNum(from.loginNum());
    }
    if (from.has_createTime()) {
      set_createTime(from.createTime());
    }
    if (from.has_faction()) {
      set_faction(from.faction());
    }
    if (from.has_godDueDate()) {
      set_godDueDate(from.godDueDate());
    }
    if (from.has_godRankIndex()) {
      set_godRankIndex(from.godRankIndex());
    }
  }
  if (from._has_bits_[26 / 32] & (0xffu << (26 % 32))) {
    if (from.has_minGodRank()) {
      set_minGodRank(from.minGodRank());
    }
    if (from.has_selfcode()) {
      set_selfcode(from.selfcode());
    }
    if (from.has_othercode()) {
      set_othercode(from.othercode());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PB_PlayerAtt::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PB_PlayerAtt::CopyFrom(const PB_PlayerAtt& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PlayerAtt::IsInitialized() const {
  
  return true;
}

void PB_PlayerAtt::Swap(PB_PlayerAtt* other) {
  if (other != this) {
    std::swap(att_, other->att_);
    std::swap(missions_, other->missions_);
    std::swap(itemPackage_, other->itemPackage_);
    std::swap(alt_, other->alt_);
    std::swap(prevLogin_, other->prevLogin_);
    friends_.Swap(&other->friends_);
    passGuide_.Swap(&other->passGuide_);
    std::swap(prevLogout_, other->prevLogout_);
    dayEvent_.Swap(&other->dayEvent_);
    fixedEvent_.Swap(&other->fixedEvent_);
    designationRecord_.Swap(&other->designationRecord_);
    showDesignation_.Swap(&other->showDesignation_);
    mails_.Swap(&other->mails_);
    pets_.Swap(&other->pets_);
    fans_.Swap(&other->fans_);
    std::swap(firstLoginIP_, other->firstLoginIP_);
    std::swap(lastLoginIP_, other->lastLoginIP_);
    std::swap(totalNum_, other->totalNum_);
    std::swap(loginNum_, other->loginNum_);
    std::swap(createTime_, other->createTime_);
    std::swap(faction_, other->faction_);
    std::swap(godDueDate_, other->godDueDate_);
    std::swap(godRankIndex_, other->godRankIndex_);
    godRecordInfo_.Swap(&other->godRecordInfo_);
    godRecordArg1_.Swap(&other->godRecordArg1_);
    godRankRecords_.Swap(&other->godRankRecords_);
    std::swap(minGodRank_, other->minGodRank_);
    propertieType_.Swap(&other->propertieType_);
    haloLevel_.Swap(&other->haloLevel_);
    haloValue_.Swap(&other->haloValue_);
    std::swap(selfcode_, other->selfcode_);
    std::swap(othercode_, other->othercode_);
    haloCount_.Swap(&other->haloCount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PB_PlayerAtt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PB_PlayerAtt_descriptor_;
  metadata.reflection = PB_PlayerAtt_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
