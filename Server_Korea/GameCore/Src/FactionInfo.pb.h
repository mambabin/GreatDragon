// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FactionInfo.proto

#ifndef PROTOBUF_FactionInfo_2eproto__INCLUDED
#define PROTOBUF_FactionInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ProfessionInfo.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FactionInfo_2eproto();
void protobuf_AssignDesc_FactionInfo_2eproto();
void protobuf_ShutdownFile_FactionInfo_2eproto();

class FactionBase;
class FactionBaseInfo;
class SociatySkillBase;
class SociatySkillBaseInfo;
class PB_ReservationToString;

// ===================================================================

class FactionBase : public ::google::protobuf::Message {
 public:
  FactionBase();
  virtual ~FactionBase();
  
  FactionBase(const FactionBase& from);
  
  inline FactionBase& operator=(const FactionBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FactionBase& default_instance();
  
  void Swap(FactionBase* other);
  
  // implements Message ----------------------------------------------
  
  FactionBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FactionBase& from);
  void MergeFrom(const FactionBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int64 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int64 exp() const;
  inline void set_exp(::google::protobuf::int64 value);
  
  // optional int32 upperLimit = 3;
  inline bool has_upperLimit() const;
  inline void clear_upperLimit();
  static const int kUpperLimitFieldNumber = 3;
  inline ::google::protobuf::int32 upperLimit() const;
  inline void set_upperLimit(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:FactionBase)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_upperLimit();
  inline void clear_has_upperLimit();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 exp_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 upperLimit_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_FactionInfo_2eproto();
  friend void protobuf_AssignDesc_FactionInfo_2eproto();
  friend void protobuf_ShutdownFile_FactionInfo_2eproto();
  
  void InitAsDefaultInstance();
  static FactionBase* default_instance_;
};
// -------------------------------------------------------------------

class FactionBaseInfo : public ::google::protobuf::Message {
 public:
  FactionBaseInfo();
  virtual ~FactionBaseInfo();
  
  FactionBaseInfo(const FactionBaseInfo& from);
  
  inline FactionBaseInfo& operator=(const FactionBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FactionBaseInfo& default_instance();
  
  void Swap(FactionBaseInfo* other);
  
  // implements Message ----------------------------------------------
  
  FactionBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FactionBaseInfo& from);
  void MergeFrom(const FactionBaseInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .FactionBase faction = 1;
  inline int faction_size() const;
  inline void clear_faction();
  static const int kFactionFieldNumber = 1;
  inline const ::FactionBase& faction(int index) const;
  inline ::FactionBase* mutable_faction(int index);
  inline ::FactionBase* add_faction();
  inline const ::google::protobuf::RepeatedPtrField< ::FactionBase >&
      faction() const;
  inline ::google::protobuf::RepeatedPtrField< ::FactionBase >*
      mutable_faction();
  
  // @@protoc_insertion_point(class_scope:FactionBaseInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::FactionBase > faction_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FactionInfo_2eproto();
  friend void protobuf_AssignDesc_FactionInfo_2eproto();
  friend void protobuf_ShutdownFile_FactionInfo_2eproto();
  
  void InitAsDefaultInstance();
  static FactionBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class SociatySkillBase : public ::google::protobuf::Message {
 public:
  SociatySkillBase();
  virtual ~SociatySkillBase();
  
  SociatySkillBase(const SociatySkillBase& from);
  
  inline SociatySkillBase& operator=(const SociatySkillBase& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SociatySkillBase& default_instance();
  
  void Swap(SociatySkillBase* other);
  
  // implements Message ----------------------------------------------
  
  SociatySkillBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SociatySkillBase& from);
  void MergeFrom(const SociatySkillBase& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 effectType = 2;
  inline bool has_effectType() const;
  inline void clear_effectType();
  static const int kEffectTypeFieldNumber = 2;
  inline ::google::protobuf::int32 effectType() const;
  inline void set_effectType(::google::protobuf::int32 value);
  
  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 pic = 4;
  inline bool has_pic() const;
  inline void clear_pic();
  static const int kPicFieldNumber = 4;
  inline ::google::protobuf::int32 pic() const;
  inline void set_pic(::google::protobuf::int32 value);
  
  // optional int32 requiredSociatyLevel = 5;
  inline bool has_requiredSociatyLevel() const;
  inline void clear_requiredSociatyLevel();
  static const int kRequiredSociatyLevelFieldNumber = 5;
  inline ::google::protobuf::int32 requiredSociatyLevel() const;
  inline void set_requiredSociatyLevel(::google::protobuf::int32 value);
  
  // optional float effectPercent = 6;
  inline bool has_effectPercent() const;
  inline void clear_effectPercent();
  static const int kEffectPercentFieldNumber = 6;
  inline float effectPercent() const;
  inline void set_effectPercent(float value);
  
  // optional int32 effectValue = 7;
  inline bool has_effectValue() const;
  inline void clear_effectValue();
  static const int kEffectValueFieldNumber = 7;
  inline ::google::protobuf::int32 effectValue() const;
  inline void set_effectValue(::google::protobuf::int32 value);
  
  // optional int32 needBless = 8;
  inline bool has_needBless() const;
  inline void clear_needBless();
  static const int kNeedBlessFieldNumber = 8;
  inline ::google::protobuf::int32 needBless() const;
  inline void set_needBless(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:SociatySkillBase)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_effectType();
  inline void clear_has_effectType();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_pic();
  inline void clear_has_pic();
  inline void set_has_requiredSociatyLevel();
  inline void clear_has_requiredSociatyLevel();
  inline void set_has_effectPercent();
  inline void clear_has_effectPercent();
  inline void set_has_effectValue();
  inline void clear_has_effectValue();
  inline void set_has_needBless();
  inline void clear_has_needBless();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 effectType_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 pic_;
  ::google::protobuf::int32 requiredSociatyLevel_;
  float effectPercent_;
  ::google::protobuf::int32 effectValue_;
  ::google::protobuf::int32 needBless_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_FactionInfo_2eproto();
  friend void protobuf_AssignDesc_FactionInfo_2eproto();
  friend void protobuf_ShutdownFile_FactionInfo_2eproto();
  
  void InitAsDefaultInstance();
  static SociatySkillBase* default_instance_;
};
// -------------------------------------------------------------------

class SociatySkillBaseInfo : public ::google::protobuf::Message {
 public:
  SociatySkillBaseInfo();
  virtual ~SociatySkillBaseInfo();
  
  SociatySkillBaseInfo(const SociatySkillBaseInfo& from);
  
  inline SociatySkillBaseInfo& operator=(const SociatySkillBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SociatySkillBaseInfo& default_instance();
  
  void Swap(SociatySkillBaseInfo* other);
  
  // implements Message ----------------------------------------------
  
  SociatySkillBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SociatySkillBaseInfo& from);
  void MergeFrom(const SociatySkillBaseInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .SociatySkillBase info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::SociatySkillBase& info(int index) const;
  inline ::SociatySkillBase* mutable_info(int index);
  inline ::SociatySkillBase* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::SociatySkillBase >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::SociatySkillBase >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:SociatySkillBaseInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::SociatySkillBase > info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FactionInfo_2eproto();
  friend void protobuf_AssignDesc_FactionInfo_2eproto();
  friend void protobuf_ShutdownFile_FactionInfo_2eproto();
  
  void InitAsDefaultInstance();
  static SociatySkillBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class PB_ReservationToString : public ::google::protobuf::Message {
 public:
  PB_ReservationToString();
  virtual ~PB_ReservationToString();
  
  PB_ReservationToString(const PB_ReservationToString& from);
  
  inline PB_ReservationToString& operator=(const PB_ReservationToString& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_ReservationToString& default_instance();
  
  void Swap(PB_ReservationToString* other);
  
  // implements Message ----------------------------------------------
  
  PB_ReservationToString* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_ReservationToString& from);
  void MergeFrom(const PB_ReservationToString& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 roleID1 = 1;
  inline bool has_roleID1() const;
  inline void clear_roleID1();
  static const int kRoleID1FieldNumber = 1;
  inline ::google::protobuf::int64 roleID1() const;
  inline void set_roleID1(::google::protobuf::int64 value);
  
  // optional int64 roleID2 = 2;
  inline bool has_roleID2() const;
  inline void clear_roleID2();
  static const int kRoleID2FieldNumber = 2;
  inline ::google::protobuf::int64 roleID2() const;
  inline void set_roleID2(::google::protobuf::int64 value);
  
  // optional string name1 = 3;
  inline bool has_name1() const;
  inline void clear_name1();
  static const int kName1FieldNumber = 3;
  inline const ::std::string& name1() const;
  inline void set_name1(const ::std::string& value);
  inline void set_name1(const char* value);
  inline void set_name1(const char* value, size_t size);
  inline ::std::string* mutable_name1();
  inline ::std::string* release_name1();
  
  // optional string name2 = 4;
  inline bool has_name2() const;
  inline void clear_name2();
  static const int kName2FieldNumber = 4;
  inline const ::std::string& name2() const;
  inline void set_name2(const ::std::string& value);
  inline void set_name2(const char* value);
  inline void set_name2(const char* value, size_t size);
  inline ::std::string* mutable_name2();
  inline ::std::string* release_name2();
  
  // optional int32 rmb = 5;
  inline bool has_rmb() const;
  inline void clear_rmb();
  static const int kRmbFieldNumber = 5;
  inline ::google::protobuf::int32 rmb() const;
  inline void set_rmb(::google::protobuf::int32 value);
  
  // optional int32 powerType = 6;
  inline bool has_powerType() const;
  inline void clear_powerType();
  static const int kPowerTypeFieldNumber = 6;
  inline ::google::protobuf::int32 powerType() const;
  inline void set_powerType(::google::protobuf::int32 value);
  
  // optional .PB_ProfessionInfo.Type type1 = 7;
  inline bool has_type1() const;
  inline void clear_type1();
  static const int kType1FieldNumber = 7;
  inline ::PB_ProfessionInfo_Type type1() const;
  inline void set_type1(::PB_ProfessionInfo_Type value);
  
  // optional .PB_ProfessionInfo.Type type2 = 8;
  inline bool has_type2() const;
  inline void clear_type2();
  static const int kType2FieldNumber = 8;
  inline ::PB_ProfessionInfo_Type type2() const;
  inline void set_type2(::PB_ProfessionInfo_Type value);
  
  // repeated int64 setRole1 = 9;
  inline int setRole1_size() const;
  inline void clear_setRole1();
  static const int kSetRole1FieldNumber = 9;
  inline ::google::protobuf::int64 setRole1(int index) const;
  inline void set_setRole1(int index, ::google::protobuf::int64 value);
  inline void add_setRole1(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      setRole1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_setRole1();
  
  // repeated int64 setRole2 = 10;
  inline int setRole2_size() const;
  inline void clear_setRole2();
  static const int kSetRole2FieldNumber = 10;
  inline ::google::protobuf::int64 setRole2(int index) const;
  inline void set_setRole2(int index, ::google::protobuf::int64 value);
  inline void add_setRole2(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      setRole2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_setRole2();
  
  // @@protoc_insertion_point(class_scope:PB_ReservationToString)
 private:
  inline void set_has_roleID1();
  inline void clear_has_roleID1();
  inline void set_has_roleID2();
  inline void clear_has_roleID2();
  inline void set_has_name1();
  inline void clear_has_name1();
  inline void set_has_name2();
  inline void clear_has_name2();
  inline void set_has_rmb();
  inline void clear_has_rmb();
  inline void set_has_powerType();
  inline void clear_has_powerType();
  inline void set_has_type1();
  inline void clear_has_type1();
  inline void set_has_type2();
  inline void clear_has_type2();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 roleID1_;
  ::google::protobuf::int64 roleID2_;
  ::std::string* name1_;
  ::std::string* name2_;
  ::google::protobuf::int32 rmb_;
  ::google::protobuf::int32 powerType_;
  int type1_;
  int type2_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > setRole1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > setRole2_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_FactionInfo_2eproto();
  friend void protobuf_AssignDesc_FactionInfo_2eproto();
  friend void protobuf_ShutdownFile_FactionInfo_2eproto();
  
  void InitAsDefaultInstance();
  static PB_ReservationToString* default_instance_;
};
// ===================================================================


// ===================================================================

// FactionBase

// optional int32 level = 1;
inline bool FactionBase::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FactionBase::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FactionBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FactionBase::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 FactionBase::level() const {
  return level_;
}
inline void FactionBase::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int64 exp = 2;
inline bool FactionBase::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FactionBase::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FactionBase::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FactionBase::clear_exp() {
  exp_ = GOOGLE_LONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::int64 FactionBase::exp() const {
  return exp_;
}
inline void FactionBase::set_exp(::google::protobuf::int64 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 upperLimit = 3;
inline bool FactionBase::has_upperLimit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FactionBase::set_has_upperLimit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FactionBase::clear_has_upperLimit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FactionBase::clear_upperLimit() {
  upperLimit_ = 0;
  clear_has_upperLimit();
}
inline ::google::protobuf::int32 FactionBase::upperLimit() const {
  return upperLimit_;
}
inline void FactionBase::set_upperLimit(::google::protobuf::int32 value) {
  set_has_upperLimit();
  upperLimit_ = value;
}

// -------------------------------------------------------------------

// FactionBaseInfo

// repeated .FactionBase faction = 1;
inline int FactionBaseInfo::faction_size() const {
  return faction_.size();
}
inline void FactionBaseInfo::clear_faction() {
  faction_.Clear();
}
inline const ::FactionBase& FactionBaseInfo::faction(int index) const {
  return faction_.Get(index);
}
inline ::FactionBase* FactionBaseInfo::mutable_faction(int index) {
  return faction_.Mutable(index);
}
inline ::FactionBase* FactionBaseInfo::add_faction() {
  return faction_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FactionBase >&
FactionBaseInfo::faction() const {
  return faction_;
}
inline ::google::protobuf::RepeatedPtrField< ::FactionBase >*
FactionBaseInfo::mutable_faction() {
  return &faction_;
}

// -------------------------------------------------------------------

// SociatySkillBase

// optional int32 id = 1;
inline bool SociatySkillBase::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SociatySkillBase::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SociatySkillBase::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SociatySkillBase::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 SociatySkillBase::id() const {
  return id_;
}
inline void SociatySkillBase::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 effectType = 2;
inline bool SociatySkillBase::has_effectType() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SociatySkillBase::set_has_effectType() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SociatySkillBase::clear_has_effectType() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SociatySkillBase::clear_effectType() {
  effectType_ = 0;
  clear_has_effectType();
}
inline ::google::protobuf::int32 SociatySkillBase::effectType() const {
  return effectType_;
}
inline void SociatySkillBase::set_effectType(::google::protobuf::int32 value) {
  set_has_effectType();
  effectType_ = value;
}

// optional int32 level = 3;
inline bool SociatySkillBase::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SociatySkillBase::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SociatySkillBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SociatySkillBase::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SociatySkillBase::level() const {
  return level_;
}
inline void SociatySkillBase::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 pic = 4;
inline bool SociatySkillBase::has_pic() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SociatySkillBase::set_has_pic() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SociatySkillBase::clear_has_pic() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SociatySkillBase::clear_pic() {
  pic_ = 0;
  clear_has_pic();
}
inline ::google::protobuf::int32 SociatySkillBase::pic() const {
  return pic_;
}
inline void SociatySkillBase::set_pic(::google::protobuf::int32 value) {
  set_has_pic();
  pic_ = value;
}

// optional int32 requiredSociatyLevel = 5;
inline bool SociatySkillBase::has_requiredSociatyLevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SociatySkillBase::set_has_requiredSociatyLevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SociatySkillBase::clear_has_requiredSociatyLevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SociatySkillBase::clear_requiredSociatyLevel() {
  requiredSociatyLevel_ = 0;
  clear_has_requiredSociatyLevel();
}
inline ::google::protobuf::int32 SociatySkillBase::requiredSociatyLevel() const {
  return requiredSociatyLevel_;
}
inline void SociatySkillBase::set_requiredSociatyLevel(::google::protobuf::int32 value) {
  set_has_requiredSociatyLevel();
  requiredSociatyLevel_ = value;
}

// optional float effectPercent = 6;
inline bool SociatySkillBase::has_effectPercent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SociatySkillBase::set_has_effectPercent() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SociatySkillBase::clear_has_effectPercent() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SociatySkillBase::clear_effectPercent() {
  effectPercent_ = 0;
  clear_has_effectPercent();
}
inline float SociatySkillBase::effectPercent() const {
  return effectPercent_;
}
inline void SociatySkillBase::set_effectPercent(float value) {
  set_has_effectPercent();
  effectPercent_ = value;
}

// optional int32 effectValue = 7;
inline bool SociatySkillBase::has_effectValue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SociatySkillBase::set_has_effectValue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SociatySkillBase::clear_has_effectValue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SociatySkillBase::clear_effectValue() {
  effectValue_ = 0;
  clear_has_effectValue();
}
inline ::google::protobuf::int32 SociatySkillBase::effectValue() const {
  return effectValue_;
}
inline void SociatySkillBase::set_effectValue(::google::protobuf::int32 value) {
  set_has_effectValue();
  effectValue_ = value;
}

// optional int32 needBless = 8;
inline bool SociatySkillBase::has_needBless() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SociatySkillBase::set_has_needBless() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SociatySkillBase::clear_has_needBless() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SociatySkillBase::clear_needBless() {
  needBless_ = 0;
  clear_has_needBless();
}
inline ::google::protobuf::int32 SociatySkillBase::needBless() const {
  return needBless_;
}
inline void SociatySkillBase::set_needBless(::google::protobuf::int32 value) {
  set_has_needBless();
  needBless_ = value;
}

// -------------------------------------------------------------------

// SociatySkillBaseInfo

// repeated .SociatySkillBase info = 1;
inline int SociatySkillBaseInfo::info_size() const {
  return info_.size();
}
inline void SociatySkillBaseInfo::clear_info() {
  info_.Clear();
}
inline const ::SociatySkillBase& SociatySkillBaseInfo::info(int index) const {
  return info_.Get(index);
}
inline ::SociatySkillBase* SociatySkillBaseInfo::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::SociatySkillBase* SociatySkillBaseInfo::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SociatySkillBase >&
SociatySkillBaseInfo::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::SociatySkillBase >*
SociatySkillBaseInfo::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// PB_ReservationToString

// optional int64 roleID1 = 1;
inline bool PB_ReservationToString::has_roleID1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_ReservationToString::set_has_roleID1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_ReservationToString::clear_has_roleID1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_ReservationToString::clear_roleID1() {
  roleID1_ = GOOGLE_LONGLONG(0);
  clear_has_roleID1();
}
inline ::google::protobuf::int64 PB_ReservationToString::roleID1() const {
  return roleID1_;
}
inline void PB_ReservationToString::set_roleID1(::google::protobuf::int64 value) {
  set_has_roleID1();
  roleID1_ = value;
}

// optional int64 roleID2 = 2;
inline bool PB_ReservationToString::has_roleID2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_ReservationToString::set_has_roleID2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_ReservationToString::clear_has_roleID2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_ReservationToString::clear_roleID2() {
  roleID2_ = GOOGLE_LONGLONG(0);
  clear_has_roleID2();
}
inline ::google::protobuf::int64 PB_ReservationToString::roleID2() const {
  return roleID2_;
}
inline void PB_ReservationToString::set_roleID2(::google::protobuf::int64 value) {
  set_has_roleID2();
  roleID2_ = value;
}

// optional string name1 = 3;
inline bool PB_ReservationToString::has_name1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_ReservationToString::set_has_name1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_ReservationToString::clear_has_name1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_ReservationToString::clear_name1() {
  if (name1_ != &::google::protobuf::internal::kEmptyString) {
    name1_->clear();
  }
  clear_has_name1();
}
inline const ::std::string& PB_ReservationToString::name1() const {
  return *name1_;
}
inline void PB_ReservationToString::set_name1(const ::std::string& value) {
  set_has_name1();
  if (name1_ == &::google::protobuf::internal::kEmptyString) {
    name1_ = new ::std::string;
  }
  name1_->assign(value);
}
inline void PB_ReservationToString::set_name1(const char* value) {
  set_has_name1();
  if (name1_ == &::google::protobuf::internal::kEmptyString) {
    name1_ = new ::std::string;
  }
  name1_->assign(value);
}
inline void PB_ReservationToString::set_name1(const char* value, size_t size) {
  set_has_name1();
  if (name1_ == &::google::protobuf::internal::kEmptyString) {
    name1_ = new ::std::string;
  }
  name1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PB_ReservationToString::mutable_name1() {
  set_has_name1();
  if (name1_ == &::google::protobuf::internal::kEmptyString) {
    name1_ = new ::std::string;
  }
  return name1_;
}
inline ::std::string* PB_ReservationToString::release_name1() {
  clear_has_name1();
  if (name1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name1_;
    name1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string name2 = 4;
inline bool PB_ReservationToString::has_name2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_ReservationToString::set_has_name2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_ReservationToString::clear_has_name2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_ReservationToString::clear_name2() {
  if (name2_ != &::google::protobuf::internal::kEmptyString) {
    name2_->clear();
  }
  clear_has_name2();
}
inline const ::std::string& PB_ReservationToString::name2() const {
  return *name2_;
}
inline void PB_ReservationToString::set_name2(const ::std::string& value) {
  set_has_name2();
  if (name2_ == &::google::protobuf::internal::kEmptyString) {
    name2_ = new ::std::string;
  }
  name2_->assign(value);
}
inline void PB_ReservationToString::set_name2(const char* value) {
  set_has_name2();
  if (name2_ == &::google::protobuf::internal::kEmptyString) {
    name2_ = new ::std::string;
  }
  name2_->assign(value);
}
inline void PB_ReservationToString::set_name2(const char* value, size_t size) {
  set_has_name2();
  if (name2_ == &::google::protobuf::internal::kEmptyString) {
    name2_ = new ::std::string;
  }
  name2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PB_ReservationToString::mutable_name2() {
  set_has_name2();
  if (name2_ == &::google::protobuf::internal::kEmptyString) {
    name2_ = new ::std::string;
  }
  return name2_;
}
inline ::std::string* PB_ReservationToString::release_name2() {
  clear_has_name2();
  if (name2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name2_;
    name2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 rmb = 5;
inline bool PB_ReservationToString::has_rmb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_ReservationToString::set_has_rmb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_ReservationToString::clear_has_rmb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_ReservationToString::clear_rmb() {
  rmb_ = 0;
  clear_has_rmb();
}
inline ::google::protobuf::int32 PB_ReservationToString::rmb() const {
  return rmb_;
}
inline void PB_ReservationToString::set_rmb(::google::protobuf::int32 value) {
  set_has_rmb();
  rmb_ = value;
}

// optional int32 powerType = 6;
inline bool PB_ReservationToString::has_powerType() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_ReservationToString::set_has_powerType() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_ReservationToString::clear_has_powerType() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_ReservationToString::clear_powerType() {
  powerType_ = 0;
  clear_has_powerType();
}
inline ::google::protobuf::int32 PB_ReservationToString::powerType() const {
  return powerType_;
}
inline void PB_ReservationToString::set_powerType(::google::protobuf::int32 value) {
  set_has_powerType();
  powerType_ = value;
}

// optional .PB_ProfessionInfo.Type type1 = 7;
inline bool PB_ReservationToString::has_type1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PB_ReservationToString::set_has_type1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PB_ReservationToString::clear_has_type1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PB_ReservationToString::clear_type1() {
  type1_ = 0;
  clear_has_type1();
}
inline ::PB_ProfessionInfo_Type PB_ReservationToString::type1() const {
  return static_cast< ::PB_ProfessionInfo_Type >(type1_);
}
inline void PB_ReservationToString::set_type1(::PB_ProfessionInfo_Type value) {
  GOOGLE_DCHECK(::PB_ProfessionInfo_Type_IsValid(value));
  set_has_type1();
  type1_ = value;
}

// optional .PB_ProfessionInfo.Type type2 = 8;
inline bool PB_ReservationToString::has_type2() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PB_ReservationToString::set_has_type2() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PB_ReservationToString::clear_has_type2() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PB_ReservationToString::clear_type2() {
  type2_ = 0;
  clear_has_type2();
}
inline ::PB_ProfessionInfo_Type PB_ReservationToString::type2() const {
  return static_cast< ::PB_ProfessionInfo_Type >(type2_);
}
inline void PB_ReservationToString::set_type2(::PB_ProfessionInfo_Type value) {
  GOOGLE_DCHECK(::PB_ProfessionInfo_Type_IsValid(value));
  set_has_type2();
  type2_ = value;
}

// repeated int64 setRole1 = 9;
inline int PB_ReservationToString::setRole1_size() const {
  return setRole1_.size();
}
inline void PB_ReservationToString::clear_setRole1() {
  setRole1_.Clear();
}
inline ::google::protobuf::int64 PB_ReservationToString::setRole1(int index) const {
  return setRole1_.Get(index);
}
inline void PB_ReservationToString::set_setRole1(int index, ::google::protobuf::int64 value) {
  setRole1_.Set(index, value);
}
inline void PB_ReservationToString::add_setRole1(::google::protobuf::int64 value) {
  setRole1_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PB_ReservationToString::setRole1() const {
  return setRole1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PB_ReservationToString::mutable_setRole1() {
  return &setRole1_;
}

// repeated int64 setRole2 = 10;
inline int PB_ReservationToString::setRole2_size() const {
  return setRole2_.size();
}
inline void PB_ReservationToString::clear_setRole2() {
  setRole2_.Clear();
}
inline ::google::protobuf::int64 PB_ReservationToString::setRole2(int index) const {
  return setRole2_.Get(index);
}
inline void PB_ReservationToString::set_setRole2(int index, ::google::protobuf::int64 value) {
  setRole2_.Set(index, value);
}
inline void PB_ReservationToString::add_setRole2(::google::protobuf::int64 value) {
  setRole2_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PB_ReservationToString::setRole2() const {
  return setRole2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PB_ReservationToString::mutable_setRole2() {
  return &setRole2_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FactionInfo_2eproto__INCLUDED
