// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PetHalo.proto

#ifndef PROTOBUF_PetHalo_2eproto__INCLUDED
#define PROTOBUF_PetHalo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PetHalo_2eproto();
void protobuf_AssignDesc_PetHalo_2eproto();
void protobuf_ShutdownFile_PetHalo_2eproto();

class PB_PetHaloInfo;
class PB_AllPetHaloInfo;

// ===================================================================

class PB_PetHaloInfo : public ::google::protobuf::Message {
 public:
  PB_PetHaloInfo();
  virtual ~PB_PetHaloInfo();
  
  PB_PetHaloInfo(const PB_PetHaloInfo& from);
  
  inline PB_PetHaloInfo& operator=(const PB_PetHaloInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_PetHaloInfo& default_instance();
  
  void Swap(PB_PetHaloInfo* other);
  
  // implements Message ----------------------------------------------
  
  PB_PetHaloInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_PetHaloInfo& from);
  void MergeFrom(const PB_PetHaloInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 propertieType = 1;
  inline bool has_propertieType() const;
  inline void clear_propertieType();
  static const int kPropertieTypeFieldNumber = 1;
  inline ::google::protobuf::int32 propertieType() const;
  inline void set_propertieType(::google::protobuf::int32 value);
  
  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 propertyValue = 3;
  inline bool has_propertyValue() const;
  inline void clear_propertyValue();
  static const int kPropertyValueFieldNumber = 3;
  inline ::google::protobuf::int32 propertyValue() const;
  inline void set_propertyValue(::google::protobuf::int32 value);
  
  // optional int32 maxToughness = 4;
  inline bool has_maxToughness() const;
  inline void clear_maxToughness();
  static const int kMaxToughnessFieldNumber = 4;
  inline ::google::protobuf::int32 maxToughness() const;
  inline void set_maxToughness(::google::protobuf::int32 value);
  
  // optional int32 successRate = 5;
  inline bool has_successRate() const;
  inline void clear_successRate();
  static const int kSuccessRateFieldNumber = 5;
  inline ::google::protobuf::int32 successRate() const;
  inline void set_successRate(::google::protobuf::int32 value);
  
  // optional int32 requiredGoodsID = 6;
  inline bool has_requiredGoodsID() const;
  inline void clear_requiredGoodsID();
  static const int kRequiredGoodsIDFieldNumber = 6;
  inline ::google::protobuf::int32 requiredGoodsID() const;
  inline void set_requiredGoodsID(::google::protobuf::int32 value);
  
  // optional int32 GoodsCount = 7;
  inline bool has_GoodsCount() const;
  inline void clear_GoodsCount();
  static const int kGoodsCountFieldNumber = 7;
  inline ::google::protobuf::int32 GoodsCount() const;
  inline void set_GoodsCount(::google::protobuf::int32 value);
  
  // optional int32 Gold = 8;
  inline bool has_Gold() const;
  inline void clear_Gold();
  static const int kGoldFieldNumber = 8;
  inline ::google::protobuf::int32 Gold() const;
  inline void set_Gold(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:PB_PetHaloInfo)
 private:
  inline void set_has_propertieType();
  inline void clear_has_propertieType();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_propertyValue();
  inline void clear_has_propertyValue();
  inline void set_has_maxToughness();
  inline void clear_has_maxToughness();
  inline void set_has_successRate();
  inline void clear_has_successRate();
  inline void set_has_requiredGoodsID();
  inline void clear_has_requiredGoodsID();
  inline void set_has_GoodsCount();
  inline void clear_has_GoodsCount();
  inline void set_has_Gold();
  inline void clear_has_Gold();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 propertieType_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 propertyValue_;
  ::google::protobuf::int32 maxToughness_;
  ::google::protobuf::int32 successRate_;
  ::google::protobuf::int32 requiredGoodsID_;
  ::google::protobuf::int32 GoodsCount_;
  ::google::protobuf::int32 Gold_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_PetHalo_2eproto();
  friend void protobuf_AssignDesc_PetHalo_2eproto();
  friend void protobuf_ShutdownFile_PetHalo_2eproto();
  
  void InitAsDefaultInstance();
  static PB_PetHaloInfo* default_instance_;
};
// -------------------------------------------------------------------

class PB_AllPetHaloInfo : public ::google::protobuf::Message {
 public:
  PB_AllPetHaloInfo();
  virtual ~PB_AllPetHaloInfo();
  
  PB_AllPetHaloInfo(const PB_AllPetHaloInfo& from);
  
  inline PB_AllPetHaloInfo& operator=(const PB_AllPetHaloInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_AllPetHaloInfo& default_instance();
  
  void Swap(PB_AllPetHaloInfo* other);
  
  // implements Message ----------------------------------------------
  
  PB_AllPetHaloInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_AllPetHaloInfo& from);
  void MergeFrom(const PB_AllPetHaloInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PB_PetHaloInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::PB_PetHaloInfo& info(int index) const;
  inline ::PB_PetHaloInfo* mutable_info(int index);
  inline ::PB_PetHaloInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_PetHaloInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_PetHaloInfo >*
      mutable_info();
  
  // @@protoc_insertion_point(class_scope:PB_AllPetHaloInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PB_PetHaloInfo > info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_PetHalo_2eproto();
  friend void protobuf_AssignDesc_PetHalo_2eproto();
  friend void protobuf_ShutdownFile_PetHalo_2eproto();
  
  void InitAsDefaultInstance();
  static PB_AllPetHaloInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// PB_PetHaloInfo

// optional int32 propertieType = 1;
inline bool PB_PetHaloInfo::has_propertieType() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_PetHaloInfo::set_has_propertieType() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_PetHaloInfo::clear_has_propertieType() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_PetHaloInfo::clear_propertieType() {
  propertieType_ = 0;
  clear_has_propertieType();
}
inline ::google::protobuf::int32 PB_PetHaloInfo::propertieType() const {
  return propertieType_;
}
inline void PB_PetHaloInfo::set_propertieType(::google::protobuf::int32 value) {
  set_has_propertieType();
  propertieType_ = value;
}

// optional int32 level = 2;
inline bool PB_PetHaloInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_PetHaloInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_PetHaloInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_PetHaloInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PB_PetHaloInfo::level() const {
  return level_;
}
inline void PB_PetHaloInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 propertyValue = 3;
inline bool PB_PetHaloInfo::has_propertyValue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_PetHaloInfo::set_has_propertyValue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_PetHaloInfo::clear_has_propertyValue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_PetHaloInfo::clear_propertyValue() {
  propertyValue_ = 0;
  clear_has_propertyValue();
}
inline ::google::protobuf::int32 PB_PetHaloInfo::propertyValue() const {
  return propertyValue_;
}
inline void PB_PetHaloInfo::set_propertyValue(::google::protobuf::int32 value) {
  set_has_propertyValue();
  propertyValue_ = value;
}

// optional int32 maxToughness = 4;
inline bool PB_PetHaloInfo::has_maxToughness() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_PetHaloInfo::set_has_maxToughness() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_PetHaloInfo::clear_has_maxToughness() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_PetHaloInfo::clear_maxToughness() {
  maxToughness_ = 0;
  clear_has_maxToughness();
}
inline ::google::protobuf::int32 PB_PetHaloInfo::maxToughness() const {
  return maxToughness_;
}
inline void PB_PetHaloInfo::set_maxToughness(::google::protobuf::int32 value) {
  set_has_maxToughness();
  maxToughness_ = value;
}

// optional int32 successRate = 5;
inline bool PB_PetHaloInfo::has_successRate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_PetHaloInfo::set_has_successRate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_PetHaloInfo::clear_has_successRate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_PetHaloInfo::clear_successRate() {
  successRate_ = 0;
  clear_has_successRate();
}
inline ::google::protobuf::int32 PB_PetHaloInfo::successRate() const {
  return successRate_;
}
inline void PB_PetHaloInfo::set_successRate(::google::protobuf::int32 value) {
  set_has_successRate();
  successRate_ = value;
}

// optional int32 requiredGoodsID = 6;
inline bool PB_PetHaloInfo::has_requiredGoodsID() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_PetHaloInfo::set_has_requiredGoodsID() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_PetHaloInfo::clear_has_requiredGoodsID() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_PetHaloInfo::clear_requiredGoodsID() {
  requiredGoodsID_ = 0;
  clear_has_requiredGoodsID();
}
inline ::google::protobuf::int32 PB_PetHaloInfo::requiredGoodsID() const {
  return requiredGoodsID_;
}
inline void PB_PetHaloInfo::set_requiredGoodsID(::google::protobuf::int32 value) {
  set_has_requiredGoodsID();
  requiredGoodsID_ = value;
}

// optional int32 GoodsCount = 7;
inline bool PB_PetHaloInfo::has_GoodsCount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PB_PetHaloInfo::set_has_GoodsCount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PB_PetHaloInfo::clear_has_GoodsCount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PB_PetHaloInfo::clear_GoodsCount() {
  GoodsCount_ = 0;
  clear_has_GoodsCount();
}
inline ::google::protobuf::int32 PB_PetHaloInfo::GoodsCount() const {
  return GoodsCount_;
}
inline void PB_PetHaloInfo::set_GoodsCount(::google::protobuf::int32 value) {
  set_has_GoodsCount();
  GoodsCount_ = value;
}

// optional int32 Gold = 8;
inline bool PB_PetHaloInfo::has_Gold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PB_PetHaloInfo::set_has_Gold() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PB_PetHaloInfo::clear_has_Gold() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PB_PetHaloInfo::clear_Gold() {
  Gold_ = 0;
  clear_has_Gold();
}
inline ::google::protobuf::int32 PB_PetHaloInfo::Gold() const {
  return Gold_;
}
inline void PB_PetHaloInfo::set_Gold(::google::protobuf::int32 value) {
  set_has_Gold();
  Gold_ = value;
}

// -------------------------------------------------------------------

// PB_AllPetHaloInfo

// repeated .PB_PetHaloInfo info = 1;
inline int PB_AllPetHaloInfo::info_size() const {
  return info_.size();
}
inline void PB_AllPetHaloInfo::clear_info() {
  info_.Clear();
}
inline const ::PB_PetHaloInfo& PB_AllPetHaloInfo::info(int index) const {
  return info_.Get(index);
}
inline ::PB_PetHaloInfo* PB_AllPetHaloInfo::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::PB_PetHaloInfo* PB_AllPetHaloInfo::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_PetHaloInfo >&
PB_AllPetHaloInfo::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_PetHaloInfo >*
PB_AllPetHaloInfo::mutable_info() {
  return &info_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PetHalo_2eproto__INCLUDED
