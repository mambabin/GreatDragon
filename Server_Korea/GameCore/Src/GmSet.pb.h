// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GmSet.proto

#ifndef PROTOBUF_GmSet_2eproto__INCLUDED
#define PROTOBUF_GmSet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GmSet_2eproto();
void protobuf_AssignDesc_GmSet_2eproto();
void protobuf_ShutdownFile_GmSet_2eproto();

class GmSet;
class AllGmSet;

enum GmSet_Type {
  GmSet_Type_EXP = 0,
  GmSet_Type_COIN = 1,
  GmSet_Type_DROP = 2,
  GmSet_Type_GOODS = 3,
  GmSet_Type_STRONG = 4
};
bool GmSet_Type_IsValid(int value);
const GmSet_Type GmSet_Type_Type_MIN = GmSet_Type_EXP;
const GmSet_Type GmSet_Type_Type_MAX = GmSet_Type_STRONG;
const int GmSet_Type_Type_ARRAYSIZE = GmSet_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* GmSet_Type_descriptor();
inline const ::std::string& GmSet_Type_Name(GmSet_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    GmSet_Type_descriptor(), value);
}
inline bool GmSet_Type_Parse(
    const ::std::string& name, GmSet_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GmSet_Type>(
    GmSet_Type_descriptor(), name, value);
}
// ===================================================================

class GmSet : public ::google::protobuf::Message {
 public:
  GmSet();
  virtual ~GmSet();
  
  GmSet(const GmSet& from);
  
  inline GmSet& operator=(const GmSet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GmSet& default_instance();
  
  void Swap(GmSet* other);
  
  // implements Message ----------------------------------------------
  
  GmSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GmSet& from);
  void MergeFrom(const GmSet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef GmSet_Type Type;
  static const Type EXP = GmSet_Type_EXP;
  static const Type COIN = GmSet_Type_COIN;
  static const Type DROP = GmSet_Type_DROP;
  static const Type GOODS = GmSet_Type_GOODS;
  static const Type STRONG = GmSet_Type_STRONG;
  static inline bool Type_IsValid(int value) {
    return GmSet_Type_IsValid(value);
  }
  static const Type Type_MIN =
    GmSet_Type_Type_MIN;
  static const Type Type_MAX =
    GmSet_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    GmSet_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return GmSet_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return GmSet_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return GmSet_Type_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .GmSet.Type setType = 1;
  inline bool has_setType() const;
  inline void clear_setType();
  static const int kSetTypeFieldNumber = 1;
  inline ::GmSet_Type setType() const;
  inline void set_setType(::GmSet_Type value);
  
  // repeated int32 arg = 2;
  inline int arg_size() const;
  inline void clear_arg();
  static const int kArgFieldNumber = 2;
  inline ::google::protobuf::int32 arg(int index) const;
  inline void set_arg(int index, ::google::protobuf::int32 value);
  inline void add_arg(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      arg() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_arg();
  
  // optional string beginDate = 3;
  inline bool has_beginDate() const;
  inline void clear_beginDate();
  static const int kBeginDateFieldNumber = 3;
  inline const ::std::string& beginDate() const;
  inline void set_beginDate(const ::std::string& value);
  inline void set_beginDate(const char* value);
  inline void set_beginDate(const char* value, size_t size);
  inline ::std::string* mutable_beginDate();
  inline ::std::string* release_beginDate();
  
  // optional string endDate = 4;
  inline bool has_endDate() const;
  inline void clear_endDate();
  static const int kEndDateFieldNumber = 4;
  inline const ::std::string& endDate() const;
  inline void set_endDate(const ::std::string& value);
  inline void set_endDate(const char* value);
  inline void set_endDate(const char* value, size_t size);
  inline ::std::string* mutable_endDate();
  inline ::std::string* release_endDate();
  
  // optional string beginTime = 5;
  inline bool has_beginTime() const;
  inline void clear_beginTime();
  static const int kBeginTimeFieldNumber = 5;
  inline const ::std::string& beginTime() const;
  inline void set_beginTime(const ::std::string& value);
  inline void set_beginTime(const char* value);
  inline void set_beginTime(const char* value, size_t size);
  inline ::std::string* mutable_beginTime();
  inline ::std::string* release_beginTime();
  
  // optional string endTime = 6;
  inline bool has_endTime() const;
  inline void clear_endTime();
  static const int kEndTimeFieldNumber = 6;
  inline const ::std::string& endTime() const;
  inline void set_endTime(const ::std::string& value);
  inline void set_endTime(const char* value);
  inline void set_endTime(const char* value, size_t size);
  inline ::std::string* mutable_endTime();
  inline ::std::string* release_endTime();
  
  // @@protoc_insertion_point(class_scope:GmSet)
 private:
  inline void set_has_setType();
  inline void clear_has_setType();
  inline void set_has_beginDate();
  inline void clear_has_beginDate();
  inline void set_has_endDate();
  inline void clear_has_endDate();
  inline void set_has_beginTime();
  inline void clear_has_beginTime();
  inline void set_has_endTime();
  inline void clear_has_endTime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > arg_;
  ::std::string* beginDate_;
  ::std::string* endDate_;
  ::std::string* beginTime_;
  ::std::string* endTime_;
  int setType_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_GmSet_2eproto();
  friend void protobuf_AssignDesc_GmSet_2eproto();
  friend void protobuf_ShutdownFile_GmSet_2eproto();
  
  void InitAsDefaultInstance();
  static GmSet* default_instance_;
};
// -------------------------------------------------------------------

class AllGmSet : public ::google::protobuf::Message {
 public:
  AllGmSet();
  virtual ~AllGmSet();
  
  AllGmSet(const AllGmSet& from);
  
  inline AllGmSet& operator=(const AllGmSet& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllGmSet& default_instance();
  
  void Swap(AllGmSet* other);
  
  // implements Message ----------------------------------------------
  
  AllGmSet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllGmSet& from);
  void MergeFrom(const AllGmSet& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .GmSet gmSet = 1;
  inline int gmSet_size() const;
  inline void clear_gmSet();
  static const int kGmSetFieldNumber = 1;
  inline const ::GmSet& gmSet(int index) const;
  inline ::GmSet* mutable_gmSet(int index);
  inline ::GmSet* add_gmSet();
  inline const ::google::protobuf::RepeatedPtrField< ::GmSet >&
      gmSet() const;
  inline ::google::protobuf::RepeatedPtrField< ::GmSet >*
      mutable_gmSet();
  
  // @@protoc_insertion_point(class_scope:AllGmSet)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::GmSet > gmSet_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_GmSet_2eproto();
  friend void protobuf_AssignDesc_GmSet_2eproto();
  friend void protobuf_ShutdownFile_GmSet_2eproto();
  
  void InitAsDefaultInstance();
  static AllGmSet* default_instance_;
};
// ===================================================================


// ===================================================================

// GmSet

// optional .GmSet.Type setType = 1;
inline bool GmSet::has_setType() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GmSet::set_has_setType() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GmSet::clear_has_setType() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GmSet::clear_setType() {
  setType_ = 0;
  clear_has_setType();
}
inline ::GmSet_Type GmSet::setType() const {
  return static_cast< ::GmSet_Type >(setType_);
}
inline void GmSet::set_setType(::GmSet_Type value) {
  GOOGLE_DCHECK(::GmSet_Type_IsValid(value));
  set_has_setType();
  setType_ = value;
}

// repeated int32 arg = 2;
inline int GmSet::arg_size() const {
  return arg_.size();
}
inline void GmSet::clear_arg() {
  arg_.Clear();
}
inline ::google::protobuf::int32 GmSet::arg(int index) const {
  return arg_.Get(index);
}
inline void GmSet::set_arg(int index, ::google::protobuf::int32 value) {
  arg_.Set(index, value);
}
inline void GmSet::add_arg(::google::protobuf::int32 value) {
  arg_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GmSet::arg() const {
  return arg_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GmSet::mutable_arg() {
  return &arg_;
}

// optional string beginDate = 3;
inline bool GmSet::has_beginDate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GmSet::set_has_beginDate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GmSet::clear_has_beginDate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GmSet::clear_beginDate() {
  if (beginDate_ != &::google::protobuf::internal::kEmptyString) {
    beginDate_->clear();
  }
  clear_has_beginDate();
}
inline const ::std::string& GmSet::beginDate() const {
  return *beginDate_;
}
inline void GmSet::set_beginDate(const ::std::string& value) {
  set_has_beginDate();
  if (beginDate_ == &::google::protobuf::internal::kEmptyString) {
    beginDate_ = new ::std::string;
  }
  beginDate_->assign(value);
}
inline void GmSet::set_beginDate(const char* value) {
  set_has_beginDate();
  if (beginDate_ == &::google::protobuf::internal::kEmptyString) {
    beginDate_ = new ::std::string;
  }
  beginDate_->assign(value);
}
inline void GmSet::set_beginDate(const char* value, size_t size) {
  set_has_beginDate();
  if (beginDate_ == &::google::protobuf::internal::kEmptyString) {
    beginDate_ = new ::std::string;
  }
  beginDate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GmSet::mutable_beginDate() {
  set_has_beginDate();
  if (beginDate_ == &::google::protobuf::internal::kEmptyString) {
    beginDate_ = new ::std::string;
  }
  return beginDate_;
}
inline ::std::string* GmSet::release_beginDate() {
  clear_has_beginDate();
  if (beginDate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = beginDate_;
    beginDate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string endDate = 4;
inline bool GmSet::has_endDate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GmSet::set_has_endDate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GmSet::clear_has_endDate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GmSet::clear_endDate() {
  if (endDate_ != &::google::protobuf::internal::kEmptyString) {
    endDate_->clear();
  }
  clear_has_endDate();
}
inline const ::std::string& GmSet::endDate() const {
  return *endDate_;
}
inline void GmSet::set_endDate(const ::std::string& value) {
  set_has_endDate();
  if (endDate_ == &::google::protobuf::internal::kEmptyString) {
    endDate_ = new ::std::string;
  }
  endDate_->assign(value);
}
inline void GmSet::set_endDate(const char* value) {
  set_has_endDate();
  if (endDate_ == &::google::protobuf::internal::kEmptyString) {
    endDate_ = new ::std::string;
  }
  endDate_->assign(value);
}
inline void GmSet::set_endDate(const char* value, size_t size) {
  set_has_endDate();
  if (endDate_ == &::google::protobuf::internal::kEmptyString) {
    endDate_ = new ::std::string;
  }
  endDate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GmSet::mutable_endDate() {
  set_has_endDate();
  if (endDate_ == &::google::protobuf::internal::kEmptyString) {
    endDate_ = new ::std::string;
  }
  return endDate_;
}
inline ::std::string* GmSet::release_endDate() {
  clear_has_endDate();
  if (endDate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = endDate_;
    endDate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string beginTime = 5;
inline bool GmSet::has_beginTime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GmSet::set_has_beginTime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GmSet::clear_has_beginTime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GmSet::clear_beginTime() {
  if (beginTime_ != &::google::protobuf::internal::kEmptyString) {
    beginTime_->clear();
  }
  clear_has_beginTime();
}
inline const ::std::string& GmSet::beginTime() const {
  return *beginTime_;
}
inline void GmSet::set_beginTime(const ::std::string& value) {
  set_has_beginTime();
  if (beginTime_ == &::google::protobuf::internal::kEmptyString) {
    beginTime_ = new ::std::string;
  }
  beginTime_->assign(value);
}
inline void GmSet::set_beginTime(const char* value) {
  set_has_beginTime();
  if (beginTime_ == &::google::protobuf::internal::kEmptyString) {
    beginTime_ = new ::std::string;
  }
  beginTime_->assign(value);
}
inline void GmSet::set_beginTime(const char* value, size_t size) {
  set_has_beginTime();
  if (beginTime_ == &::google::protobuf::internal::kEmptyString) {
    beginTime_ = new ::std::string;
  }
  beginTime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GmSet::mutable_beginTime() {
  set_has_beginTime();
  if (beginTime_ == &::google::protobuf::internal::kEmptyString) {
    beginTime_ = new ::std::string;
  }
  return beginTime_;
}
inline ::std::string* GmSet::release_beginTime() {
  clear_has_beginTime();
  if (beginTime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = beginTime_;
    beginTime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string endTime = 6;
inline bool GmSet::has_endTime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GmSet::set_has_endTime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GmSet::clear_has_endTime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GmSet::clear_endTime() {
  if (endTime_ != &::google::protobuf::internal::kEmptyString) {
    endTime_->clear();
  }
  clear_has_endTime();
}
inline const ::std::string& GmSet::endTime() const {
  return *endTime_;
}
inline void GmSet::set_endTime(const ::std::string& value) {
  set_has_endTime();
  if (endTime_ == &::google::protobuf::internal::kEmptyString) {
    endTime_ = new ::std::string;
  }
  endTime_->assign(value);
}
inline void GmSet::set_endTime(const char* value) {
  set_has_endTime();
  if (endTime_ == &::google::protobuf::internal::kEmptyString) {
    endTime_ = new ::std::string;
  }
  endTime_->assign(value);
}
inline void GmSet::set_endTime(const char* value, size_t size) {
  set_has_endTime();
  if (endTime_ == &::google::protobuf::internal::kEmptyString) {
    endTime_ = new ::std::string;
  }
  endTime_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GmSet::mutable_endTime() {
  set_has_endTime();
  if (endTime_ == &::google::protobuf::internal::kEmptyString) {
    endTime_ = new ::std::string;
  }
  return endTime_;
}
inline ::std::string* GmSet::release_endTime() {
  clear_has_endTime();
  if (endTime_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = endTime_;
    endTime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// AllGmSet

// repeated .GmSet gmSet = 1;
inline int AllGmSet::gmSet_size() const {
  return gmSet_.size();
}
inline void AllGmSet::clear_gmSet() {
  gmSet_.Clear();
}
inline const ::GmSet& AllGmSet::gmSet(int index) const {
  return gmSet_.Get(index);
}
inline ::GmSet* AllGmSet::mutable_gmSet(int index) {
  return gmSet_.Mutable(index);
}
inline ::GmSet* AllGmSet::add_gmSet() {
  return gmSet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GmSet >&
AllGmSet::gmSet() const {
  return gmSet_;
}
inline ::google::protobuf::RepeatedPtrField< ::GmSet >*
AllGmSet::mutable_gmSet() {
  return &gmSet_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GmSet_Type>() {
  return ::GmSet_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GmSet_2eproto__INCLUDED
