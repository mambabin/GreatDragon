// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FuncInfo.proto

#ifndef PROTOBUF_FuncInfo_2eproto__INCLUDED
#define PROTOBUF_FuncInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FuncInfo_2eproto();
void protobuf_AssignDesc_FuncInfo_2eproto();
void protobuf_ShutdownFile_FuncInfo_2eproto();

class PB_FuncInfo;
class PB_FuncAtt;

enum PB_FuncInfo_Type {
  PB_FuncInfo_Type_NONE = 0,
  PB_FuncInfo_Type_MISSION = 1,
  PB_FuncInfo_Type_BUSINESS = 2,
  PB_FuncInfo_Type_ROOM = 3
};
bool PB_FuncInfo_Type_IsValid(int value);
const PB_FuncInfo_Type PB_FuncInfo_Type_Type_MIN = PB_FuncInfo_Type_NONE;
const PB_FuncInfo_Type PB_FuncInfo_Type_Type_MAX = PB_FuncInfo_Type_ROOM;
const int PB_FuncInfo_Type_Type_ARRAYSIZE = PB_FuncInfo_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_FuncInfo_Type_descriptor();
inline const ::std::string& PB_FuncInfo_Type_Name(PB_FuncInfo_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_FuncInfo_Type_descriptor(), value);
}
inline bool PB_FuncInfo_Type_Parse(
    const ::std::string& name, PB_FuncInfo_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_FuncInfo_Type>(
    PB_FuncInfo_Type_descriptor(), name, value);
}
// ===================================================================

class PB_FuncInfo : public ::google::protobuf::Message {
 public:
  PB_FuncInfo();
  virtual ~PB_FuncInfo();
  
  PB_FuncInfo(const PB_FuncInfo& from);
  
  inline PB_FuncInfo& operator=(const PB_FuncInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_FuncInfo& default_instance();
  
  void Swap(PB_FuncInfo* other);
  
  // implements Message ----------------------------------------------
  
  PB_FuncInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_FuncInfo& from);
  void MergeFrom(const PB_FuncInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef PB_FuncInfo_Type Type;
  static const Type NONE = PB_FuncInfo_Type_NONE;
  static const Type MISSION = PB_FuncInfo_Type_MISSION;
  static const Type BUSINESS = PB_FuncInfo_Type_BUSINESS;
  static const Type ROOM = PB_FuncInfo_Type_ROOM;
  static inline bool Type_IsValid(int value) {
    return PB_FuncInfo_Type_IsValid(value);
  }
  static const Type Type_MIN =
    PB_FuncInfo_Type_Type_MIN;
  static const Type Type_MAX =
    PB_FuncInfo_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    PB_FuncInfo_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return PB_FuncInfo_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return PB_FuncInfo_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return PB_FuncInfo_Type_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .PB_FuncInfo.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::PB_FuncInfo_Type type() const;
  inline void set_type(::PB_FuncInfo_Type value);
  
  // repeated int32 arg = 2;
  inline int arg_size() const;
  inline void clear_arg();
  static const int kArgFieldNumber = 2;
  inline ::google::protobuf::int32 arg(int index) const;
  inline void set_arg(int index, ::google::protobuf::int32 value);
  inline void add_arg(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      arg() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_arg();
  
  // @@protoc_insertion_point(class_scope:PB_FuncInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > arg_;
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FuncInfo_2eproto();
  friend void protobuf_AssignDesc_FuncInfo_2eproto();
  friend void protobuf_ShutdownFile_FuncInfo_2eproto();
  
  void InitAsDefaultInstance();
  static PB_FuncInfo* default_instance_;
};
// -------------------------------------------------------------------

class PB_FuncAtt : public ::google::protobuf::Message {
 public:
  PB_FuncAtt();
  virtual ~PB_FuncAtt();
  
  PB_FuncAtt(const PB_FuncAtt& from);
  
  inline PB_FuncAtt& operator=(const PB_FuncAtt& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_FuncAtt& default_instance();
  
  void Swap(PB_FuncAtt* other);
  
  // implements Message ----------------------------------------------
  
  PB_FuncAtt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_FuncAtt& from);
  void MergeFrom(const PB_FuncAtt& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .PB_FuncInfo funcs = 1;
  inline int funcs_size() const;
  inline void clear_funcs();
  static const int kFuncsFieldNumber = 1;
  inline const ::PB_FuncInfo& funcs(int index) const;
  inline ::PB_FuncInfo* mutable_funcs(int index);
  inline ::PB_FuncInfo* add_funcs();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_FuncInfo >&
      funcs() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_FuncInfo >*
      mutable_funcs();
  
  // @@protoc_insertion_point(class_scope:PB_FuncAtt)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PB_FuncInfo > funcs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FuncInfo_2eproto();
  friend void protobuf_AssignDesc_FuncInfo_2eproto();
  friend void protobuf_ShutdownFile_FuncInfo_2eproto();
  
  void InitAsDefaultInstance();
  static PB_FuncAtt* default_instance_;
};
// ===================================================================


// ===================================================================

// PB_FuncInfo

// optional .PB_FuncInfo.Type type = 1;
inline bool PB_FuncInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_FuncInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_FuncInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_FuncInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::PB_FuncInfo_Type PB_FuncInfo::type() const {
  return static_cast< ::PB_FuncInfo_Type >(type_);
}
inline void PB_FuncInfo::set_type(::PB_FuncInfo_Type value) {
  GOOGLE_DCHECK(::PB_FuncInfo_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// repeated int32 arg = 2;
inline int PB_FuncInfo::arg_size() const {
  return arg_.size();
}
inline void PB_FuncInfo::clear_arg() {
  arg_.Clear();
}
inline ::google::protobuf::int32 PB_FuncInfo::arg(int index) const {
  return arg_.Get(index);
}
inline void PB_FuncInfo::set_arg(int index, ::google::protobuf::int32 value) {
  arg_.Set(index, value);
}
inline void PB_FuncInfo::add_arg(::google::protobuf::int32 value) {
  arg_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_FuncInfo::arg() const {
  return arg_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_FuncInfo::mutable_arg() {
  return &arg_;
}

// -------------------------------------------------------------------

// PB_FuncAtt

// repeated .PB_FuncInfo funcs = 1;
inline int PB_FuncAtt::funcs_size() const {
  return funcs_.size();
}
inline void PB_FuncAtt::clear_funcs() {
  funcs_.Clear();
}
inline const ::PB_FuncInfo& PB_FuncAtt::funcs(int index) const {
  return funcs_.Get(index);
}
inline ::PB_FuncInfo* PB_FuncAtt::mutable_funcs(int index) {
  return funcs_.Mutable(index);
}
inline ::PB_FuncInfo* PB_FuncAtt::add_funcs() {
  return funcs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_FuncInfo >&
PB_FuncAtt::funcs() const {
  return funcs_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_FuncInfo >*
PB_FuncAtt::mutable_funcs() {
  return &funcs_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_FuncInfo_Type>() {
  return ::PB_FuncInfo_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FuncInfo_2eproto__INCLUDED
