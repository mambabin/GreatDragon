// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ItemInfo.proto

#ifndef PROTOBUF_ItemInfo_2eproto__INCLUDED
#define PROTOBUF_ItemInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "Math.pb.h"
#include "Fashion.pb.h"
#include "EquipmentInfo.pb.h"
#include "ItemBaseInfo.pb.h"
#include "BoxInfo.pb.h"
#include "GodShip.pb.h"
#include "RidesInfo.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ItemInfo_2eproto();
void protobuf_AssignDesc_ItemInfo_2eproto();
void protobuf_ShutdownFile_ItemInfo_2eproto();

class GoodsInfo;
class AllGoods;
class PB_TransformAsset;
class PB_ItemPackage;
class PB_ALT;
class DropItem;
class DropTable;
class AllDropTables;
class ExchangeTable;
class AllExchangeTable;

enum GoodsInfo_Type {
  GoodsInfo_Type_EXP = 0,
  GoodsInfo_Type_MATERIAL = 1,
  GoodsInfo_Type_GEM = 2,
  GoodsInfo_Type_MONEY = 3,
  GoodsInfo_Type_MISSION = 4,
  GoodsInfo_Type_BOX = 5,
  GoodsInfo_Type_RMB = 6,
  GoodsInfo_Type_SOUL = 7,
  GoodsInfo_Type_SOULJADE = 8,
  GoodsInfo_Type_SOULSTONE = 9,
  GoodsInfo_Type_SUBRMB = 10,
  GoodsInfo_Type_RECIPE_EQU = 11,
  GoodsInfo_Type_RUNE = 12,
  GoodsInfo_Type_EGG = 13,
  GoodsInfo_Type_SKILLBOOK = 14,
  GoodsInfo_Type_LOCK_BOX = 15,
  GoodsInfo_Type_KEY = 16,
  GoodsInfo_Type_VIP = 17,
  GoodsInfo_Type_UNLOCK_PACKAGE = 18,
  GoodsInfo_Type_MONTH_CARD = 19,
  GoodsInfo_Type_RIDES_FRAGMENT = 20
};
bool GoodsInfo_Type_IsValid(int value);
const GoodsInfo_Type GoodsInfo_Type_Type_MIN = GoodsInfo_Type_EXP;
const GoodsInfo_Type GoodsInfo_Type_Type_MAX = GoodsInfo_Type_RIDES_FRAGMENT;
const int GoodsInfo_Type_Type_ARRAYSIZE = GoodsInfo_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* GoodsInfo_Type_descriptor();
inline const ::std::string& GoodsInfo_Type_Name(GoodsInfo_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    GoodsInfo_Type_descriptor(), value);
}
inline bool GoodsInfo_Type_Parse(
    const ::std::string& name, GoodsInfo_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GoodsInfo_Type>(
    GoodsInfo_Type_descriptor(), name, value);
}
enum GoodsInfo_ColorType {
  GoodsInfo_ColorType_WHITE = 0,
  GoodsInfo_ColorType_GREEN = 1,
  GoodsInfo_ColorType_BLUE = 2,
  GoodsInfo_ColorType_YELLOW = 3,
  GoodsInfo_ColorType_RED = 4
};
bool GoodsInfo_ColorType_IsValid(int value);
const GoodsInfo_ColorType GoodsInfo_ColorType_ColorType_MIN = GoodsInfo_ColorType_WHITE;
const GoodsInfo_ColorType GoodsInfo_ColorType_ColorType_MAX = GoodsInfo_ColorType_RED;
const int GoodsInfo_ColorType_ColorType_ARRAYSIZE = GoodsInfo_ColorType_ColorType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GoodsInfo_ColorType_descriptor();
inline const ::std::string& GoodsInfo_ColorType_Name(GoodsInfo_ColorType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GoodsInfo_ColorType_descriptor(), value);
}
inline bool GoodsInfo_ColorType_Parse(
    const ::std::string& name, GoodsInfo_ColorType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GoodsInfo_ColorType>(
    GoodsInfo_ColorType_descriptor(), name, value);
}
enum PB_ItemPackage_Begin {
  PB_ItemPackage_Begin_EQUIPMENT = 0,
  PB_ItemPackage_Begin_GOODS = 105,
  PB_ItemPackage_Begin_GEM = 210
};
bool PB_ItemPackage_Begin_IsValid(int value);
const PB_ItemPackage_Begin PB_ItemPackage_Begin_Begin_MIN = PB_ItemPackage_Begin_EQUIPMENT;
const PB_ItemPackage_Begin PB_ItemPackage_Begin_Begin_MAX = PB_ItemPackage_Begin_GEM;
const int PB_ItemPackage_Begin_Begin_ARRAYSIZE = PB_ItemPackage_Begin_Begin_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_ItemPackage_Begin_descriptor();
inline const ::std::string& PB_ItemPackage_Begin_Name(PB_ItemPackage_Begin value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_ItemPackage_Begin_descriptor(), value);
}
inline bool PB_ItemPackage_Begin_Parse(
    const ::std::string& name, PB_ItemPackage_Begin* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_ItemPackage_Begin>(
    PB_ItemPackage_Begin_descriptor(), name, value);
}
enum PB_ItemPackage_Length {
  PB_ItemPackage_Length_LENGTH = 105
};
bool PB_ItemPackage_Length_IsValid(int value);
const PB_ItemPackage_Length PB_ItemPackage_Length_Length_MIN = PB_ItemPackage_Length_LENGTH;
const PB_ItemPackage_Length PB_ItemPackage_Length_Length_MAX = PB_ItemPackage_Length_LENGTH;
const int PB_ItemPackage_Length_Length_ARRAYSIZE = PB_ItemPackage_Length_Length_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_ItemPackage_Length_descriptor();
inline const ::std::string& PB_ItemPackage_Length_Name(PB_ItemPackage_Length value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_ItemPackage_Length_descriptor(), value);
}
inline bool PB_ItemPackage_Length_Parse(
    const ::std::string& name, PB_ItemPackage_Length* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_ItemPackage_Length>(
    PB_ItemPackage_Length_descriptor(), name, value);
}
enum PB_ALT_Pos {
  PB_ALT_Pos_BEGIN = 0,
  PB_ALT_Pos_END = 8
};
bool PB_ALT_Pos_IsValid(int value);
const PB_ALT_Pos PB_ALT_Pos_Pos_MIN = PB_ALT_Pos_BEGIN;
const PB_ALT_Pos PB_ALT_Pos_Pos_MAX = PB_ALT_Pos_END;
const int PB_ALT_Pos_Pos_ARRAYSIZE = PB_ALT_Pos_Pos_MAX + 1;

const ::google::protobuf::EnumDescriptor* PB_ALT_Pos_descriptor();
inline const ::std::string& PB_ALT_Pos_Name(PB_ALT_Pos value) {
  return ::google::protobuf::internal::NameOfEnum(
    PB_ALT_Pos_descriptor(), value);
}
inline bool PB_ALT_Pos_Parse(
    const ::std::string& name, PB_ALT_Pos* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PB_ALT_Pos>(
    PB_ALT_Pos_descriptor(), name, value);
}
// ===================================================================

class GoodsInfo : public ::google::protobuf::Message {
 public:
  GoodsInfo();
  virtual ~GoodsInfo();
  
  GoodsInfo(const GoodsInfo& from);
  
  inline GoodsInfo& operator=(const GoodsInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsInfo& default_instance();
  
  void Swap(GoodsInfo* other);
  
  // implements Message ----------------------------------------------
  
  GoodsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsInfo& from);
  void MergeFrom(const GoodsInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef GoodsInfo_Type Type;
  static const Type EXP = GoodsInfo_Type_EXP;
  static const Type MATERIAL = GoodsInfo_Type_MATERIAL;
  static const Type GEM = GoodsInfo_Type_GEM;
  static const Type MONEY = GoodsInfo_Type_MONEY;
  static const Type MISSION = GoodsInfo_Type_MISSION;
  static const Type BOX = GoodsInfo_Type_BOX;
  static const Type RMB = GoodsInfo_Type_RMB;
  static const Type SOUL = GoodsInfo_Type_SOUL;
  static const Type SOULJADE = GoodsInfo_Type_SOULJADE;
  static const Type SOULSTONE = GoodsInfo_Type_SOULSTONE;
  static const Type SUBRMB = GoodsInfo_Type_SUBRMB;
  static const Type RECIPE_EQU = GoodsInfo_Type_RECIPE_EQU;
  static const Type RUNE = GoodsInfo_Type_RUNE;
  static const Type EGG = GoodsInfo_Type_EGG;
  static const Type SKILLBOOK = GoodsInfo_Type_SKILLBOOK;
  static const Type LOCK_BOX = GoodsInfo_Type_LOCK_BOX;
  static const Type KEY = GoodsInfo_Type_KEY;
  static const Type VIP = GoodsInfo_Type_VIP;
  static const Type UNLOCK_PACKAGE = GoodsInfo_Type_UNLOCK_PACKAGE;
  static const Type MONTH_CARD = GoodsInfo_Type_MONTH_CARD;
  static const Type RIDES_FRAGMENT = GoodsInfo_Type_RIDES_FRAGMENT;
  static inline bool Type_IsValid(int value) {
    return GoodsInfo_Type_IsValid(value);
  }
  static const Type Type_MIN =
    GoodsInfo_Type_Type_MIN;
  static const Type Type_MAX =
    GoodsInfo_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    GoodsInfo_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return GoodsInfo_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return GoodsInfo_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return GoodsInfo_Type_Parse(name, value);
  }
  
  typedef GoodsInfo_ColorType ColorType;
  static const ColorType WHITE = GoodsInfo_ColorType_WHITE;
  static const ColorType GREEN = GoodsInfo_ColorType_GREEN;
  static const ColorType BLUE = GoodsInfo_ColorType_BLUE;
  static const ColorType YELLOW = GoodsInfo_ColorType_YELLOW;
  static const ColorType RED = GoodsInfo_ColorType_RED;
  static inline bool ColorType_IsValid(int value) {
    return GoodsInfo_ColorType_IsValid(value);
  }
  static const ColorType ColorType_MIN =
    GoodsInfo_ColorType_ColorType_MIN;
  static const ColorType ColorType_MAX =
    GoodsInfo_ColorType_ColorType_MAX;
  static const int ColorType_ARRAYSIZE =
    GoodsInfo_ColorType_ColorType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ColorType_descriptor() {
    return GoodsInfo_ColorType_descriptor();
  }
  static inline const ::std::string& ColorType_Name(ColorType value) {
    return GoodsInfo_ColorType_Name(value);
  }
  static inline bool ColorType_Parse(const ::std::string& name,
      ColorType* value) {
    return GoodsInfo_ColorType_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional int32 picture = 3;
  inline bool has_picture() const;
  inline void clear_picture();
  static const int kPictureFieldNumber = 3;
  inline ::google::protobuf::int32 picture() const;
  inline void set_picture(::google::protobuf::int32 value);
  
  // optional int32 price = 4;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 4;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);
  
  // optional int32 rmb = 5;
  inline bool has_rmb() const;
  inline void clear_rmb();
  static const int kRmbFieldNumber = 5;
  inline ::google::protobuf::int32 rmb() const;
  inline void set_rmb(::google::protobuf::int32 value);
  
  // optional .GoodsInfo.Type type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::GoodsInfo_Type type() const;
  inline void set_type(::GoodsInfo_Type value);
  
  // optional int32 repeat = 7;
  inline bool has_repeat() const;
  inline void clear_repeat();
  static const int kRepeatFieldNumber = 7;
  inline ::google::protobuf::int32 repeat() const;
  inline void set_repeat(::google::protobuf::int32 value);
  
  // repeated int32 arg = 8;
  inline int arg_size() const;
  inline void clear_arg();
  static const int kArgFieldNumber = 8;
  inline ::google::protobuf::int32 arg(int index) const;
  inline void set_arg(int index, ::google::protobuf::int32 value);
  inline void add_arg(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      arg() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_arg();
  
  // optional string desc = 9;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 9;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  
  // optional int32 requiredLevel = 10;
  inline bool has_requiredLevel() const;
  inline void clear_requiredLevel();
  static const int kRequiredLevelFieldNumber = 10;
  inline ::google::protobuf::int32 requiredLevel() const;
  inline void set_requiredLevel(::google::protobuf::int32 value);
  
  // optional .GoodsInfo.ColorType colorType = 11;
  inline bool has_colorType() const;
  inline void clear_colorType();
  static const int kColorTypeFieldNumber = 11;
  inline ::GoodsInfo_ColorType colorType() const;
  inline void set_colorType(::GoodsInfo_ColorType value);
  
  // optional int32 stampCount = 12;
  inline bool has_stampCount() const;
  inline void clear_stampCount();
  static const int kStampCountFieldNumber = 12;
  inline ::google::protobuf::int32 stampCount() const;
  inline void set_stampCount(::google::protobuf::int32 value);
  
  // optional bool bind = 13;
  inline bool has_bind() const;
  inline void clear_bind();
  static const int kBindFieldNumber = 13;
  inline bool bind() const;
  inline void set_bind(bool value);
  
  // optional int32 lovePoint = 14;
  inline bool has_lovePoint() const;
  inline void clear_lovePoint();
  static const int kLovePointFieldNumber = 14;
  inline ::google::protobuf::int32 lovePoint() const;
  inline void set_lovePoint(::google::protobuf::int32 value);
  
  // optional int32 pvpScore = 15;
  inline bool has_pvpScore() const;
  inline void clear_pvpScore();
  static const int kPvpScoreFieldNumber = 15;
  inline ::google::protobuf::int32 pvpScore() const;
  inline void set_pvpScore(::google::protobuf::int32 value);
  
  // optional int32 godScore = 16;
  inline bool has_godScore() const;
  inline void clear_godScore();
  static const int kGodScoreFieldNumber = 16;
  inline ::google::protobuf::int32 godScore() const;
  inline void set_godScore(::google::protobuf::int32 value);
  
  // optional int32 factionContribute = 17;
  inline bool has_factionContribute() const;
  inline void clear_factionContribute();
  static const int kFactionContributeFieldNumber = 17;
  inline ::google::protobuf::int32 factionContribute() const;
  inline void set_factionContribute(::google::protobuf::int32 value);
  
  // optional int32 helpNode = 18;
  inline bool has_helpNode() const;
  inline void clear_helpNode();
  static const int kHelpNodeFieldNumber = 18;
  inline ::google::protobuf::int32 helpNode() const;
  inline void set_helpNode(::google::protobuf::int32 value);
  
  // optional int32 useRMB = 19;
  inline bool has_useRMB() const;
  inline void clear_useRMB();
  static const int kUseRMBFieldNumber = 19;
  inline ::google::protobuf::int32 useRMB() const;
  inline void set_useRMB(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:GoodsInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_picture();
  inline void clear_has_picture();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_rmb();
  inline void clear_has_rmb();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_repeat();
  inline void clear_has_repeat();
  inline void set_has_desc();
  inline void clear_has_desc();
  inline void set_has_requiredLevel();
  inline void clear_has_requiredLevel();
  inline void set_has_colorType();
  inline void clear_has_colorType();
  inline void set_has_stampCount();
  inline void clear_has_stampCount();
  inline void set_has_bind();
  inline void clear_has_bind();
  inline void set_has_lovePoint();
  inline void clear_has_lovePoint();
  inline void set_has_pvpScore();
  inline void clear_has_pvpScore();
  inline void set_has_godScore();
  inline void clear_has_godScore();
  inline void set_has_factionContribute();
  inline void clear_has_factionContribute();
  inline void set_has_helpNode();
  inline void clear_has_helpNode();
  inline void set_has_useRMB();
  inline void clear_has_useRMB();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 id_;
  ::std::string* name_;
  ::google::protobuf::int32 picture_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 rmb_;
  int type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > arg_;
  ::google::protobuf::int32 repeat_;
  ::google::protobuf::int32 requiredLevel_;
  ::std::string* desc_;
  int colorType_;
  ::google::protobuf::int32 stampCount_;
  bool bind_;
  ::google::protobuf::int32 lovePoint_;
  ::google::protobuf::int32 pvpScore_;
  ::google::protobuf::int32 godScore_;
  ::google::protobuf::int32 factionContribute_;
  ::google::protobuf::int32 helpNode_;
  ::google::protobuf::int32 useRMB_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];
  
  friend void  protobuf_AddDesc_ItemInfo_2eproto();
  friend void protobuf_AssignDesc_ItemInfo_2eproto();
  friend void protobuf_ShutdownFile_ItemInfo_2eproto();
  
  void InitAsDefaultInstance();
  static GoodsInfo* default_instance_;
};
// -------------------------------------------------------------------

class AllGoods : public ::google::protobuf::Message {
 public:
  AllGoods();
  virtual ~AllGoods();
  
  AllGoods(const AllGoods& from);
  
  inline AllGoods& operator=(const AllGoods& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllGoods& default_instance();
  
  void Swap(AllGoods* other);
  
  // implements Message ----------------------------------------------
  
  AllGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllGoods& from);
  void MergeFrom(const AllGoods& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .GoodsInfo goods = 1;
  inline int goods_size() const;
  inline void clear_goods();
  static const int kGoodsFieldNumber = 1;
  inline const ::GoodsInfo& goods(int index) const;
  inline ::GoodsInfo* mutable_goods(int index);
  inline ::GoodsInfo* add_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::GoodsInfo >&
      goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::GoodsInfo >*
      mutable_goods();
  
  // @@protoc_insertion_point(class_scope:AllGoods)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::GoodsInfo > goods_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ItemInfo_2eproto();
  friend void protobuf_AssignDesc_ItemInfo_2eproto();
  friend void protobuf_ShutdownFile_ItemInfo_2eproto();
  
  void InitAsDefaultInstance();
  static AllGoods* default_instance_;
};
// -------------------------------------------------------------------

class PB_TransformAsset : public ::google::protobuf::Message {
 public:
  PB_TransformAsset();
  virtual ~PB_TransformAsset();
  
  PB_TransformAsset(const PB_TransformAsset& from);
  
  inline PB_TransformAsset& operator=(const PB_TransformAsset& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_TransformAsset& default_instance();
  
  void Swap(PB_TransformAsset* other);
  
  // implements Message ----------------------------------------------
  
  PB_TransformAsset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_TransformAsset& from);
  void MergeFrom(const PB_TransformAsset& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 quality = 2;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 2;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);
  
  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:PB_TransformAsset)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ItemInfo_2eproto();
  friend void protobuf_AssignDesc_ItemInfo_2eproto();
  friend void protobuf_ShutdownFile_ItemInfo_2eproto();
  
  void InitAsDefaultInstance();
  static PB_TransformAsset* default_instance_;
};
// -------------------------------------------------------------------

class PB_ItemPackage : public ::google::protobuf::Message {
 public:
  PB_ItemPackage();
  virtual ~PB_ItemPackage();
  
  PB_ItemPackage(const PB_ItemPackage& from);
  
  inline PB_ItemPackage& operator=(const PB_ItemPackage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_ItemPackage& default_instance();
  
  void Swap(PB_ItemPackage* other);
  
  // implements Message ----------------------------------------------
  
  PB_ItemPackage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_ItemPackage& from);
  void MergeFrom(const PB_ItemPackage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef PB_ItemPackage_Begin Begin;
  static const Begin EQUIPMENT = PB_ItemPackage_Begin_EQUIPMENT;
  static const Begin GOODS = PB_ItemPackage_Begin_GOODS;
  static const Begin GEM = PB_ItemPackage_Begin_GEM;
  static inline bool Begin_IsValid(int value) {
    return PB_ItemPackage_Begin_IsValid(value);
  }
  static const Begin Begin_MIN =
    PB_ItemPackage_Begin_Begin_MIN;
  static const Begin Begin_MAX =
    PB_ItemPackage_Begin_Begin_MAX;
  static const int Begin_ARRAYSIZE =
    PB_ItemPackage_Begin_Begin_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Begin_descriptor() {
    return PB_ItemPackage_Begin_descriptor();
  }
  static inline const ::std::string& Begin_Name(Begin value) {
    return PB_ItemPackage_Begin_Name(value);
  }
  static inline bool Begin_Parse(const ::std::string& name,
      Begin* value) {
    return PB_ItemPackage_Begin_Parse(name, value);
  }
  
  typedef PB_ItemPackage_Length Length;
  static const Length LENGTH = PB_ItemPackage_Length_LENGTH;
  static inline bool Length_IsValid(int value) {
    return PB_ItemPackage_Length_IsValid(value);
  }
  static const Length Length_MIN =
    PB_ItemPackage_Length_Length_MIN;
  static const Length Length_MAX =
    PB_ItemPackage_Length_Length_MAX;
  static const int Length_ARRAYSIZE =
    PB_ItemPackage_Length_Length_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Length_descriptor() {
    return PB_ItemPackage_Length_descriptor();
  }
  static inline const ::std::string& Length_Name(Length value) {
    return PB_ItemPackage_Length_Name(value);
  }
  static inline bool Length_Parse(const ::std::string& name,
      Length* value) {
    return PB_ItemPackage_Length_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .PB_ItemInfo items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::PB_ItemInfo& items(int index) const;
  inline ::PB_ItemInfo* mutable_items(int index);
  inline ::PB_ItemInfo* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_ItemInfo >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_ItemInfo >*
      mutable_items();
  
  // optional int64 money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::int64 money() const;
  inline void set_money(::google::protobuf::int64 value);
  
  // optional int64 rmb = 3;
  inline bool has_rmb() const;
  inline void clear_rmb();
  static const int kRmbFieldNumber = 3;
  inline ::google::protobuf::int64 rmb() const;
  inline void set_rmb(::google::protobuf::int64 value);
  
  // optional int32 validNumEquipment = 4;
  inline bool has_validNumEquipment() const;
  inline void clear_validNumEquipment();
  static const int kValidNumEquipmentFieldNumber = 4;
  inline ::google::protobuf::int32 validNumEquipment() const;
  inline void set_validNumEquipment(::google::protobuf::int32 value);
  
  // optional int32 validNumGoods = 5;
  inline bool has_validNumGoods() const;
  inline void clear_validNumGoods();
  static const int kValidNumGoodsFieldNumber = 5;
  inline ::google::protobuf::int32 validNumGoods() const;
  inline void set_validNumGoods(::google::protobuf::int32 value);
  
  // optional int32 validNumGem = 6;
  inline bool has_validNumGem() const;
  inline void clear_validNumGem();
  static const int kValidNumGemFieldNumber = 6;
  inline ::google::protobuf::int32 validNumGem() const;
  inline void set_validNumGem(::google::protobuf::int32 value);
  
  // optional int64 soul = 7;
  inline bool has_soul() const;
  inline void clear_soul();
  static const int kSoulFieldNumber = 7;
  inline ::google::protobuf::int64 soul() const;
  inline void set_soul(::google::protobuf::int64 value);
  
  // optional int64 smallSoul = 8;
  inline bool has_smallSoul() const;
  inline void clear_smallSoul();
  static const int kSmallSoulFieldNumber = 8;
  inline ::google::protobuf::int64 smallSoul() const;
  inline void set_smallSoul(::google::protobuf::int64 value);
  
  // optional int64 mediumSoul = 9;
  inline bool has_mediumSoul() const;
  inline void clear_mediumSoul();
  static const int kMediumSoulFieldNumber = 9;
  inline ::google::protobuf::int64 mediumSoul() const;
  inline void set_mediumSoul(::google::protobuf::int64 value);
  
  // optional int64 bigSoul = 10;
  inline bool has_bigSoul() const;
  inline void clear_bigSoul();
  static const int kBigSoulFieldNumber = 10;
  inline ::google::protobuf::int64 bigSoul() const;
  inline void set_bigSoul(::google::protobuf::int64 value);
  
  // optional int64 perfectSoul = 11;
  inline bool has_perfectSoul() const;
  inline void clear_perfectSoul();
  static const int kPerfectSoulFieldNumber = 11;
  inline ::google::protobuf::int64 perfectSoul() const;
  inline void set_perfectSoul(::google::protobuf::int64 value);
  
  // optional int32 honor = 12;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 12;
  inline ::google::protobuf::int32 honor() const;
  inline void set_honor(::google::protobuf::int32 value);
  
  // optional int32 durability = 13;
  inline bool has_durability() const;
  inline void clear_durability();
  static const int kDurabilityFieldNumber = 13;
  inline ::google::protobuf::int32 durability() const;
  inline void set_durability(::google::protobuf::int32 value);
  
  // optional int64 totalRMB = 14;
  inline bool has_totalRMB() const;
  inline void clear_totalRMB();
  static const int kTotalRMBFieldNumber = 14;
  inline ::google::protobuf::int64 totalRMB() const;
  inline void set_totalRMB(::google::protobuf::int64 value);
  
  // optional int64 soulStone = 15;
  inline bool has_soulStone() const;
  inline void clear_soulStone();
  static const int kSoulStoneFieldNumber = 15;
  inline ::google::protobuf::int64 soulStone() const;
  inline void set_soulStone(::google::protobuf::int64 value);
  
  // optional int64 pkScore = 16;
  inline bool has_pkScore() const;
  inline void clear_pkScore();
  static const int kPkScoreFieldNumber = 16;
  inline ::google::protobuf::int64 pkScore() const;
  inline void set_pkScore(::google::protobuf::int64 value);
  
  // optional int32 vip = 17;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 17;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);
  
  // optional int32 godScore = 18;
  inline bool has_godScore() const;
  inline void clear_godScore();
  static const int kGodScoreFieldNumber = 18;
  inline ::google::protobuf::int32 godScore() const;
  inline void set_godScore(::google::protobuf::int32 value);
  
  // optional int64 subRMB = 20;
  inline bool has_subRMB() const;
  inline void clear_subRMB();
  static const int kSubRMBFieldNumber = 20;
  inline ::google::protobuf::int64 subRMB() const;
  inline void set_subRMB(::google::protobuf::int64 value);
  
  // repeated int32 wings = 21;
  inline int wings_size() const;
  inline void clear_wings();
  static const int kWingsFieldNumber = 21;
  inline ::google::protobuf::int32 wings(int index) const;
  inline void set_wings(int index, ::google::protobuf::int32 value);
  inline void add_wings(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      wings() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_wings();
  
  // repeated .PB_FashionAsset fashions = 23;
  inline int fashions_size() const;
  inline void clear_fashions();
  static const int kFashionsFieldNumber = 23;
  inline const ::PB_FashionAsset& fashions(int index) const;
  inline ::PB_FashionAsset* mutable_fashions(int index);
  inline ::PB_FashionAsset* add_fashions();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_FashionAsset >&
      fashions() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_FashionAsset >*
      mutable_fashions();
  
  // optional int32 lovePoint = 24;
  inline bool has_lovePoint() const;
  inline void clear_lovePoint();
  static const int kLovePointFieldNumber = 24;
  inline ::google::protobuf::int32 lovePoint() const;
  inline void set_lovePoint(::google::protobuf::int32 value);
  
  // repeated .PB_EquipAsset equips = 25;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 25;
  inline const ::PB_EquipAsset& equips(int index) const;
  inline ::PB_EquipAsset* mutable_equips(int index);
  inline ::PB_EquipAsset* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_EquipAsset >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_EquipAsset >*
      mutable_equips();
  
  // optional int64 pkScoreActive = 26;
  inline bool has_pkScoreActive() const;
  inline void clear_pkScoreActive();
  static const int kPkScoreActiveFieldNumber = 26;
  inline ::google::protobuf::int64 pkScoreActive() const;
  inline void set_pkScoreActive(::google::protobuf::int64 value);
  
  // optional int32 rmbActive = 27;
  inline bool has_rmbActive() const;
  inline void clear_rmbActive();
  static const int kRmbActiveFieldNumber = 27;
  inline ::google::protobuf::int32 rmbActive() const;
  inline void set_rmbActive(::google::protobuf::int32 value);
  
  // optional int64 totalCost = 28;
  inline bool has_totalCost() const;
  inline void clear_totalCost();
  static const int kTotalCostFieldNumber = 28;
  inline ::google::protobuf::int64 totalCost() const;
  inline void set_totalCost(::google::protobuf::int64 value);
  
  // optional int32 blessActive = 29;
  inline bool has_blessActive() const;
  inline void clear_blessActive();
  static const int kBlessActiveFieldNumber = 29;
  inline ::google::protobuf::int32 blessActive() const;
  inline void set_blessActive(::google::protobuf::int32 value);
  
  // repeated .PB_TransformAsset transforms = 30;
  inline int transforms_size() const;
  inline void clear_transforms();
  static const int kTransformsFieldNumber = 30;
  inline const ::PB_TransformAsset& transforms(int index) const;
  inline ::PB_TransformAsset* mutable_transforms(int index);
  inline ::PB_TransformAsset* add_transforms();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_TransformAsset >&
      transforms() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_TransformAsset >*
      mutable_transforms();
  
  // optional int32 activeCost = 31;
  inline bool has_activeCost() const;
  inline void clear_activeCost();
  static const int kActiveCostFieldNumber = 31;
  inline ::google::protobuf::int32 activeCost() const;
  inline void set_activeCost(::google::protobuf::int32 value);
  
  // optional int32 activeCostEndTime = 32;
  inline bool has_activeCostEndTime() const;
  inline void clear_activeCostEndTime();
  static const int kActiveCostEndTimeFieldNumber = 32;
  inline ::google::protobuf::int32 activeCostEndTime() const;
  inline void set_activeCostEndTime(::google::protobuf::int32 value);
  
  // repeated .PB_RidesAsset rides = 33;
  inline int rides_size() const;
  inline void clear_rides();
  static const int kRidesFieldNumber = 33;
  inline const ::PB_RidesAsset& rides(int index) const;
  inline ::PB_RidesAsset* mutable_rides(int index);
  inline ::PB_RidesAsset* add_rides();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_RidesAsset >&
      rides() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_RidesAsset >*
      mutable_rides();
  
  // repeated .PB_GodShipAsset godShips = 34;
  inline int godShips_size() const;
  inline void clear_godShips();
  static const int kGodShipsFieldNumber = 34;
  inline const ::PB_GodShipAsset& godShips(int index) const;
  inline ::PB_GodShipAsset* mutable_godShips(int index);
  inline ::PB_GodShipAsset* add_godShips();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_GodShipAsset >&
      godShips() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_GodShipAsset >*
      mutable_godShips();
  
  // repeated int32 godShipsPackage = 35;
  inline int godShipsPackage_size() const;
  inline void clear_godShipsPackage();
  static const int kGodShipsPackageFieldNumber = 35;
  inline ::google::protobuf::int32 godShipsPackage(int index) const;
  inline void set_godShipsPackage(int index, ::google::protobuf::int32 value);
  inline void add_godShipsPackage(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      godShipsPackage() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_godShipsPackage();
  
  // optional int64 ridesFood = 36;
  inline bool has_ridesFood() const;
  inline void clear_ridesFood();
  static const int kRidesFoodFieldNumber = 36;
  inline ::google::protobuf::int64 ridesFood() const;
  inline void set_ridesFood(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:PB_ItemPackage)
 private:
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_rmb();
  inline void clear_has_rmb();
  inline void set_has_validNumEquipment();
  inline void clear_has_validNumEquipment();
  inline void set_has_validNumGoods();
  inline void clear_has_validNumGoods();
  inline void set_has_validNumGem();
  inline void clear_has_validNumGem();
  inline void set_has_soul();
  inline void clear_has_soul();
  inline void set_has_smallSoul();
  inline void clear_has_smallSoul();
  inline void set_has_mediumSoul();
  inline void clear_has_mediumSoul();
  inline void set_has_bigSoul();
  inline void clear_has_bigSoul();
  inline void set_has_perfectSoul();
  inline void clear_has_perfectSoul();
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_durability();
  inline void clear_has_durability();
  inline void set_has_totalRMB();
  inline void clear_has_totalRMB();
  inline void set_has_soulStone();
  inline void clear_has_soulStone();
  inline void set_has_pkScore();
  inline void clear_has_pkScore();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_godScore();
  inline void clear_has_godScore();
  inline void set_has_subRMB();
  inline void clear_has_subRMB();
  inline void set_has_lovePoint();
  inline void clear_has_lovePoint();
  inline void set_has_pkScoreActive();
  inline void clear_has_pkScoreActive();
  inline void set_has_rmbActive();
  inline void clear_has_rmbActive();
  inline void set_has_totalCost();
  inline void clear_has_totalCost();
  inline void set_has_blessActive();
  inline void clear_has_blessActive();
  inline void set_has_activeCost();
  inline void clear_has_activeCost();
  inline void set_has_activeCostEndTime();
  inline void clear_has_activeCostEndTime();
  inline void set_has_ridesFood();
  inline void clear_has_ridesFood();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PB_ItemInfo > items_;
  ::google::protobuf::int64 money_;
  ::google::protobuf::int64 rmb_;
  ::google::protobuf::int32 validNumEquipment_;
  ::google::protobuf::int32 validNumGoods_;
  ::google::protobuf::int64 soul_;
  ::google::protobuf::int64 smallSoul_;
  ::google::protobuf::int64 mediumSoul_;
  ::google::protobuf::int32 validNumGem_;
  ::google::protobuf::int32 honor_;
  ::google::protobuf::int64 bigSoul_;
  ::google::protobuf::int64 perfectSoul_;
  ::google::protobuf::int64 totalRMB_;
  ::google::protobuf::int64 soulStone_;
  ::google::protobuf::int32 durability_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int64 pkScore_;
  ::google::protobuf::int64 subRMB_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > wings_;
  ::google::protobuf::int32 godScore_;
  ::google::protobuf::int32 lovePoint_;
  ::google::protobuf::RepeatedPtrField< ::PB_FashionAsset > fashions_;
  ::google::protobuf::RepeatedPtrField< ::PB_EquipAsset > equips_;
  ::google::protobuf::int64 pkScoreActive_;
  ::google::protobuf::int64 totalCost_;
  ::google::protobuf::int32 rmbActive_;
  ::google::protobuf::int32 blessActive_;
  ::google::protobuf::RepeatedPtrField< ::PB_TransformAsset > transforms_;
  ::google::protobuf::int32 activeCost_;
  ::google::protobuf::int32 activeCostEndTime_;
  ::google::protobuf::RepeatedPtrField< ::PB_RidesAsset > rides_;
  ::google::protobuf::RepeatedPtrField< ::PB_GodShipAsset > godShips_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > godShipsPackage_;
  ::google::protobuf::int64 ridesFood_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(34 + 31) / 32];
  
  friend void  protobuf_AddDesc_ItemInfo_2eproto();
  friend void protobuf_AssignDesc_ItemInfo_2eproto();
  friend void protobuf_ShutdownFile_ItemInfo_2eproto();
  
  void InitAsDefaultInstance();
  static PB_ItemPackage* default_instance_;
};
// -------------------------------------------------------------------

class PB_ALT : public ::google::protobuf::Message {
 public:
  PB_ALT();
  virtual ~PB_ALT();
  
  PB_ALT(const PB_ALT& from);
  
  inline PB_ALT& operator=(const PB_ALT& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_ALT& default_instance();
  
  void Swap(PB_ALT* other);
  
  // implements Message ----------------------------------------------
  
  PB_ALT* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_ALT& from);
  void MergeFrom(const PB_ALT& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef PB_ALT_Pos Pos;
  static const Pos BEGIN = PB_ALT_Pos_BEGIN;
  static const Pos END = PB_ALT_Pos_END;
  static inline bool Pos_IsValid(int value) {
    return PB_ALT_Pos_IsValid(value);
  }
  static const Pos Pos_MIN =
    PB_ALT_Pos_Pos_MIN;
  static const Pos Pos_MAX =
    PB_ALT_Pos_Pos_MAX;
  static const int Pos_ARRAYSIZE =
    PB_ALT_Pos_Pos_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Pos_descriptor() {
    return PB_ALT_Pos_descriptor();
  }
  static inline const ::std::string& Pos_Name(Pos value) {
    return PB_ALT_Pos_Name(value);
  }
  static inline bool Pos_Parse(const ::std::string& name,
      Pos* value) {
    return PB_ALT_Pos_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // repeated .PB_ItemInfo alt = 1;
  inline int alt_size() const;
  inline void clear_alt();
  static const int kAltFieldNumber = 1;
  inline const ::PB_ItemInfo& alt(int index) const;
  inline ::PB_ItemInfo* mutable_alt(int index);
  inline ::PB_ItemInfo* add_alt();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_ItemInfo >&
      alt() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_ItemInfo >*
      mutable_alt();
  
  // @@protoc_insertion_point(class_scope:PB_ALT)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::PB_ItemInfo > alt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ItemInfo_2eproto();
  friend void protobuf_AssignDesc_ItemInfo_2eproto();
  friend void protobuf_ShutdownFile_ItemInfo_2eproto();
  
  void InitAsDefaultInstance();
  static PB_ALT* default_instance_;
};
// -------------------------------------------------------------------

class DropItem : public ::google::protobuf::Message {
 public:
  DropItem();
  virtual ~DropItem();
  
  DropItem(const DropItem& from);
  
  inline DropItem& operator=(const DropItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DropItem& default_instance();
  
  void Swap(DropItem* other);
  
  // implements Message ----------------------------------------------
  
  DropItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DropItem& from);
  void MergeFrom(const DropItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PB_ItemInfo.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::PB_ItemInfo_Type type() const;
  inline void set_type(::PB_ItemInfo_Type value);
  
  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 rate = 3;
  inline bool has_rate() const;
  inline void clear_rate();
  static const int kRateFieldNumber = 3;
  inline ::google::protobuf::int32 rate() const;
  inline void set_rate(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:DropItem)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rate();
  inline void clear_has_rate();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int type_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 rate_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ItemInfo_2eproto();
  friend void protobuf_AssignDesc_ItemInfo_2eproto();
  friend void protobuf_ShutdownFile_ItemInfo_2eproto();
  
  void InitAsDefaultInstance();
  static DropItem* default_instance_;
};
// -------------------------------------------------------------------

class DropTable : public ::google::protobuf::Message {
 public:
  DropTable();
  virtual ~DropTable();
  
  DropTable(const DropTable& from);
  
  inline DropTable& operator=(const DropTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DropTable& default_instance();
  
  void Swap(DropTable* other);
  
  // implements Message ----------------------------------------------
  
  DropTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DropTable& from);
  void MergeFrom(const DropTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // repeated .DropItem dropItems = 2;
  inline int dropItems_size() const;
  inline void clear_dropItems();
  static const int kDropItemsFieldNumber = 2;
  inline const ::DropItem& dropItems(int index) const;
  inline ::DropItem* mutable_dropItems(int index);
  inline ::DropItem* add_dropItems();
  inline const ::google::protobuf::RepeatedPtrField< ::DropItem >&
      dropItems() const;
  inline ::google::protobuf::RepeatedPtrField< ::DropItem >*
      mutable_dropItems();
  
  // optional int32 min = 3;
  inline bool has_min() const;
  inline void clear_min();
  static const int kMinFieldNumber = 3;
  inline ::google::protobuf::int32 min() const;
  inline void set_min(::google::protobuf::int32 value);
  
  // optional int32 max = 4;
  inline bool has_max() const;
  inline void clear_max();
  static const int kMaxFieldNumber = 4;
  inline ::google::protobuf::int32 max() const;
  inline void set_max(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:DropTable)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_min();
  inline void clear_has_min();
  inline void set_has_max();
  inline void clear_has_max();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::DropItem > dropItems_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 min_;
  ::google::protobuf::int32 max_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_ItemInfo_2eproto();
  friend void protobuf_AssignDesc_ItemInfo_2eproto();
  friend void protobuf_ShutdownFile_ItemInfo_2eproto();
  
  void InitAsDefaultInstance();
  static DropTable* default_instance_;
};
// -------------------------------------------------------------------

class AllDropTables : public ::google::protobuf::Message {
 public:
  AllDropTables();
  virtual ~AllDropTables();
  
  AllDropTables(const AllDropTables& from);
  
  inline AllDropTables& operator=(const AllDropTables& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllDropTables& default_instance();
  
  void Swap(AllDropTables* other);
  
  // implements Message ----------------------------------------------
  
  AllDropTables* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllDropTables& from);
  void MergeFrom(const AllDropTables& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .DropTable dropTables = 1;
  inline int dropTables_size() const;
  inline void clear_dropTables();
  static const int kDropTablesFieldNumber = 1;
  inline const ::DropTable& dropTables(int index) const;
  inline ::DropTable* mutable_dropTables(int index);
  inline ::DropTable* add_dropTables();
  inline const ::google::protobuf::RepeatedPtrField< ::DropTable >&
      dropTables() const;
  inline ::google::protobuf::RepeatedPtrField< ::DropTable >*
      mutable_dropTables();
  
  // @@protoc_insertion_point(class_scope:AllDropTables)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::DropTable > dropTables_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ItemInfo_2eproto();
  friend void protobuf_AssignDesc_ItemInfo_2eproto();
  friend void protobuf_ShutdownFile_ItemInfo_2eproto();
  
  void InitAsDefaultInstance();
  static AllDropTables* default_instance_;
};
// -------------------------------------------------------------------

class ExchangeTable : public ::google::protobuf::Message {
 public:
  ExchangeTable();
  virtual ~ExchangeTable();
  
  ExchangeTable(const ExchangeTable& from);
  
  inline ExchangeTable& operator=(const ExchangeTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeTable& default_instance();
  
  void Swap(ExchangeTable* other);
  
  // implements Message ----------------------------------------------
  
  ExchangeTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExchangeTable& from);
  void MergeFrom(const ExchangeTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 sourceGoods = 1;
  inline bool has_sourceGoods() const;
  inline void clear_sourceGoods();
  static const int kSourceGoodsFieldNumber = 1;
  inline ::google::protobuf::int32 sourceGoods() const;
  inline void set_sourceGoods(::google::protobuf::int32 value);
  
  // optional int32 sourceCount = 2;
  inline bool has_sourceCount() const;
  inline void clear_sourceCount();
  static const int kSourceCountFieldNumber = 2;
  inline ::google::protobuf::int32 sourceCount() const;
  inline void set_sourceCount(::google::protobuf::int32 value);
  
  // optional .BoxInfo.Type targetType = 3;
  inline bool has_targetType() const;
  inline void clear_targetType();
  static const int kTargetTypeFieldNumber = 3;
  inline ::BoxInfo_Type targetType() const;
  inline void set_targetType(::BoxInfo_Type value);
  
  // optional int32 arg1 = 4;
  inline bool has_arg1() const;
  inline void clear_arg1();
  static const int kArg1FieldNumber = 4;
  inline ::google::protobuf::int32 arg1() const;
  inline void set_arg1(::google::protobuf::int32 value);
  
  // optional int32 arg2 = 5;
  inline bool has_arg2() const;
  inline void clear_arg2();
  static const int kArg2FieldNumber = 5;
  inline ::google::protobuf::int32 arg2() const;
  inline void set_arg2(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:ExchangeTable)
 private:
  inline void set_has_sourceGoods();
  inline void clear_has_sourceGoods();
  inline void set_has_sourceCount();
  inline void clear_has_sourceCount();
  inline void set_has_targetType();
  inline void clear_has_targetType();
  inline void set_has_arg1();
  inline void clear_has_arg1();
  inline void set_has_arg2();
  inline void clear_has_arg2();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 sourceGoods_;
  ::google::protobuf::int32 sourceCount_;
  int targetType_;
  ::google::protobuf::int32 arg1_;
  ::google::protobuf::int32 arg2_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_ItemInfo_2eproto();
  friend void protobuf_AssignDesc_ItemInfo_2eproto();
  friend void protobuf_ShutdownFile_ItemInfo_2eproto();
  
  void InitAsDefaultInstance();
  static ExchangeTable* default_instance_;
};
// -------------------------------------------------------------------

class AllExchangeTable : public ::google::protobuf::Message {
 public:
  AllExchangeTable();
  virtual ~AllExchangeTable();
  
  AllExchangeTable(const AllExchangeTable& from);
  
  inline AllExchangeTable& operator=(const AllExchangeTable& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllExchangeTable& default_instance();
  
  void Swap(AllExchangeTable* other);
  
  // implements Message ----------------------------------------------
  
  AllExchangeTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllExchangeTable& from);
  void MergeFrom(const AllExchangeTable& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ExchangeTable exchangeTable = 1;
  inline int exchangeTable_size() const;
  inline void clear_exchangeTable();
  static const int kExchangeTableFieldNumber = 1;
  inline const ::ExchangeTable& exchangeTable(int index) const;
  inline ::ExchangeTable* mutable_exchangeTable(int index);
  inline ::ExchangeTable* add_exchangeTable();
  inline const ::google::protobuf::RepeatedPtrField< ::ExchangeTable >&
      exchangeTable() const;
  inline ::google::protobuf::RepeatedPtrField< ::ExchangeTable >*
      mutable_exchangeTable();
  
  // @@protoc_insertion_point(class_scope:AllExchangeTable)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ExchangeTable > exchangeTable_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ItemInfo_2eproto();
  friend void protobuf_AssignDesc_ItemInfo_2eproto();
  friend void protobuf_ShutdownFile_ItemInfo_2eproto();
  
  void InitAsDefaultInstance();
  static AllExchangeTable* default_instance_;
};
// ===================================================================


// ===================================================================

// GoodsInfo

// optional int64 id = 1;
inline bool GoodsInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodsInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodsInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodsInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 GoodsInfo::id() const {
  return id_;
}
inline void GoodsInfo::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool GoodsInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoodsInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoodsInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoodsInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GoodsInfo::name() const {
  return *name_;
}
inline void GoodsInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GoodsInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GoodsInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GoodsInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GoodsInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 picture = 3;
inline bool GoodsInfo::has_picture() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoodsInfo::set_has_picture() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoodsInfo::clear_has_picture() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoodsInfo::clear_picture() {
  picture_ = 0;
  clear_has_picture();
}
inline ::google::protobuf::int32 GoodsInfo::picture() const {
  return picture_;
}
inline void GoodsInfo::set_picture(::google::protobuf::int32 value) {
  set_has_picture();
  picture_ = value;
}

// optional int32 price = 4;
inline bool GoodsInfo::has_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoodsInfo::set_has_price() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoodsInfo::clear_has_price() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoodsInfo::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 GoodsInfo::price() const {
  return price_;
}
inline void GoodsInfo::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
}

// optional int32 rmb = 5;
inline bool GoodsInfo::has_rmb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GoodsInfo::set_has_rmb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GoodsInfo::clear_has_rmb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GoodsInfo::clear_rmb() {
  rmb_ = 0;
  clear_has_rmb();
}
inline ::google::protobuf::int32 GoodsInfo::rmb() const {
  return rmb_;
}
inline void GoodsInfo::set_rmb(::google::protobuf::int32 value) {
  set_has_rmb();
  rmb_ = value;
}

// optional .GoodsInfo.Type type = 6;
inline bool GoodsInfo::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GoodsInfo::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GoodsInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GoodsInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::GoodsInfo_Type GoodsInfo::type() const {
  return static_cast< ::GoodsInfo_Type >(type_);
}
inline void GoodsInfo::set_type(::GoodsInfo_Type value) {
  GOOGLE_DCHECK(::GoodsInfo_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional int32 repeat = 7;
inline bool GoodsInfo::has_repeat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GoodsInfo::set_has_repeat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GoodsInfo::clear_has_repeat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GoodsInfo::clear_repeat() {
  repeat_ = 0;
  clear_has_repeat();
}
inline ::google::protobuf::int32 GoodsInfo::repeat() const {
  return repeat_;
}
inline void GoodsInfo::set_repeat(::google::protobuf::int32 value) {
  set_has_repeat();
  repeat_ = value;
}

// repeated int32 arg = 8;
inline int GoodsInfo::arg_size() const {
  return arg_.size();
}
inline void GoodsInfo::clear_arg() {
  arg_.Clear();
}
inline ::google::protobuf::int32 GoodsInfo::arg(int index) const {
  return arg_.Get(index);
}
inline void GoodsInfo::set_arg(int index, ::google::protobuf::int32 value) {
  arg_.Set(index, value);
}
inline void GoodsInfo::add_arg(::google::protobuf::int32 value) {
  arg_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GoodsInfo::arg() const {
  return arg_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GoodsInfo::mutable_arg() {
  return &arg_;
}

// optional string desc = 9;
inline bool GoodsInfo::has_desc() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GoodsInfo::set_has_desc() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GoodsInfo::clear_has_desc() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GoodsInfo::clear_desc() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    desc_->clear();
  }
  clear_has_desc();
}
inline const ::std::string& GoodsInfo::desc() const {
  return *desc_;
}
inline void GoodsInfo::set_desc(const ::std::string& value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void GoodsInfo::set_desc(const char* value) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(value);
}
inline void GoodsInfo::set_desc(const char* value, size_t size) {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  desc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GoodsInfo::mutable_desc() {
  set_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    desc_ = new ::std::string;
  }
  return desc_;
}
inline ::std::string* GoodsInfo::release_desc() {
  clear_has_desc();
  if (desc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = desc_;
    desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 requiredLevel = 10;
inline bool GoodsInfo::has_requiredLevel() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GoodsInfo::set_has_requiredLevel() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GoodsInfo::clear_has_requiredLevel() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GoodsInfo::clear_requiredLevel() {
  requiredLevel_ = 0;
  clear_has_requiredLevel();
}
inline ::google::protobuf::int32 GoodsInfo::requiredLevel() const {
  return requiredLevel_;
}
inline void GoodsInfo::set_requiredLevel(::google::protobuf::int32 value) {
  set_has_requiredLevel();
  requiredLevel_ = value;
}

// optional .GoodsInfo.ColorType colorType = 11;
inline bool GoodsInfo::has_colorType() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GoodsInfo::set_has_colorType() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GoodsInfo::clear_has_colorType() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GoodsInfo::clear_colorType() {
  colorType_ = 0;
  clear_has_colorType();
}
inline ::GoodsInfo_ColorType GoodsInfo::colorType() const {
  return static_cast< ::GoodsInfo_ColorType >(colorType_);
}
inline void GoodsInfo::set_colorType(::GoodsInfo_ColorType value) {
  GOOGLE_DCHECK(::GoodsInfo_ColorType_IsValid(value));
  set_has_colorType();
  colorType_ = value;
}

// optional int32 stampCount = 12;
inline bool GoodsInfo::has_stampCount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GoodsInfo::set_has_stampCount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GoodsInfo::clear_has_stampCount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GoodsInfo::clear_stampCount() {
  stampCount_ = 0;
  clear_has_stampCount();
}
inline ::google::protobuf::int32 GoodsInfo::stampCount() const {
  return stampCount_;
}
inline void GoodsInfo::set_stampCount(::google::protobuf::int32 value) {
  set_has_stampCount();
  stampCount_ = value;
}

// optional bool bind = 13;
inline bool GoodsInfo::has_bind() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GoodsInfo::set_has_bind() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GoodsInfo::clear_has_bind() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GoodsInfo::clear_bind() {
  bind_ = false;
  clear_has_bind();
}
inline bool GoodsInfo::bind() const {
  return bind_;
}
inline void GoodsInfo::set_bind(bool value) {
  set_has_bind();
  bind_ = value;
}

// optional int32 lovePoint = 14;
inline bool GoodsInfo::has_lovePoint() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GoodsInfo::set_has_lovePoint() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GoodsInfo::clear_has_lovePoint() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GoodsInfo::clear_lovePoint() {
  lovePoint_ = 0;
  clear_has_lovePoint();
}
inline ::google::protobuf::int32 GoodsInfo::lovePoint() const {
  return lovePoint_;
}
inline void GoodsInfo::set_lovePoint(::google::protobuf::int32 value) {
  set_has_lovePoint();
  lovePoint_ = value;
}

// optional int32 pvpScore = 15;
inline bool GoodsInfo::has_pvpScore() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GoodsInfo::set_has_pvpScore() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GoodsInfo::clear_has_pvpScore() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GoodsInfo::clear_pvpScore() {
  pvpScore_ = 0;
  clear_has_pvpScore();
}
inline ::google::protobuf::int32 GoodsInfo::pvpScore() const {
  return pvpScore_;
}
inline void GoodsInfo::set_pvpScore(::google::protobuf::int32 value) {
  set_has_pvpScore();
  pvpScore_ = value;
}

// optional int32 godScore = 16;
inline bool GoodsInfo::has_godScore() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GoodsInfo::set_has_godScore() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GoodsInfo::clear_has_godScore() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GoodsInfo::clear_godScore() {
  godScore_ = 0;
  clear_has_godScore();
}
inline ::google::protobuf::int32 GoodsInfo::godScore() const {
  return godScore_;
}
inline void GoodsInfo::set_godScore(::google::protobuf::int32 value) {
  set_has_godScore();
  godScore_ = value;
}

// optional int32 factionContribute = 17;
inline bool GoodsInfo::has_factionContribute() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GoodsInfo::set_has_factionContribute() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GoodsInfo::clear_has_factionContribute() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GoodsInfo::clear_factionContribute() {
  factionContribute_ = 0;
  clear_has_factionContribute();
}
inline ::google::protobuf::int32 GoodsInfo::factionContribute() const {
  return factionContribute_;
}
inline void GoodsInfo::set_factionContribute(::google::protobuf::int32 value) {
  set_has_factionContribute();
  factionContribute_ = value;
}

// optional int32 helpNode = 18;
inline bool GoodsInfo::has_helpNode() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GoodsInfo::set_has_helpNode() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GoodsInfo::clear_has_helpNode() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GoodsInfo::clear_helpNode() {
  helpNode_ = 0;
  clear_has_helpNode();
}
inline ::google::protobuf::int32 GoodsInfo::helpNode() const {
  return helpNode_;
}
inline void GoodsInfo::set_helpNode(::google::protobuf::int32 value) {
  set_has_helpNode();
  helpNode_ = value;
}

// optional int32 useRMB = 19;
inline bool GoodsInfo::has_useRMB() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GoodsInfo::set_has_useRMB() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GoodsInfo::clear_has_useRMB() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GoodsInfo::clear_useRMB() {
  useRMB_ = 0;
  clear_has_useRMB();
}
inline ::google::protobuf::int32 GoodsInfo::useRMB() const {
  return useRMB_;
}
inline void GoodsInfo::set_useRMB(::google::protobuf::int32 value) {
  set_has_useRMB();
  useRMB_ = value;
}

// -------------------------------------------------------------------

// AllGoods

// repeated .GoodsInfo goods = 1;
inline int AllGoods::goods_size() const {
  return goods_.size();
}
inline void AllGoods::clear_goods() {
  goods_.Clear();
}
inline const ::GoodsInfo& AllGoods::goods(int index) const {
  return goods_.Get(index);
}
inline ::GoodsInfo* AllGoods::mutable_goods(int index) {
  return goods_.Mutable(index);
}
inline ::GoodsInfo* AllGoods::add_goods() {
  return goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GoodsInfo >&
AllGoods::goods() const {
  return goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::GoodsInfo >*
AllGoods::mutable_goods() {
  return &goods_;
}

// -------------------------------------------------------------------

// PB_TransformAsset

// optional int32 id = 1 [default = -1];
inline bool PB_TransformAsset::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_TransformAsset::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_TransformAsset::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_TransformAsset::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 PB_TransformAsset::id() const {
  return id_;
}
inline void PB_TransformAsset::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 quality = 2;
inline bool PB_TransformAsset::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_TransformAsset::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_TransformAsset::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_TransformAsset::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 PB_TransformAsset::quality() const {
  return quality_;
}
inline void PB_TransformAsset::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 level = 3;
inline bool PB_TransformAsset::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_TransformAsset::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_TransformAsset::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_TransformAsset::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PB_TransformAsset::level() const {
  return level_;
}
inline void PB_TransformAsset::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// PB_ItemPackage

// repeated .PB_ItemInfo items = 1;
inline int PB_ItemPackage::items_size() const {
  return items_.size();
}
inline void PB_ItemPackage::clear_items() {
  items_.Clear();
}
inline const ::PB_ItemInfo& PB_ItemPackage::items(int index) const {
  return items_.Get(index);
}
inline ::PB_ItemInfo* PB_ItemPackage::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::PB_ItemInfo* PB_ItemPackage::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_ItemInfo >&
PB_ItemPackage::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_ItemInfo >*
PB_ItemPackage::mutable_items() {
  return &items_;
}

// optional int64 money = 2;
inline bool PB_ItemPackage::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_ItemPackage::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_ItemPackage::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_ItemPackage::clear_money() {
  money_ = GOOGLE_LONGLONG(0);
  clear_has_money();
}
inline ::google::protobuf::int64 PB_ItemPackage::money() const {
  return money_;
}
inline void PB_ItemPackage::set_money(::google::protobuf::int64 value) {
  set_has_money();
  money_ = value;
}

// optional int64 rmb = 3;
inline bool PB_ItemPackage::has_rmb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_ItemPackage::set_has_rmb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_ItemPackage::clear_has_rmb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_ItemPackage::clear_rmb() {
  rmb_ = GOOGLE_LONGLONG(0);
  clear_has_rmb();
}
inline ::google::protobuf::int64 PB_ItemPackage::rmb() const {
  return rmb_;
}
inline void PB_ItemPackage::set_rmb(::google::protobuf::int64 value) {
  set_has_rmb();
  rmb_ = value;
}

// optional int32 validNumEquipment = 4;
inline bool PB_ItemPackage::has_validNumEquipment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_ItemPackage::set_has_validNumEquipment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_ItemPackage::clear_has_validNumEquipment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_ItemPackage::clear_validNumEquipment() {
  validNumEquipment_ = 0;
  clear_has_validNumEquipment();
}
inline ::google::protobuf::int32 PB_ItemPackage::validNumEquipment() const {
  return validNumEquipment_;
}
inline void PB_ItemPackage::set_validNumEquipment(::google::protobuf::int32 value) {
  set_has_validNumEquipment();
  validNumEquipment_ = value;
}

// optional int32 validNumGoods = 5;
inline bool PB_ItemPackage::has_validNumGoods() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_ItemPackage::set_has_validNumGoods() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_ItemPackage::clear_has_validNumGoods() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_ItemPackage::clear_validNumGoods() {
  validNumGoods_ = 0;
  clear_has_validNumGoods();
}
inline ::google::protobuf::int32 PB_ItemPackage::validNumGoods() const {
  return validNumGoods_;
}
inline void PB_ItemPackage::set_validNumGoods(::google::protobuf::int32 value) {
  set_has_validNumGoods();
  validNumGoods_ = value;
}

// optional int32 validNumGem = 6;
inline bool PB_ItemPackage::has_validNumGem() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_ItemPackage::set_has_validNumGem() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_ItemPackage::clear_has_validNumGem() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_ItemPackage::clear_validNumGem() {
  validNumGem_ = 0;
  clear_has_validNumGem();
}
inline ::google::protobuf::int32 PB_ItemPackage::validNumGem() const {
  return validNumGem_;
}
inline void PB_ItemPackage::set_validNumGem(::google::protobuf::int32 value) {
  set_has_validNumGem();
  validNumGem_ = value;
}

// optional int64 soul = 7;
inline bool PB_ItemPackage::has_soul() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PB_ItemPackage::set_has_soul() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PB_ItemPackage::clear_has_soul() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PB_ItemPackage::clear_soul() {
  soul_ = GOOGLE_LONGLONG(0);
  clear_has_soul();
}
inline ::google::protobuf::int64 PB_ItemPackage::soul() const {
  return soul_;
}
inline void PB_ItemPackage::set_soul(::google::protobuf::int64 value) {
  set_has_soul();
  soul_ = value;
}

// optional int64 smallSoul = 8;
inline bool PB_ItemPackage::has_smallSoul() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PB_ItemPackage::set_has_smallSoul() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PB_ItemPackage::clear_has_smallSoul() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PB_ItemPackage::clear_smallSoul() {
  smallSoul_ = GOOGLE_LONGLONG(0);
  clear_has_smallSoul();
}
inline ::google::protobuf::int64 PB_ItemPackage::smallSoul() const {
  return smallSoul_;
}
inline void PB_ItemPackage::set_smallSoul(::google::protobuf::int64 value) {
  set_has_smallSoul();
  smallSoul_ = value;
}

// optional int64 mediumSoul = 9;
inline bool PB_ItemPackage::has_mediumSoul() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PB_ItemPackage::set_has_mediumSoul() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PB_ItemPackage::clear_has_mediumSoul() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PB_ItemPackage::clear_mediumSoul() {
  mediumSoul_ = GOOGLE_LONGLONG(0);
  clear_has_mediumSoul();
}
inline ::google::protobuf::int64 PB_ItemPackage::mediumSoul() const {
  return mediumSoul_;
}
inline void PB_ItemPackage::set_mediumSoul(::google::protobuf::int64 value) {
  set_has_mediumSoul();
  mediumSoul_ = value;
}

// optional int64 bigSoul = 10;
inline bool PB_ItemPackage::has_bigSoul() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PB_ItemPackage::set_has_bigSoul() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PB_ItemPackage::clear_has_bigSoul() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PB_ItemPackage::clear_bigSoul() {
  bigSoul_ = GOOGLE_LONGLONG(0);
  clear_has_bigSoul();
}
inline ::google::protobuf::int64 PB_ItemPackage::bigSoul() const {
  return bigSoul_;
}
inline void PB_ItemPackage::set_bigSoul(::google::protobuf::int64 value) {
  set_has_bigSoul();
  bigSoul_ = value;
}

// optional int64 perfectSoul = 11;
inline bool PB_ItemPackage::has_perfectSoul() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PB_ItemPackage::set_has_perfectSoul() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PB_ItemPackage::clear_has_perfectSoul() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PB_ItemPackage::clear_perfectSoul() {
  perfectSoul_ = GOOGLE_LONGLONG(0);
  clear_has_perfectSoul();
}
inline ::google::protobuf::int64 PB_ItemPackage::perfectSoul() const {
  return perfectSoul_;
}
inline void PB_ItemPackage::set_perfectSoul(::google::protobuf::int64 value) {
  set_has_perfectSoul();
  perfectSoul_ = value;
}

// optional int32 honor = 12;
inline bool PB_ItemPackage::has_honor() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PB_ItemPackage::set_has_honor() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PB_ItemPackage::clear_has_honor() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PB_ItemPackage::clear_honor() {
  honor_ = 0;
  clear_has_honor();
}
inline ::google::protobuf::int32 PB_ItemPackage::honor() const {
  return honor_;
}
inline void PB_ItemPackage::set_honor(::google::protobuf::int32 value) {
  set_has_honor();
  honor_ = value;
}

// optional int32 durability = 13;
inline bool PB_ItemPackage::has_durability() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PB_ItemPackage::set_has_durability() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PB_ItemPackage::clear_has_durability() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PB_ItemPackage::clear_durability() {
  durability_ = 0;
  clear_has_durability();
}
inline ::google::protobuf::int32 PB_ItemPackage::durability() const {
  return durability_;
}
inline void PB_ItemPackage::set_durability(::google::protobuf::int32 value) {
  set_has_durability();
  durability_ = value;
}

// optional int64 totalRMB = 14;
inline bool PB_ItemPackage::has_totalRMB() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PB_ItemPackage::set_has_totalRMB() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PB_ItemPackage::clear_has_totalRMB() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PB_ItemPackage::clear_totalRMB() {
  totalRMB_ = GOOGLE_LONGLONG(0);
  clear_has_totalRMB();
}
inline ::google::protobuf::int64 PB_ItemPackage::totalRMB() const {
  return totalRMB_;
}
inline void PB_ItemPackage::set_totalRMB(::google::protobuf::int64 value) {
  set_has_totalRMB();
  totalRMB_ = value;
}

// optional int64 soulStone = 15;
inline bool PB_ItemPackage::has_soulStone() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PB_ItemPackage::set_has_soulStone() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PB_ItemPackage::clear_has_soulStone() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PB_ItemPackage::clear_soulStone() {
  soulStone_ = GOOGLE_LONGLONG(0);
  clear_has_soulStone();
}
inline ::google::protobuf::int64 PB_ItemPackage::soulStone() const {
  return soulStone_;
}
inline void PB_ItemPackage::set_soulStone(::google::protobuf::int64 value) {
  set_has_soulStone();
  soulStone_ = value;
}

// optional int64 pkScore = 16;
inline bool PB_ItemPackage::has_pkScore() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PB_ItemPackage::set_has_pkScore() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PB_ItemPackage::clear_has_pkScore() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PB_ItemPackage::clear_pkScore() {
  pkScore_ = GOOGLE_LONGLONG(0);
  clear_has_pkScore();
}
inline ::google::protobuf::int64 PB_ItemPackage::pkScore() const {
  return pkScore_;
}
inline void PB_ItemPackage::set_pkScore(::google::protobuf::int64 value) {
  set_has_pkScore();
  pkScore_ = value;
}

// optional int32 vip = 17;
inline bool PB_ItemPackage::has_vip() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PB_ItemPackage::set_has_vip() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PB_ItemPackage::clear_has_vip() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PB_ItemPackage::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 PB_ItemPackage::vip() const {
  return vip_;
}
inline void PB_ItemPackage::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// optional int32 godScore = 18;
inline bool PB_ItemPackage::has_godScore() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PB_ItemPackage::set_has_godScore() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PB_ItemPackage::clear_has_godScore() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PB_ItemPackage::clear_godScore() {
  godScore_ = 0;
  clear_has_godScore();
}
inline ::google::protobuf::int32 PB_ItemPackage::godScore() const {
  return godScore_;
}
inline void PB_ItemPackage::set_godScore(::google::protobuf::int32 value) {
  set_has_godScore();
  godScore_ = value;
}

// optional int64 subRMB = 20;
inline bool PB_ItemPackage::has_subRMB() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PB_ItemPackage::set_has_subRMB() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PB_ItemPackage::clear_has_subRMB() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PB_ItemPackage::clear_subRMB() {
  subRMB_ = GOOGLE_LONGLONG(0);
  clear_has_subRMB();
}
inline ::google::protobuf::int64 PB_ItemPackage::subRMB() const {
  return subRMB_;
}
inline void PB_ItemPackage::set_subRMB(::google::protobuf::int64 value) {
  set_has_subRMB();
  subRMB_ = value;
}

// repeated int32 wings = 21;
inline int PB_ItemPackage::wings_size() const {
  return wings_.size();
}
inline void PB_ItemPackage::clear_wings() {
  wings_.Clear();
}
inline ::google::protobuf::int32 PB_ItemPackage::wings(int index) const {
  return wings_.Get(index);
}
inline void PB_ItemPackage::set_wings(int index, ::google::protobuf::int32 value) {
  wings_.Set(index, value);
}
inline void PB_ItemPackage::add_wings(::google::protobuf::int32 value) {
  wings_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_ItemPackage::wings() const {
  return wings_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_ItemPackage::mutable_wings() {
  return &wings_;
}

// repeated .PB_FashionAsset fashions = 23;
inline int PB_ItemPackage::fashions_size() const {
  return fashions_.size();
}
inline void PB_ItemPackage::clear_fashions() {
  fashions_.Clear();
}
inline const ::PB_FashionAsset& PB_ItemPackage::fashions(int index) const {
  return fashions_.Get(index);
}
inline ::PB_FashionAsset* PB_ItemPackage::mutable_fashions(int index) {
  return fashions_.Mutable(index);
}
inline ::PB_FashionAsset* PB_ItemPackage::add_fashions() {
  return fashions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_FashionAsset >&
PB_ItemPackage::fashions() const {
  return fashions_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_FashionAsset >*
PB_ItemPackage::mutable_fashions() {
  return &fashions_;
}

// optional int32 lovePoint = 24;
inline bool PB_ItemPackage::has_lovePoint() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PB_ItemPackage::set_has_lovePoint() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PB_ItemPackage::clear_has_lovePoint() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PB_ItemPackage::clear_lovePoint() {
  lovePoint_ = 0;
  clear_has_lovePoint();
}
inline ::google::protobuf::int32 PB_ItemPackage::lovePoint() const {
  return lovePoint_;
}
inline void PB_ItemPackage::set_lovePoint(::google::protobuf::int32 value) {
  set_has_lovePoint();
  lovePoint_ = value;
}

// repeated .PB_EquipAsset equips = 25;
inline int PB_ItemPackage::equips_size() const {
  return equips_.size();
}
inline void PB_ItemPackage::clear_equips() {
  equips_.Clear();
}
inline const ::PB_EquipAsset& PB_ItemPackage::equips(int index) const {
  return equips_.Get(index);
}
inline ::PB_EquipAsset* PB_ItemPackage::mutable_equips(int index) {
  return equips_.Mutable(index);
}
inline ::PB_EquipAsset* PB_ItemPackage::add_equips() {
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_EquipAsset >&
PB_ItemPackage::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_EquipAsset >*
PB_ItemPackage::mutable_equips() {
  return &equips_;
}

// optional int64 pkScoreActive = 26;
inline bool PB_ItemPackage::has_pkScoreActive() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void PB_ItemPackage::set_has_pkScoreActive() {
  _has_bits_[0] |= 0x00800000u;
}
inline void PB_ItemPackage::clear_has_pkScoreActive() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void PB_ItemPackage::clear_pkScoreActive() {
  pkScoreActive_ = GOOGLE_LONGLONG(0);
  clear_has_pkScoreActive();
}
inline ::google::protobuf::int64 PB_ItemPackage::pkScoreActive() const {
  return pkScoreActive_;
}
inline void PB_ItemPackage::set_pkScoreActive(::google::protobuf::int64 value) {
  set_has_pkScoreActive();
  pkScoreActive_ = value;
}

// optional int32 rmbActive = 27;
inline bool PB_ItemPackage::has_rmbActive() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void PB_ItemPackage::set_has_rmbActive() {
  _has_bits_[0] |= 0x01000000u;
}
inline void PB_ItemPackage::clear_has_rmbActive() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void PB_ItemPackage::clear_rmbActive() {
  rmbActive_ = 0;
  clear_has_rmbActive();
}
inline ::google::protobuf::int32 PB_ItemPackage::rmbActive() const {
  return rmbActive_;
}
inline void PB_ItemPackage::set_rmbActive(::google::protobuf::int32 value) {
  set_has_rmbActive();
  rmbActive_ = value;
}

// optional int64 totalCost = 28;
inline bool PB_ItemPackage::has_totalCost() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void PB_ItemPackage::set_has_totalCost() {
  _has_bits_[0] |= 0x02000000u;
}
inline void PB_ItemPackage::clear_has_totalCost() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void PB_ItemPackage::clear_totalCost() {
  totalCost_ = GOOGLE_LONGLONG(0);
  clear_has_totalCost();
}
inline ::google::protobuf::int64 PB_ItemPackage::totalCost() const {
  return totalCost_;
}
inline void PB_ItemPackage::set_totalCost(::google::protobuf::int64 value) {
  set_has_totalCost();
  totalCost_ = value;
}

// optional int32 blessActive = 29;
inline bool PB_ItemPackage::has_blessActive() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void PB_ItemPackage::set_has_blessActive() {
  _has_bits_[0] |= 0x04000000u;
}
inline void PB_ItemPackage::clear_has_blessActive() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void PB_ItemPackage::clear_blessActive() {
  blessActive_ = 0;
  clear_has_blessActive();
}
inline ::google::protobuf::int32 PB_ItemPackage::blessActive() const {
  return blessActive_;
}
inline void PB_ItemPackage::set_blessActive(::google::protobuf::int32 value) {
  set_has_blessActive();
  blessActive_ = value;
}

// repeated .PB_TransformAsset transforms = 30;
inline int PB_ItemPackage::transforms_size() const {
  return transforms_.size();
}
inline void PB_ItemPackage::clear_transforms() {
  transforms_.Clear();
}
inline const ::PB_TransformAsset& PB_ItemPackage::transforms(int index) const {
  return transforms_.Get(index);
}
inline ::PB_TransformAsset* PB_ItemPackage::mutable_transforms(int index) {
  return transforms_.Mutable(index);
}
inline ::PB_TransformAsset* PB_ItemPackage::add_transforms() {
  return transforms_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_TransformAsset >&
PB_ItemPackage::transforms() const {
  return transforms_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_TransformAsset >*
PB_ItemPackage::mutable_transforms() {
  return &transforms_;
}

// optional int32 activeCost = 31;
inline bool PB_ItemPackage::has_activeCost() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void PB_ItemPackage::set_has_activeCost() {
  _has_bits_[0] |= 0x10000000u;
}
inline void PB_ItemPackage::clear_has_activeCost() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void PB_ItemPackage::clear_activeCost() {
  activeCost_ = 0;
  clear_has_activeCost();
}
inline ::google::protobuf::int32 PB_ItemPackage::activeCost() const {
  return activeCost_;
}
inline void PB_ItemPackage::set_activeCost(::google::protobuf::int32 value) {
  set_has_activeCost();
  activeCost_ = value;
}

// optional int32 activeCostEndTime = 32;
inline bool PB_ItemPackage::has_activeCostEndTime() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void PB_ItemPackage::set_has_activeCostEndTime() {
  _has_bits_[0] |= 0x20000000u;
}
inline void PB_ItemPackage::clear_has_activeCostEndTime() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void PB_ItemPackage::clear_activeCostEndTime() {
  activeCostEndTime_ = 0;
  clear_has_activeCostEndTime();
}
inline ::google::protobuf::int32 PB_ItemPackage::activeCostEndTime() const {
  return activeCostEndTime_;
}
inline void PB_ItemPackage::set_activeCostEndTime(::google::protobuf::int32 value) {
  set_has_activeCostEndTime();
  activeCostEndTime_ = value;
}

// repeated .PB_RidesAsset rides = 33;
inline int PB_ItemPackage::rides_size() const {
  return rides_.size();
}
inline void PB_ItemPackage::clear_rides() {
  rides_.Clear();
}
inline const ::PB_RidesAsset& PB_ItemPackage::rides(int index) const {
  return rides_.Get(index);
}
inline ::PB_RidesAsset* PB_ItemPackage::mutable_rides(int index) {
  return rides_.Mutable(index);
}
inline ::PB_RidesAsset* PB_ItemPackage::add_rides() {
  return rides_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_RidesAsset >&
PB_ItemPackage::rides() const {
  return rides_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_RidesAsset >*
PB_ItemPackage::mutable_rides() {
  return &rides_;
}

// repeated .PB_GodShipAsset godShips = 34;
inline int PB_ItemPackage::godShips_size() const {
  return godShips_.size();
}
inline void PB_ItemPackage::clear_godShips() {
  godShips_.Clear();
}
inline const ::PB_GodShipAsset& PB_ItemPackage::godShips(int index) const {
  return godShips_.Get(index);
}
inline ::PB_GodShipAsset* PB_ItemPackage::mutable_godShips(int index) {
  return godShips_.Mutable(index);
}
inline ::PB_GodShipAsset* PB_ItemPackage::add_godShips() {
  return godShips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_GodShipAsset >&
PB_ItemPackage::godShips() const {
  return godShips_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_GodShipAsset >*
PB_ItemPackage::mutable_godShips() {
  return &godShips_;
}

// repeated int32 godShipsPackage = 35;
inline int PB_ItemPackage::godShipsPackage_size() const {
  return godShipsPackage_.size();
}
inline void PB_ItemPackage::clear_godShipsPackage() {
  godShipsPackage_.Clear();
}
inline ::google::protobuf::int32 PB_ItemPackage::godShipsPackage(int index) const {
  return godShipsPackage_.Get(index);
}
inline void PB_ItemPackage::set_godShipsPackage(int index, ::google::protobuf::int32 value) {
  godShipsPackage_.Set(index, value);
}
inline void PB_ItemPackage::add_godShipsPackage(::google::protobuf::int32 value) {
  godShipsPackage_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_ItemPackage::godShipsPackage() const {
  return godShipsPackage_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_ItemPackage::mutable_godShipsPackage() {
  return &godShipsPackage_;
}

// optional int64 ridesFood = 36;
inline bool PB_ItemPackage::has_ridesFood() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void PB_ItemPackage::set_has_ridesFood() {
  _has_bits_[1] |= 0x00000002u;
}
inline void PB_ItemPackage::clear_has_ridesFood() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void PB_ItemPackage::clear_ridesFood() {
  ridesFood_ = GOOGLE_LONGLONG(0);
  clear_has_ridesFood();
}
inline ::google::protobuf::int64 PB_ItemPackage::ridesFood() const {
  return ridesFood_;
}
inline void PB_ItemPackage::set_ridesFood(::google::protobuf::int64 value) {
  set_has_ridesFood();
  ridesFood_ = value;
}

// -------------------------------------------------------------------

// PB_ALT

// repeated .PB_ItemInfo alt = 1;
inline int PB_ALT::alt_size() const {
  return alt_.size();
}
inline void PB_ALT::clear_alt() {
  alt_.Clear();
}
inline const ::PB_ItemInfo& PB_ALT::alt(int index) const {
  return alt_.Get(index);
}
inline ::PB_ItemInfo* PB_ALT::mutable_alt(int index) {
  return alt_.Mutable(index);
}
inline ::PB_ItemInfo* PB_ALT::add_alt() {
  return alt_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_ItemInfo >&
PB_ALT::alt() const {
  return alt_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_ItemInfo >*
PB_ALT::mutable_alt() {
  return &alt_;
}

// -------------------------------------------------------------------

// DropItem

// optional .PB_ItemInfo.Type type = 1;
inline bool DropItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DropItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DropItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DropItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::PB_ItemInfo_Type DropItem::type() const {
  return static_cast< ::PB_ItemInfo_Type >(type_);
}
inline void DropItem::set_type(::PB_ItemInfo_Type value) {
  GOOGLE_DCHECK(::PB_ItemInfo_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional int32 id = 2;
inline bool DropItem::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DropItem::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DropItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DropItem::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DropItem::id() const {
  return id_;
}
inline void DropItem::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 rate = 3;
inline bool DropItem::has_rate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DropItem::set_has_rate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DropItem::clear_has_rate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DropItem::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline ::google::protobuf::int32 DropItem::rate() const {
  return rate_;
}
inline void DropItem::set_rate(::google::protobuf::int32 value) {
  set_has_rate();
  rate_ = value;
}

// -------------------------------------------------------------------

// DropTable

// optional int32 id = 1;
inline bool DropTable::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DropTable::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DropTable::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DropTable::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 DropTable::id() const {
  return id_;
}
inline void DropTable::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated .DropItem dropItems = 2;
inline int DropTable::dropItems_size() const {
  return dropItems_.size();
}
inline void DropTable::clear_dropItems() {
  dropItems_.Clear();
}
inline const ::DropItem& DropTable::dropItems(int index) const {
  return dropItems_.Get(index);
}
inline ::DropItem* DropTable::mutable_dropItems(int index) {
  return dropItems_.Mutable(index);
}
inline ::DropItem* DropTable::add_dropItems() {
  return dropItems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DropItem >&
DropTable::dropItems() const {
  return dropItems_;
}
inline ::google::protobuf::RepeatedPtrField< ::DropItem >*
DropTable::mutable_dropItems() {
  return &dropItems_;
}

// optional int32 min = 3;
inline bool DropTable::has_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DropTable::set_has_min() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DropTable::clear_has_min() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DropTable::clear_min() {
  min_ = 0;
  clear_has_min();
}
inline ::google::protobuf::int32 DropTable::min() const {
  return min_;
}
inline void DropTable::set_min(::google::protobuf::int32 value) {
  set_has_min();
  min_ = value;
}

// optional int32 max = 4;
inline bool DropTable::has_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DropTable::set_has_max() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DropTable::clear_has_max() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DropTable::clear_max() {
  max_ = 0;
  clear_has_max();
}
inline ::google::protobuf::int32 DropTable::max() const {
  return max_;
}
inline void DropTable::set_max(::google::protobuf::int32 value) {
  set_has_max();
  max_ = value;
}

// -------------------------------------------------------------------

// AllDropTables

// repeated .DropTable dropTables = 1;
inline int AllDropTables::dropTables_size() const {
  return dropTables_.size();
}
inline void AllDropTables::clear_dropTables() {
  dropTables_.Clear();
}
inline const ::DropTable& AllDropTables::dropTables(int index) const {
  return dropTables_.Get(index);
}
inline ::DropTable* AllDropTables::mutable_dropTables(int index) {
  return dropTables_.Mutable(index);
}
inline ::DropTable* AllDropTables::add_dropTables() {
  return dropTables_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DropTable >&
AllDropTables::dropTables() const {
  return dropTables_;
}
inline ::google::protobuf::RepeatedPtrField< ::DropTable >*
AllDropTables::mutable_dropTables() {
  return &dropTables_;
}

// -------------------------------------------------------------------

// ExchangeTable

// optional int32 sourceGoods = 1;
inline bool ExchangeTable::has_sourceGoods() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExchangeTable::set_has_sourceGoods() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExchangeTable::clear_has_sourceGoods() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExchangeTable::clear_sourceGoods() {
  sourceGoods_ = 0;
  clear_has_sourceGoods();
}
inline ::google::protobuf::int32 ExchangeTable::sourceGoods() const {
  return sourceGoods_;
}
inline void ExchangeTable::set_sourceGoods(::google::protobuf::int32 value) {
  set_has_sourceGoods();
  sourceGoods_ = value;
}

// optional int32 sourceCount = 2;
inline bool ExchangeTable::has_sourceCount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExchangeTable::set_has_sourceCount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExchangeTable::clear_has_sourceCount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExchangeTable::clear_sourceCount() {
  sourceCount_ = 0;
  clear_has_sourceCount();
}
inline ::google::protobuf::int32 ExchangeTable::sourceCount() const {
  return sourceCount_;
}
inline void ExchangeTable::set_sourceCount(::google::protobuf::int32 value) {
  set_has_sourceCount();
  sourceCount_ = value;
}

// optional .BoxInfo.Type targetType = 3;
inline bool ExchangeTable::has_targetType() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExchangeTable::set_has_targetType() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExchangeTable::clear_has_targetType() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExchangeTable::clear_targetType() {
  targetType_ = 0;
  clear_has_targetType();
}
inline ::BoxInfo_Type ExchangeTable::targetType() const {
  return static_cast< ::BoxInfo_Type >(targetType_);
}
inline void ExchangeTable::set_targetType(::BoxInfo_Type value) {
  GOOGLE_DCHECK(::BoxInfo_Type_IsValid(value));
  set_has_targetType();
  targetType_ = value;
}

// optional int32 arg1 = 4;
inline bool ExchangeTable::has_arg1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ExchangeTable::set_has_arg1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ExchangeTable::clear_has_arg1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ExchangeTable::clear_arg1() {
  arg1_ = 0;
  clear_has_arg1();
}
inline ::google::protobuf::int32 ExchangeTable::arg1() const {
  return arg1_;
}
inline void ExchangeTable::set_arg1(::google::protobuf::int32 value) {
  set_has_arg1();
  arg1_ = value;
}

// optional int32 arg2 = 5;
inline bool ExchangeTable::has_arg2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ExchangeTable::set_has_arg2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ExchangeTable::clear_has_arg2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ExchangeTable::clear_arg2() {
  arg2_ = 0;
  clear_has_arg2();
}
inline ::google::protobuf::int32 ExchangeTable::arg2() const {
  return arg2_;
}
inline void ExchangeTable::set_arg2(::google::protobuf::int32 value) {
  set_has_arg2();
  arg2_ = value;
}

// -------------------------------------------------------------------

// AllExchangeTable

// repeated .ExchangeTable exchangeTable = 1;
inline int AllExchangeTable::exchangeTable_size() const {
  return exchangeTable_.size();
}
inline void AllExchangeTable::clear_exchangeTable() {
  exchangeTable_.Clear();
}
inline const ::ExchangeTable& AllExchangeTable::exchangeTable(int index) const {
  return exchangeTable_.Get(index);
}
inline ::ExchangeTable* AllExchangeTable::mutable_exchangeTable(int index) {
  return exchangeTable_.Mutable(index);
}
inline ::ExchangeTable* AllExchangeTable::add_exchangeTable() {
  return exchangeTable_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ExchangeTable >&
AllExchangeTable::exchangeTable() const {
  return exchangeTable_;
}
inline ::google::protobuf::RepeatedPtrField< ::ExchangeTable >*
AllExchangeTable::mutable_exchangeTable() {
  return &exchangeTable_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GoodsInfo_Type>() {
  return ::GoodsInfo_Type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GoodsInfo_ColorType>() {
  return ::GoodsInfo_ColorType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_ItemPackage_Begin>() {
  return ::PB_ItemPackage_Begin_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_ItemPackage_Length>() {
  return ::PB_ItemPackage_Length_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PB_ALT_Pos>() {
  return ::PB_ALT_Pos_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ItemInfo_2eproto__INCLUDED
