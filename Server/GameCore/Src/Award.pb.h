// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Award.proto

#ifndef PROTOBUF_Award_2eproto__INCLUDED
#define PROTOBUF_Award_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ItemInfo.pb.h"
#include "MailInfo.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Award_2eproto();
void protobuf_AssignDesc_Award_2eproto();
void protobuf_ShutdownFile_Award_2eproto();

class AwardInfo;
class AllAwardInfo;
class MailGift;
class AllMailGift;

enum AwardInfo_Type {
  AwardInfo_Type_ONLINE = 0,
  AwardInfo_Type_COME = 1,
  AwardInfo_Type_LEVEL = 2,
  AwardInfo_Type_POWER = 3,
  AwardInfo_Type_RMB = 4,
  AwardInfo_Type_VIP = 5,
  AwardInfo_Type_DAILY_GOD = 6,
  AwardInfo_Type_WEEKLY_GOD = 7,
  AwardInfo_Type_WORLD_BOSS = 8,
  AwardInfo_Type_WORLD_BOSS_LAST = 9,
  AwardInfo_Type_TOTAL_COME = 10,
  AwardInfo_Type_PLAY_OFF_1 = 11,
  AwardInfo_Type_INVEST_1 = 12,
  AwardInfo_Type_INVEST_2 = 13,
  AwardInfo_Type_INVEST_3 = 14,
  AwardInfo_Type_UNIT_RECHARGE = 15,
  AwardInfo_Type_TOTAL_COST = 16,
  AwardInfo_Type_RANDOM_RETURN_RMB = 17,
  AwardInfo_Type_BLESS = 18,
  AwardInfo_Type_FACTION_WAR_WIN = 19,
  AwardInfo_Type_FACTION_WAR_CONTINUE = 20,
  AwardInfo_Type_LEVEL_SEVEN_DAY = 21,
  AwardInfo_Type_POWER_SEVEN_DAY = 22,
  AwardInfo_Type_TEN_GIFT = 23,
  AwardInfo_Type_FIRST_RECHARGE = 24,
  AwardInfo_Type_DEVIL = 25,
  AwardInfo_Type_QIUBITE = 26,
  AwardInfo_Type_AWARD_FROM_SKY_TOP = 27,
  AwardInfo_Type_AWARD_FROM_SKY_FINAL = 28,
  AwardInfo_Type_NEWYEAR_GIFT = 29,
  AwardInfo_Type_LUCK = 30,
  AwardInfo_Type_MISSION_ACTIVITY = 31,
  AwardInfo_Type_AWARD_FROM_RECHARGE = 32,
  AwardInfo_Type_AWARD_FROM_SPEND = 33,
  AwardInfo_Type_ROOM_CHAPTER = 34,
  AwardInfo_Type_TOP_WEAPON = 35,
  AwardInfo_Type_CONSUME = 36,
  AwardInfo_Type_INVITECODE = 37,
  AwardInfo_Type_CATGIFT = 38,
  AwardInfo_Type_GROUPPURCHASE = 39,
  AwardInfo_Type_REDROSE = 40
};
bool AwardInfo_Type_IsValid(int value);
const AwardInfo_Type AwardInfo_Type_Type_MIN = AwardInfo_Type_ONLINE;
const AwardInfo_Type AwardInfo_Type_Type_MAX = AwardInfo_Type_REDROSE;
const int AwardInfo_Type_Type_ARRAYSIZE = AwardInfo_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* AwardInfo_Type_descriptor();
inline const ::std::string& AwardInfo_Type_Name(AwardInfo_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    AwardInfo_Type_descriptor(), value);
}
inline bool AwardInfo_Type_Parse(
    const ::std::string& name, AwardInfo_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AwardInfo_Type>(
    AwardInfo_Type_descriptor(), name, value);
}
enum MailGift_Type {
  MailGift_Type_CREATE_ROLE = 0,
  MailGift_Type_EVERY_DAY = 1,
  MailGift_Type_COMPENSATION = 2,
  MailGift_Type_RECHARGE = 3
};
bool MailGift_Type_IsValid(int value);
const MailGift_Type MailGift_Type_Type_MIN = MailGift_Type_CREATE_ROLE;
const MailGift_Type MailGift_Type_Type_MAX = MailGift_Type_RECHARGE;
const int MailGift_Type_Type_ARRAYSIZE = MailGift_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailGift_Type_descriptor();
inline const ::std::string& MailGift_Type_Name(MailGift_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailGift_Type_descriptor(), value);
}
inline bool MailGift_Type_Parse(
    const ::std::string& name, MailGift_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailGift_Type>(
    MailGift_Type_descriptor(), name, value);
}
// ===================================================================

class AwardInfo : public ::google::protobuf::Message {
 public:
  AwardInfo();
  virtual ~AwardInfo();
  
  AwardInfo(const AwardInfo& from);
  
  inline AwardInfo& operator=(const AwardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AwardInfo& default_instance();
  
  void Swap(AwardInfo* other);
  
  // implements Message ----------------------------------------------
  
  AwardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AwardInfo& from);
  void MergeFrom(const AwardInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef AwardInfo_Type Type;
  static const Type ONLINE = AwardInfo_Type_ONLINE;
  static const Type COME = AwardInfo_Type_COME;
  static const Type LEVEL = AwardInfo_Type_LEVEL;
  static const Type POWER = AwardInfo_Type_POWER;
  static const Type RMB = AwardInfo_Type_RMB;
  static const Type VIP = AwardInfo_Type_VIP;
  static const Type DAILY_GOD = AwardInfo_Type_DAILY_GOD;
  static const Type WEEKLY_GOD = AwardInfo_Type_WEEKLY_GOD;
  static const Type WORLD_BOSS = AwardInfo_Type_WORLD_BOSS;
  static const Type WORLD_BOSS_LAST = AwardInfo_Type_WORLD_BOSS_LAST;
  static const Type TOTAL_COME = AwardInfo_Type_TOTAL_COME;
  static const Type PLAY_OFF_1 = AwardInfo_Type_PLAY_OFF_1;
  static const Type INVEST_1 = AwardInfo_Type_INVEST_1;
  static const Type INVEST_2 = AwardInfo_Type_INVEST_2;
  static const Type INVEST_3 = AwardInfo_Type_INVEST_3;
  static const Type UNIT_RECHARGE = AwardInfo_Type_UNIT_RECHARGE;
  static const Type TOTAL_COST = AwardInfo_Type_TOTAL_COST;
  static const Type RANDOM_RETURN_RMB = AwardInfo_Type_RANDOM_RETURN_RMB;
  static const Type BLESS = AwardInfo_Type_BLESS;
  static const Type FACTION_WAR_WIN = AwardInfo_Type_FACTION_WAR_WIN;
  static const Type FACTION_WAR_CONTINUE = AwardInfo_Type_FACTION_WAR_CONTINUE;
  static const Type LEVEL_SEVEN_DAY = AwardInfo_Type_LEVEL_SEVEN_DAY;
  static const Type POWER_SEVEN_DAY = AwardInfo_Type_POWER_SEVEN_DAY;
  static const Type TEN_GIFT = AwardInfo_Type_TEN_GIFT;
  static const Type FIRST_RECHARGE = AwardInfo_Type_FIRST_RECHARGE;
  static const Type DEVIL = AwardInfo_Type_DEVIL;
  static const Type QIUBITE = AwardInfo_Type_QIUBITE;
  static const Type AWARD_FROM_SKY_TOP = AwardInfo_Type_AWARD_FROM_SKY_TOP;
  static const Type AWARD_FROM_SKY_FINAL = AwardInfo_Type_AWARD_FROM_SKY_FINAL;
  static const Type NEWYEAR_GIFT = AwardInfo_Type_NEWYEAR_GIFT;
  static const Type LUCK = AwardInfo_Type_LUCK;
  static const Type MISSION_ACTIVITY = AwardInfo_Type_MISSION_ACTIVITY;
  static const Type AWARD_FROM_RECHARGE = AwardInfo_Type_AWARD_FROM_RECHARGE;
  static const Type AWARD_FROM_SPEND = AwardInfo_Type_AWARD_FROM_SPEND;
  static const Type ROOM_CHAPTER = AwardInfo_Type_ROOM_CHAPTER;
  static const Type TOP_WEAPON = AwardInfo_Type_TOP_WEAPON;
  static const Type CONSUME = AwardInfo_Type_CONSUME;
  static const Type INVITECODE = AwardInfo_Type_INVITECODE;
  static const Type CATGIFT = AwardInfo_Type_CATGIFT;
  static const Type GROUPPURCHASE = AwardInfo_Type_GROUPPURCHASE;
  static const Type REDROSE = AwardInfo_Type_REDROSE;
  static inline bool Type_IsValid(int value) {
    return AwardInfo_Type_IsValid(value);
  }
  static const Type Type_MIN =
    AwardInfo_Type_Type_MIN;
  static const Type Type_MAX =
    AwardInfo_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    AwardInfo_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return AwardInfo_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return AwardInfo_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return AwardInfo_Type_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional .AwardInfo.Type type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::AwardInfo_Type type() const;
  inline void set_type(::AwardInfo_Type value);
  
  // optional int32 arg = 4;
  inline bool has_arg() const;
  inline void clear_arg();
  static const int kArgFieldNumber = 4;
  inline ::google::protobuf::int32 arg() const;
  inline void set_arg(::google::protobuf::int32 value);
  
  // optional int32 award = 5;
  inline bool has_award() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 5;
  inline ::google::protobuf::int32 award() const;
  inline void set_award(::google::protobuf::int32 value);
  
  // optional string content = 6;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 6;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:AwardInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_arg();
  inline void clear_has_arg();
  inline void set_has_award();
  inline void clear_has_award();
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::int32 id_;
  int type_;
  ::google::protobuf::int32 arg_;
  ::google::protobuf::int32 award_;
  ::std::string* content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_Award_2eproto();
  friend void protobuf_AssignDesc_Award_2eproto();
  friend void protobuf_ShutdownFile_Award_2eproto();
  
  void InitAsDefaultInstance();
  static AwardInfo* default_instance_;
};
// -------------------------------------------------------------------

class AllAwardInfo : public ::google::protobuf::Message {
 public:
  AllAwardInfo();
  virtual ~AllAwardInfo();
  
  AllAwardInfo(const AllAwardInfo& from);
  
  inline AllAwardInfo& operator=(const AllAwardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllAwardInfo& default_instance();
  
  void Swap(AllAwardInfo* other);
  
  // implements Message ----------------------------------------------
  
  AllAwardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllAwardInfo& from);
  void MergeFrom(const AllAwardInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .AwardInfo awardInfo = 1;
  inline int awardInfo_size() const;
  inline void clear_awardInfo();
  static const int kAwardInfoFieldNumber = 1;
  inline const ::AwardInfo& awardInfo(int index) const;
  inline ::AwardInfo* mutable_awardInfo(int index);
  inline ::AwardInfo* add_awardInfo();
  inline const ::google::protobuf::RepeatedPtrField< ::AwardInfo >&
      awardInfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::AwardInfo >*
      mutable_awardInfo();
  
  // @@protoc_insertion_point(class_scope:AllAwardInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::AwardInfo > awardInfo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Award_2eproto();
  friend void protobuf_AssignDesc_Award_2eproto();
  friend void protobuf_ShutdownFile_Award_2eproto();
  
  void InitAsDefaultInstance();
  static AllAwardInfo* default_instance_;
};
// -------------------------------------------------------------------

class MailGift : public ::google::protobuf::Message {
 public:
  MailGift();
  virtual ~MailGift();
  
  MailGift(const MailGift& from);
  
  inline MailGift& operator=(const MailGift& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailGift& default_instance();
  
  void Swap(MailGift* other);
  
  // implements Message ----------------------------------------------
  
  MailGift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailGift& from);
  void MergeFrom(const MailGift& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef MailGift_Type Type;
  static const Type CREATE_ROLE = MailGift_Type_CREATE_ROLE;
  static const Type EVERY_DAY = MailGift_Type_EVERY_DAY;
  static const Type COMPENSATION = MailGift_Type_COMPENSATION;
  static const Type RECHARGE = MailGift_Type_RECHARGE;
  static inline bool Type_IsValid(int value) {
    return MailGift_Type_IsValid(value);
  }
  static const Type Type_MIN =
    MailGift_Type_Type_MIN;
  static const Type Type_MAX =
    MailGift_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    MailGift_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return MailGift_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return MailGift_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return MailGift_Type_Parse(name, value);
  }
  
  // accessors -------------------------------------------------------
  
  // optional .MailGift.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::MailGift_Type type() const;
  inline void set_type(::MailGift_Type value);
  
  // optional .PB_MailInfo mail = 2;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 2;
  inline const ::PB_MailInfo& mail() const;
  inline ::PB_MailInfo* mutable_mail();
  inline ::PB_MailInfo* release_mail();
  
  // optional int32 arg1 = 3;
  inline bool has_arg1() const;
  inline void clear_arg1();
  static const int kArg1FieldNumber = 3;
  inline ::google::protobuf::int32 arg1() const;
  inline void set_arg1(::google::protobuf::int32 value);
  
  // optional int32 arg2 = 4;
  inline bool has_arg2() const;
  inline void clear_arg2();
  static const int kArg2FieldNumber = 4;
  inline ::google::protobuf::int32 arg2() const;
  inline void set_arg2(::google::protobuf::int32 value);
  
  // optional int32 arg3 = 5;
  inline bool has_arg3() const;
  inline void clear_arg3();
  static const int kArg3FieldNumber = 5;
  inline ::google::protobuf::int32 arg3() const;
  inline void set_arg3(::google::protobuf::int32 value);
  
  // optional int32 arg4 = 6;
  inline bool has_arg4() const;
  inline void clear_arg4();
  static const int kArg4FieldNumber = 6;
  inline ::google::protobuf::int32 arg4() const;
  inline void set_arg4(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:MailGift)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_mail();
  inline void clear_has_mail();
  inline void set_has_arg1();
  inline void clear_has_arg1();
  inline void set_has_arg2();
  inline void clear_has_arg2();
  inline void set_has_arg3();
  inline void clear_has_arg3();
  inline void set_has_arg4();
  inline void clear_has_arg4();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PB_MailInfo* mail_;
  int type_;
  ::google::protobuf::int32 arg1_;
  ::google::protobuf::int32 arg2_;
  ::google::protobuf::int32 arg3_;
  ::google::protobuf::int32 arg4_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_Award_2eproto();
  friend void protobuf_AssignDesc_Award_2eproto();
  friend void protobuf_ShutdownFile_Award_2eproto();
  
  void InitAsDefaultInstance();
  static MailGift* default_instance_;
};
// -------------------------------------------------------------------

class AllMailGift : public ::google::protobuf::Message {
 public:
  AllMailGift();
  virtual ~AllMailGift();
  
  AllMailGift(const AllMailGift& from);
  
  inline AllMailGift& operator=(const AllMailGift& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllMailGift& default_instance();
  
  void Swap(AllMailGift* other);
  
  // implements Message ----------------------------------------------
  
  AllMailGift* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllMailGift& from);
  void MergeFrom(const AllMailGift& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .MailGift mailGift = 1;
  inline int mailGift_size() const;
  inline void clear_mailGift();
  static const int kMailGiftFieldNumber = 1;
  inline const ::MailGift& mailGift(int index) const;
  inline ::MailGift* mutable_mailGift(int index);
  inline ::MailGift* add_mailGift();
  inline const ::google::protobuf::RepeatedPtrField< ::MailGift >&
      mailGift() const;
  inline ::google::protobuf::RepeatedPtrField< ::MailGift >*
      mutable_mailGift();
  
  // @@protoc_insertion_point(class_scope:AllMailGift)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::MailGift > mailGift_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_Award_2eproto();
  friend void protobuf_AssignDesc_Award_2eproto();
  friend void protobuf_ShutdownFile_Award_2eproto();
  
  void InitAsDefaultInstance();
  static AllMailGift* default_instance_;
};
// ===================================================================


// ===================================================================

// AwardInfo

// optional int32 id = 1;
inline bool AwardInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AwardInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AwardInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AwardInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AwardInfo::id() const {
  return id_;
}
inline void AwardInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool AwardInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AwardInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AwardInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AwardInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AwardInfo::name() const {
  return *name_;
}
inline void AwardInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void AwardInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void AwardInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AwardInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* AwardInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .AwardInfo.Type type = 3;
inline bool AwardInfo::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AwardInfo::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AwardInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AwardInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::AwardInfo_Type AwardInfo::type() const {
  return static_cast< ::AwardInfo_Type >(type_);
}
inline void AwardInfo::set_type(::AwardInfo_Type value) {
  GOOGLE_DCHECK(::AwardInfo_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional int32 arg = 4;
inline bool AwardInfo::has_arg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AwardInfo::set_has_arg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AwardInfo::clear_has_arg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AwardInfo::clear_arg() {
  arg_ = 0;
  clear_has_arg();
}
inline ::google::protobuf::int32 AwardInfo::arg() const {
  return arg_;
}
inline void AwardInfo::set_arg(::google::protobuf::int32 value) {
  set_has_arg();
  arg_ = value;
}

// optional int32 award = 5;
inline bool AwardInfo::has_award() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AwardInfo::set_has_award() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AwardInfo::clear_has_award() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AwardInfo::clear_award() {
  award_ = 0;
  clear_has_award();
}
inline ::google::protobuf::int32 AwardInfo::award() const {
  return award_;
}
inline void AwardInfo::set_award(::google::protobuf::int32 value) {
  set_has_award();
  award_ = value;
}

// optional string content = 6;
inline bool AwardInfo::has_content() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AwardInfo::set_has_content() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AwardInfo::clear_has_content() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AwardInfo::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& AwardInfo::content() const {
  return *content_;
}
inline void AwardInfo::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void AwardInfo::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void AwardInfo::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AwardInfo::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* AwardInfo::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// AllAwardInfo

// repeated .AwardInfo awardInfo = 1;
inline int AllAwardInfo::awardInfo_size() const {
  return awardInfo_.size();
}
inline void AllAwardInfo::clear_awardInfo() {
  awardInfo_.Clear();
}
inline const ::AwardInfo& AllAwardInfo::awardInfo(int index) const {
  return awardInfo_.Get(index);
}
inline ::AwardInfo* AllAwardInfo::mutable_awardInfo(int index) {
  return awardInfo_.Mutable(index);
}
inline ::AwardInfo* AllAwardInfo::add_awardInfo() {
  return awardInfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AwardInfo >&
AllAwardInfo::awardInfo() const {
  return awardInfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::AwardInfo >*
AllAwardInfo::mutable_awardInfo() {
  return &awardInfo_;
}

// -------------------------------------------------------------------

// MailGift

// optional .MailGift.Type type = 1;
inline bool MailGift::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailGift::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailGift::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailGift::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::MailGift_Type MailGift::type() const {
  return static_cast< ::MailGift_Type >(type_);
}
inline void MailGift::set_type(::MailGift_Type value) {
  GOOGLE_DCHECK(::MailGift_Type_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional .PB_MailInfo mail = 2;
inline bool MailGift::has_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailGift::set_has_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailGift::clear_has_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailGift::clear_mail() {
  if (mail_ != NULL) mail_->::PB_MailInfo::Clear();
  clear_has_mail();
}
inline const ::PB_MailInfo& MailGift::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::PB_MailInfo* MailGift::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::PB_MailInfo;
  return mail_;
}
inline ::PB_MailInfo* MailGift::release_mail() {
  clear_has_mail();
  ::PB_MailInfo* temp = mail_;
  mail_ = NULL;
  return temp;
}

// optional int32 arg1 = 3;
inline bool MailGift::has_arg1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailGift::set_has_arg1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailGift::clear_has_arg1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailGift::clear_arg1() {
  arg1_ = 0;
  clear_has_arg1();
}
inline ::google::protobuf::int32 MailGift::arg1() const {
  return arg1_;
}
inline void MailGift::set_arg1(::google::protobuf::int32 value) {
  set_has_arg1();
  arg1_ = value;
}

// optional int32 arg2 = 4;
inline bool MailGift::has_arg2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailGift::set_has_arg2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailGift::clear_has_arg2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailGift::clear_arg2() {
  arg2_ = 0;
  clear_has_arg2();
}
inline ::google::protobuf::int32 MailGift::arg2() const {
  return arg2_;
}
inline void MailGift::set_arg2(::google::protobuf::int32 value) {
  set_has_arg2();
  arg2_ = value;
}

// optional int32 arg3 = 5;
inline bool MailGift::has_arg3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailGift::set_has_arg3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailGift::clear_has_arg3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailGift::clear_arg3() {
  arg3_ = 0;
  clear_has_arg3();
}
inline ::google::protobuf::int32 MailGift::arg3() const {
  return arg3_;
}
inline void MailGift::set_arg3(::google::protobuf::int32 value) {
  set_has_arg3();
  arg3_ = value;
}

// optional int32 arg4 = 6;
inline bool MailGift::has_arg4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailGift::set_has_arg4() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailGift::clear_has_arg4() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailGift::clear_arg4() {
  arg4_ = 0;
  clear_has_arg4();
}
inline ::google::protobuf::int32 MailGift::arg4() const {
  return arg4_;
}
inline void MailGift::set_arg4(::google::protobuf::int32 value) {
  set_has_arg4();
  arg4_ = value;
}

// -------------------------------------------------------------------

// AllMailGift

// repeated .MailGift mailGift = 1;
inline int AllMailGift::mailGift_size() const {
  return mailGift_.size();
}
inline void AllMailGift::clear_mailGift() {
  mailGift_.Clear();
}
inline const ::MailGift& AllMailGift::mailGift(int index) const {
  return mailGift_.Get(index);
}
inline ::MailGift* AllMailGift::mutable_mailGift(int index) {
  return mailGift_.Mutable(index);
}
inline ::MailGift* AllMailGift::add_mailGift() {
  return mailGift_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::MailGift >&
AllMailGift::mailGift() const {
  return mailGift_;
}
inline ::google::protobuf::RepeatedPtrField< ::MailGift >*
AllMailGift::mutable_mailGift() {
  return &mailGift_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AwardInfo_Type>() {
  return ::AwardInfo_Type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::MailGift_Type>() {
  return ::MailGift_Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Award_2eproto__INCLUDED
