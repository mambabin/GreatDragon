// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoleAtt.proto

#ifndef PROTOBUF_RoleAtt_2eproto__INCLUDED
#define PROTOBUF_RoleAtt_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "BaseInfo.pb.h"
#include "MovementInfo.pb.h"
#include "FightInfo.pb.h"
#include "AIInfo.pb.h"
#include "EquipmentInfo.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RoleAtt_2eproto();
void protobuf_AssignDesc_RoleAtt_2eproto();
void protobuf_ShutdownFile_RoleAtt_2eproto();

class PB_RoleAtt;

// ===================================================================

class PB_RoleAtt : public ::google::protobuf::Message {
 public:
  PB_RoleAtt();
  virtual ~PB_RoleAtt();
  
  PB_RoleAtt(const PB_RoleAtt& from);
  
  inline PB_RoleAtt& operator=(const PB_RoleAtt& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_RoleAtt& default_instance();
  
  void Swap(PB_RoleAtt* other);
  
  // implements Message ----------------------------------------------
  
  PB_RoleAtt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_RoleAtt& from);
  void MergeFrom(const PB_RoleAtt& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PB_BaseAtt baseAtt = 1;
  inline bool has_baseAtt() const;
  inline void clear_baseAtt();
  static const int kBaseAttFieldNumber = 1;
  inline const ::PB_BaseAtt& baseAtt() const;
  inline ::PB_BaseAtt* mutable_baseAtt();
  inline ::PB_BaseAtt* release_baseAtt();
  
  // optional .PB_MovementAtt movementAtt = 2;
  inline bool has_movementAtt() const;
  inline void clear_movementAtt();
  static const int kMovementAttFieldNumber = 2;
  inline const ::PB_MovementAtt& movementAtt() const;
  inline ::PB_MovementAtt* mutable_movementAtt();
  inline ::PB_MovementAtt* release_movementAtt();
  
  // optional .PB_EquipmentAtt equipmentAtt = 3;
  inline bool has_equipmentAtt() const;
  inline void clear_equipmentAtt();
  static const int kEquipmentAttFieldNumber = 3;
  inline const ::PB_EquipmentAtt& equipmentAtt() const;
  inline ::PB_EquipmentAtt* mutable_equipmentAtt();
  inline ::PB_EquipmentAtt* release_equipmentAtt();
  
  // optional .PB_FightAtt fightAtt = 4;
  inline bool has_fightAtt() const;
  inline void clear_fightAtt();
  static const int kFightAttFieldNumber = 4;
  inline const ::PB_FightAtt& fightAtt() const;
  inline ::PB_FightAtt* mutable_fightAtt();
  inline ::PB_FightAtt* release_fightAtt();
  
  // optional .PB_AIAtt aiAtt = 5;
  inline bool has_aiAtt() const;
  inline void clear_aiAtt();
  static const int kAiAttFieldNumber = 5;
  inline const ::PB_AIAtt& aiAtt() const;
  inline ::PB_AIAtt* mutable_aiAtt();
  inline ::PB_AIAtt* release_aiAtt();
  
  // @@protoc_insertion_point(class_scope:PB_RoleAtt)
 private:
  inline void set_has_baseAtt();
  inline void clear_has_baseAtt();
  inline void set_has_movementAtt();
  inline void clear_has_movementAtt();
  inline void set_has_equipmentAtt();
  inline void clear_has_equipmentAtt();
  inline void set_has_fightAtt();
  inline void clear_has_fightAtt();
  inline void set_has_aiAtt();
  inline void clear_has_aiAtt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PB_BaseAtt* baseAtt_;
  ::PB_MovementAtt* movementAtt_;
  ::PB_EquipmentAtt* equipmentAtt_;
  ::PB_FightAtt* fightAtt_;
  ::PB_AIAtt* aiAtt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_RoleAtt_2eproto();
  friend void protobuf_AssignDesc_RoleAtt_2eproto();
  friend void protobuf_ShutdownFile_RoleAtt_2eproto();
  
  void InitAsDefaultInstance();
  static PB_RoleAtt* default_instance_;
};
// ===================================================================


// ===================================================================

// PB_RoleAtt

// optional .PB_BaseAtt baseAtt = 1;
inline bool PB_RoleAtt::has_baseAtt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_RoleAtt::set_has_baseAtt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_RoleAtt::clear_has_baseAtt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_RoleAtt::clear_baseAtt() {
  if (baseAtt_ != NULL) baseAtt_->::PB_BaseAtt::Clear();
  clear_has_baseAtt();
}
inline const ::PB_BaseAtt& PB_RoleAtt::baseAtt() const {
  return baseAtt_ != NULL ? *baseAtt_ : *default_instance_->baseAtt_;
}
inline ::PB_BaseAtt* PB_RoleAtt::mutable_baseAtt() {
  set_has_baseAtt();
  if (baseAtt_ == NULL) baseAtt_ = new ::PB_BaseAtt;
  return baseAtt_;
}
inline ::PB_BaseAtt* PB_RoleAtt::release_baseAtt() {
  clear_has_baseAtt();
  ::PB_BaseAtt* temp = baseAtt_;
  baseAtt_ = NULL;
  return temp;
}

// optional .PB_MovementAtt movementAtt = 2;
inline bool PB_RoleAtt::has_movementAtt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_RoleAtt::set_has_movementAtt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_RoleAtt::clear_has_movementAtt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_RoleAtt::clear_movementAtt() {
  if (movementAtt_ != NULL) movementAtt_->::PB_MovementAtt::Clear();
  clear_has_movementAtt();
}
inline const ::PB_MovementAtt& PB_RoleAtt::movementAtt() const {
  return movementAtt_ != NULL ? *movementAtt_ : *default_instance_->movementAtt_;
}
inline ::PB_MovementAtt* PB_RoleAtt::mutable_movementAtt() {
  set_has_movementAtt();
  if (movementAtt_ == NULL) movementAtt_ = new ::PB_MovementAtt;
  return movementAtt_;
}
inline ::PB_MovementAtt* PB_RoleAtt::release_movementAtt() {
  clear_has_movementAtt();
  ::PB_MovementAtt* temp = movementAtt_;
  movementAtt_ = NULL;
  return temp;
}

// optional .PB_EquipmentAtt equipmentAtt = 3;
inline bool PB_RoleAtt::has_equipmentAtt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_RoleAtt::set_has_equipmentAtt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_RoleAtt::clear_has_equipmentAtt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_RoleAtt::clear_equipmentAtt() {
  if (equipmentAtt_ != NULL) equipmentAtt_->::PB_EquipmentAtt::Clear();
  clear_has_equipmentAtt();
}
inline const ::PB_EquipmentAtt& PB_RoleAtt::equipmentAtt() const {
  return equipmentAtt_ != NULL ? *equipmentAtt_ : *default_instance_->equipmentAtt_;
}
inline ::PB_EquipmentAtt* PB_RoleAtt::mutable_equipmentAtt() {
  set_has_equipmentAtt();
  if (equipmentAtt_ == NULL) equipmentAtt_ = new ::PB_EquipmentAtt;
  return equipmentAtt_;
}
inline ::PB_EquipmentAtt* PB_RoleAtt::release_equipmentAtt() {
  clear_has_equipmentAtt();
  ::PB_EquipmentAtt* temp = equipmentAtt_;
  equipmentAtt_ = NULL;
  return temp;
}

// optional .PB_FightAtt fightAtt = 4;
inline bool PB_RoleAtt::has_fightAtt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_RoleAtt::set_has_fightAtt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_RoleAtt::clear_has_fightAtt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_RoleAtt::clear_fightAtt() {
  if (fightAtt_ != NULL) fightAtt_->::PB_FightAtt::Clear();
  clear_has_fightAtt();
}
inline const ::PB_FightAtt& PB_RoleAtt::fightAtt() const {
  return fightAtt_ != NULL ? *fightAtt_ : *default_instance_->fightAtt_;
}
inline ::PB_FightAtt* PB_RoleAtt::mutable_fightAtt() {
  set_has_fightAtt();
  if (fightAtt_ == NULL) fightAtt_ = new ::PB_FightAtt;
  return fightAtt_;
}
inline ::PB_FightAtt* PB_RoleAtt::release_fightAtt() {
  clear_has_fightAtt();
  ::PB_FightAtt* temp = fightAtt_;
  fightAtt_ = NULL;
  return temp;
}

// optional .PB_AIAtt aiAtt = 5;
inline bool PB_RoleAtt::has_aiAtt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_RoleAtt::set_has_aiAtt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_RoleAtt::clear_has_aiAtt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_RoleAtt::clear_aiAtt() {
  if (aiAtt_ != NULL) aiAtt_->::PB_AIAtt::Clear();
  clear_has_aiAtt();
}
inline const ::PB_AIAtt& PB_RoleAtt::aiAtt() const {
  return aiAtt_ != NULL ? *aiAtt_ : *default_instance_->aiAtt_;
}
inline ::PB_AIAtt* PB_RoleAtt::mutable_aiAtt() {
  set_has_aiAtt();
  if (aiAtt_ == NULL) aiAtt_ = new ::PB_AIAtt;
  return aiAtt_;
}
inline ::PB_AIAtt* PB_RoleAtt::release_aiAtt() {
  clear_has_aiAtt();
  ::PB_AIAtt* temp = aiAtt_;
  aiAtt_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RoleAtt_2eproto__INCLUDED
