// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayerAtt.proto

#ifndef PROTOBUF_PlayerAtt_2eproto__INCLUDED
#define PROTOBUF_PlayerAtt_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ProfessionInfo.pb.h"
#include "RoleAtt.pb.h"
#include "MissionInfo.pb.h"
#include "ItemInfo.pb.h"
#include "MailInfo.pb.h"
#include "FightInfo.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PlayerAtt_2eproto();
void protobuf_AssignDesc_PlayerAtt_2eproto();
void protobuf_ShutdownFile_PlayerAtt_2eproto();

class RoomInfo;
class PB_FriendInfo;
class RecordInfo;
class PB_DesignationRecord;
class PB_PetAsset;
class PB_PlayerAtt;

// ===================================================================

class RoomInfo : public ::google::protobuf::Message {
 public:
  RoomInfo();
  virtual ~RoomInfo();
  
  RoomInfo(const RoomInfo& from);
  
  inline RoomInfo& operator=(const RoomInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomInfo& default_instance();
  
  void Swap(RoomInfo* other);
  
  // implements Message ----------------------------------------------
  
  RoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomInfo& from);
  void MergeFrom(const RoomInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 map = 2;
  inline bool has_map() const;
  inline void clear_map();
  static const int kMapFieldNumber = 2;
  inline ::google::protobuf::int32 map() const;
  inline void set_map(::google::protobuf::int32 value);
  
  // optional string leader = 3;
  inline bool has_leader() const;
  inline void clear_leader();
  static const int kLeaderFieldNumber = 3;
  inline const ::std::string& leader() const;
  inline void set_leader(const ::std::string& value);
  inline void set_leader(const char* value);
  inline void set_leader(const char* value, size_t size);
  inline ::std::string* mutable_leader();
  inline ::std::string* release_leader();
  
  // optional int32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // repeated int32 roles = 5;
  inline int roles_size() const;
  inline void clear_roles();
  static const int kRolesFieldNumber = 5;
  inline ::google::protobuf::int32 roles(int index) const;
  inline void set_roles(int index, ::google::protobuf::int32 value);
  inline void add_roles(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      roles() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_roles();
  
  // optional bool noPower = 6;
  inline bool has_noPower() const;
  inline void clear_noPower();
  static const int kNoPowerFieldNumber = 6;
  inline bool noPower() const;
  inline void set_noPower(bool value);
  
  // @@protoc_insertion_point(class_scope:RoomInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_map();
  inline void clear_has_map();
  inline void set_has_leader();
  inline void clear_has_leader();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_noPower();
  inline void clear_has_noPower();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 map_;
  ::std::string* leader_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > roles_;
  ::google::protobuf::int32 count_;
  bool noPower_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerAtt_2eproto();
  friend void protobuf_AssignDesc_PlayerAtt_2eproto();
  friend void protobuf_ShutdownFile_PlayerAtt_2eproto();
  
  void InitAsDefaultInstance();
  static RoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class PB_FriendInfo : public ::google::protobuf::Message {
 public:
  PB_FriendInfo();
  virtual ~PB_FriendInfo();
  
  PB_FriendInfo(const PB_FriendInfo& from);
  
  inline PB_FriendInfo& operator=(const PB_FriendInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_FriendInfo& default_instance();
  
  void Swap(PB_FriendInfo* other);
  
  // implements Message ----------------------------------------------
  
  PB_FriendInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_FriendInfo& from);
  void MergeFrom(const PB_FriendInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 roleID = 1 [default = -1];
  inline bool has_roleID() const;
  inline void clear_roleID();
  static const int kRoleIDFieldNumber = 1;
  inline ::google::protobuf::int64 roleID() const;
  inline void set_roleID(::google::protobuf::int64 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional .PB_ProfessionInfo.Type professionType = 3;
  inline bool has_professionType() const;
  inline void clear_professionType();
  static const int kProfessionTypeFieldNumber = 3;
  inline ::PB_ProfessionInfo_Type professionType() const;
  inline void set_professionType(::PB_ProfessionInfo_Type value);
  
  // optional bool loveHeart = 4;
  inline bool has_loveHeart() const;
  inline void clear_loveHeart();
  static const int kLoveHeartFieldNumber = 4;
  inline bool loveHeart() const;
  inline void set_loveHeart(bool value);
  
  // optional bool flag = 5;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 5;
  inline bool flag() const;
  inline void set_flag(bool value);
  
  // optional int32 vip = 6;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 6;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);
  
  // optional int32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 power = 8;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 8;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:PB_FriendInfo)
 private:
  inline void set_has_roleID();
  inline void clear_has_roleID();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_professionType();
  inline void clear_has_professionType();
  inline void set_has_loveHeart();
  inline void clear_has_loveHeart();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_power();
  inline void clear_has_power();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 roleID_;
  ::std::string* name_;
  int professionType_;
  bool loveHeart_;
  bool flag_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 power_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerAtt_2eproto();
  friend void protobuf_AssignDesc_PlayerAtt_2eproto();
  friend void protobuf_ShutdownFile_PlayerAtt_2eproto();
  
  void InitAsDefaultInstance();
  static PB_FriendInfo* default_instance_;
};
// -------------------------------------------------------------------

class RecordInfo : public ::google::protobuf::Message {
 public:
  RecordInfo();
  virtual ~RecordInfo();
  
  RecordInfo(const RecordInfo& from);
  
  inline RecordInfo& operator=(const RecordInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecordInfo& default_instance();
  
  void Swap(RecordInfo* other);
  
  // implements Message ----------------------------------------------
  
  RecordInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecordInfo& from);
  void MergeFrom(const RecordInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PB_FriendInfo role = 1;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 1;
  inline const ::PB_FriendInfo& role() const;
  inline ::PB_FriendInfo* mutable_role();
  inline ::PB_FriendInfo* release_role();
  
  // optional int64 arg1 = 2;
  inline bool has_arg1() const;
  inline void clear_arg1();
  static const int kArg1FieldNumber = 2;
  inline ::google::protobuf::int64 arg1() const;
  inline void set_arg1(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:RecordInfo)
 private:
  inline void set_has_role();
  inline void clear_has_role();
  inline void set_has_arg1();
  inline void clear_has_arg1();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PB_FriendInfo* role_;
  ::google::protobuf::int64 arg1_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerAtt_2eproto();
  friend void protobuf_AssignDesc_PlayerAtt_2eproto();
  friend void protobuf_ShutdownFile_PlayerAtt_2eproto();
  
  void InitAsDefaultInstance();
  static RecordInfo* default_instance_;
};
// -------------------------------------------------------------------

class PB_DesignationRecord : public ::google::protobuf::Message {
 public:
  PB_DesignationRecord();
  virtual ~PB_DesignationRecord();
  
  PB_DesignationRecord(const PB_DesignationRecord& from);
  
  inline PB_DesignationRecord& operator=(const PB_DesignationRecord& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_DesignationRecord& default_instance();
  
  void Swap(PB_DesignationRecord* other);
  
  // implements Message ----------------------------------------------
  
  PB_DesignationRecord* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_DesignationRecord& from);
  void MergeFrom(const PB_DesignationRecord& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional bool has = 1;
  inline bool has_has() const;
  inline void clear_has();
  static const int kHasFieldNumber = 1;
  inline bool has() const;
  inline void set_has(bool value);
  
  // optional int64 start = 2;
  inline bool has_start() const;
  inline void clear_start();
  static const int kStartFieldNumber = 2;
  inline ::google::protobuf::int64 start() const;
  inline void set_start(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:PB_DesignationRecord)
 private:
  inline void set_has_has();
  inline void clear_has_has();
  inline void set_has_start();
  inline void clear_has_start();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 start_;
  bool has_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerAtt_2eproto();
  friend void protobuf_AssignDesc_PlayerAtt_2eproto();
  friend void protobuf_ShutdownFile_PlayerAtt_2eproto();
  
  void InitAsDefaultInstance();
  static PB_DesignationRecord* default_instance_;
};
// -------------------------------------------------------------------

class PB_PetAsset : public ::google::protobuf::Message {
 public:
  PB_PetAsset();
  virtual ~PB_PetAsset();
  
  PB_PetAsset(const PB_PetAsset& from);
  
  inline PB_PetAsset& operator=(const PB_PetAsset& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_PetAsset& default_instance();
  
  void Swap(PB_PetAsset* other);
  
  // implements Message ----------------------------------------------
  
  PB_PetAsset* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_PetAsset& from);
  void MergeFrom(const PB_PetAsset& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional int32 pet_level = 3;
  inline bool has_pet_level() const;
  inline void clear_pet_level();
  static const int kPetLevelFieldNumber = 3;
  inline ::google::protobuf::int32 pet_level() const;
  inline void set_pet_level(::google::protobuf::int32 value);
  
  // optional int32 quality = 4;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 4;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);
  
  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:PB_PetAsset)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pet_level();
  inline void clear_has_pet_level();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_level();
  inline void clear_has_level();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 pet_level_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 level_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerAtt_2eproto();
  friend void protobuf_AssignDesc_PlayerAtt_2eproto();
  friend void protobuf_ShutdownFile_PlayerAtt_2eproto();
  
  void InitAsDefaultInstance();
  static PB_PetAsset* default_instance_;
};
// -------------------------------------------------------------------

class PB_PlayerAtt : public ::google::protobuf::Message {
 public:
  PB_PlayerAtt();
  virtual ~PB_PlayerAtt();
  
  PB_PlayerAtt(const PB_PlayerAtt& from);
  
  inline PB_PlayerAtt& operator=(const PB_PlayerAtt& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PB_PlayerAtt& default_instance();
  
  void Swap(PB_PlayerAtt* other);
  
  // implements Message ----------------------------------------------
  
  PB_PlayerAtt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PB_PlayerAtt& from);
  void MergeFrom(const PB_PlayerAtt& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .PB_RoleAtt att = 1;
  inline bool has_att() const;
  inline void clear_att();
  static const int kAttFieldNumber = 1;
  inline const ::PB_RoleAtt& att() const;
  inline ::PB_RoleAtt* mutable_att();
  inline ::PB_RoleAtt* release_att();
  
  // optional .PB_MissionAllRecord missions = 2;
  inline bool has_missions() const;
  inline void clear_missions();
  static const int kMissionsFieldNumber = 2;
  inline const ::PB_MissionAllRecord& missions() const;
  inline ::PB_MissionAllRecord* mutable_missions();
  inline ::PB_MissionAllRecord* release_missions();
  
  // optional .PB_ItemPackage itemPackage = 3;
  inline bool has_itemPackage() const;
  inline void clear_itemPackage();
  static const int kItemPackageFieldNumber = 3;
  inline const ::PB_ItemPackage& itemPackage() const;
  inline ::PB_ItemPackage* mutable_itemPackage();
  inline ::PB_ItemPackage* release_itemPackage();
  
  // optional .PB_ALT alt = 4;
  inline bool has_alt() const;
  inline void clear_alt();
  static const int kAltFieldNumber = 4;
  inline const ::PB_ALT& alt() const;
  inline ::PB_ALT* mutable_alt();
  inline ::PB_ALT* release_alt();
  
  // optional int64 prevLogin = 5;
  inline bool has_prevLogin() const;
  inline void clear_prevLogin();
  static const int kPrevLoginFieldNumber = 5;
  inline ::google::protobuf::int64 prevLogin() const;
  inline void set_prevLogin(::google::protobuf::int64 value);
  
  // repeated .PB_FriendInfo friends = 6;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 6;
  inline const ::PB_FriendInfo& friends(int index) const;
  inline ::PB_FriendInfo* mutable_friends(int index);
  inline ::PB_FriendInfo* add_friends();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo >&
      friends() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo >*
      mutable_friends();
  
  // repeated int32 passGuide = 7;
  inline int passGuide_size() const;
  inline void clear_passGuide();
  static const int kPassGuideFieldNumber = 7;
  inline ::google::protobuf::int32 passGuide(int index) const;
  inline void set_passGuide(int index, ::google::protobuf::int32 value);
  inline void add_passGuide(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      passGuide() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_passGuide();
  
  // optional int64 prevLogout = 8;
  inline bool has_prevLogout() const;
  inline void clear_prevLogout();
  static const int kPrevLogoutFieldNumber = 8;
  inline ::google::protobuf::int64 prevLogout() const;
  inline void set_prevLogout(::google::protobuf::int64 value);
  
  // repeated int32 dayEvent = 9;
  inline int dayEvent_size() const;
  inline void clear_dayEvent();
  static const int kDayEventFieldNumber = 9;
  inline ::google::protobuf::int32 dayEvent(int index) const;
  inline void set_dayEvent(int index, ::google::protobuf::int32 value);
  inline void add_dayEvent(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dayEvent() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dayEvent();
  
  // repeated int32 fixedEvent = 10;
  inline int fixedEvent_size() const;
  inline void clear_fixedEvent();
  static const int kFixedEventFieldNumber = 10;
  inline ::google::protobuf::int32 fixedEvent(int index) const;
  inline void set_fixedEvent(int index, ::google::protobuf::int32 value);
  inline void add_fixedEvent(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      fixedEvent() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_fixedEvent();
  
  // repeated .PB_DesignationRecord designationRecord = 11;
  inline int designationRecord_size() const;
  inline void clear_designationRecord();
  static const int kDesignationRecordFieldNumber = 11;
  inline const ::PB_DesignationRecord& designationRecord(int index) const;
  inline ::PB_DesignationRecord* mutable_designationRecord(int index);
  inline ::PB_DesignationRecord* add_designationRecord();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_DesignationRecord >&
      designationRecord() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_DesignationRecord >*
      mutable_designationRecord();
  
  // repeated int32 showDesignation = 12;
  inline int showDesignation_size() const;
  inline void clear_showDesignation();
  static const int kShowDesignationFieldNumber = 12;
  inline ::google::protobuf::int32 showDesignation(int index) const;
  inline void set_showDesignation(int index, ::google::protobuf::int32 value);
  inline void add_showDesignation(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      showDesignation() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_showDesignation();
  
  // repeated .PB_MailInfo mails = 13;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 13;
  inline const ::PB_MailInfo& mails(int index) const;
  inline ::PB_MailInfo* mutable_mails(int index);
  inline ::PB_MailInfo* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_MailInfo >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_MailInfo >*
      mutable_mails();
  
  // repeated .PB_PetAsset pets = 14;
  inline int pets_size() const;
  inline void clear_pets();
  static const int kPetsFieldNumber = 14;
  inline const ::PB_PetAsset& pets(int index) const;
  inline ::PB_PetAsset* mutable_pets(int index);
  inline ::PB_PetAsset* add_pets();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_PetAsset >&
      pets() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_PetAsset >*
      mutable_pets();
  
  // repeated .PB_FriendInfo fans = 15;
  inline int fans_size() const;
  inline void clear_fans();
  static const int kFansFieldNumber = 15;
  inline const ::PB_FriendInfo& fans(int index) const;
  inline ::PB_FriendInfo* mutable_fans(int index);
  inline ::PB_FriendInfo* add_fans();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo >&
      fans() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo >*
      mutable_fans();
  
  // optional string firstLoginIP = 16;
  inline bool has_firstLoginIP() const;
  inline void clear_firstLoginIP();
  static const int kFirstLoginIPFieldNumber = 16;
  inline const ::std::string& firstLoginIP() const;
  inline void set_firstLoginIP(const ::std::string& value);
  inline void set_firstLoginIP(const char* value);
  inline void set_firstLoginIP(const char* value, size_t size);
  inline ::std::string* mutable_firstLoginIP();
  inline ::std::string* release_firstLoginIP();
  
  // optional string lastLoginIP = 17;
  inline bool has_lastLoginIP() const;
  inline void clear_lastLoginIP();
  static const int kLastLoginIPFieldNumber = 17;
  inline const ::std::string& lastLoginIP() const;
  inline void set_lastLoginIP(const ::std::string& value);
  inline void set_lastLoginIP(const char* value);
  inline void set_lastLoginIP(const char* value, size_t size);
  inline ::std::string* mutable_lastLoginIP();
  inline ::std::string* release_lastLoginIP();
  
  // optional int32 totalNum = 18;
  inline bool has_totalNum() const;
  inline void clear_totalNum();
  static const int kTotalNumFieldNumber = 18;
  inline ::google::protobuf::int32 totalNum() const;
  inline void set_totalNum(::google::protobuf::int32 value);
  
  // optional int32 loginNum = 19;
  inline bool has_loginNum() const;
  inline void clear_loginNum();
  static const int kLoginNumFieldNumber = 19;
  inline ::google::protobuf::int32 loginNum() const;
  inline void set_loginNum(::google::protobuf::int32 value);
  
  // optional int32 createTime = 20;
  inline bool has_createTime() const;
  inline void clear_createTime();
  static const int kCreateTimeFieldNumber = 20;
  inline ::google::protobuf::int32 createTime() const;
  inline void set_createTime(::google::protobuf::int32 value);
  
  // optional string faction = 21;
  inline bool has_faction() const;
  inline void clear_faction();
  static const int kFactionFieldNumber = 21;
  inline const ::std::string& faction() const;
  inline void set_faction(const ::std::string& value);
  inline void set_faction(const char* value);
  inline void set_faction(const char* value, size_t size);
  inline ::std::string* mutable_faction();
  inline ::std::string* release_faction();
  
  // optional int32 godDueDate = 23;
  inline bool has_godDueDate() const;
  inline void clear_godDueDate();
  static const int kGodDueDateFieldNumber = 23;
  inline ::google::protobuf::int32 godDueDate() const;
  inline void set_godDueDate(::google::protobuf::int32 value);
  
  // optional int32 godRankIndex = 24;
  inline bool has_godRankIndex() const;
  inline void clear_godRankIndex();
  static const int kGodRankIndexFieldNumber = 24;
  inline ::google::protobuf::int32 godRankIndex() const;
  inline void set_godRankIndex(::google::protobuf::int32 value);
  
  // repeated .PB_FriendInfo godRecordInfo = 25;
  inline int godRecordInfo_size() const;
  inline void clear_godRecordInfo();
  static const int kGodRecordInfoFieldNumber = 25;
  inline const ::PB_FriendInfo& godRecordInfo(int index) const;
  inline ::PB_FriendInfo* mutable_godRecordInfo(int index);
  inline ::PB_FriendInfo* add_godRecordInfo();
  inline const ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo >&
      godRecordInfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo >*
      mutable_godRecordInfo();
  
  // repeated int64 godRecordArg1 = 26;
  inline int godRecordArg1_size() const;
  inline void clear_godRecordArg1();
  static const int kGodRecordArg1FieldNumber = 26;
  inline ::google::protobuf::int64 godRecordArg1(int index) const;
  inline void set_godRecordArg1(int index, ::google::protobuf::int64 value);
  inline void add_godRecordArg1(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      godRecordArg1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_godRecordArg1();
  
  // repeated bool godRankRecords = 27;
  inline int godRankRecords_size() const;
  inline void clear_godRankRecords();
  static const int kGodRankRecordsFieldNumber = 27;
  inline bool godRankRecords(int index) const;
  inline void set_godRankRecords(int index, bool value);
  inline void add_godRankRecords(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      godRankRecords() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_godRankRecords();
  
  // optional int32 minGodRank = 29 [default = -1];
  inline bool has_minGodRank() const;
  inline void clear_minGodRank();
  static const int kMinGodRankFieldNumber = 29;
  inline ::google::protobuf::int32 minGodRank() const;
  inline void set_minGodRank(::google::protobuf::int32 value);
  
  // repeated int32 propertieType = 30;
  inline int propertieType_size() const;
  inline void clear_propertieType();
  static const int kPropertieTypeFieldNumber = 30;
  inline ::google::protobuf::int32 propertieType(int index) const;
  inline void set_propertieType(int index, ::google::protobuf::int32 value);
  inline void add_propertieType(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      propertieType() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_propertieType();
  
  // repeated int32 haloLevel = 31;
  inline int haloLevel_size() const;
  inline void clear_haloLevel();
  static const int kHaloLevelFieldNumber = 31;
  inline ::google::protobuf::int32 haloLevel(int index) const;
  inline void set_haloLevel(int index, ::google::protobuf::int32 value);
  inline void add_haloLevel(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      haloLevel() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_haloLevel();
  
  // repeated int32 haloValue = 32;
  inline int haloValue_size() const;
  inline void clear_haloValue();
  static const int kHaloValueFieldNumber = 32;
  inline ::google::protobuf::int32 haloValue(int index) const;
  inline void set_haloValue(int index, ::google::protobuf::int32 value);
  inline void add_haloValue(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      haloValue() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_haloValue();
  
  // optional string selfcode = 33;
  inline bool has_selfcode() const;
  inline void clear_selfcode();
  static const int kSelfcodeFieldNumber = 33;
  inline const ::std::string& selfcode() const;
  inline void set_selfcode(const ::std::string& value);
  inline void set_selfcode(const char* value);
  inline void set_selfcode(const char* value, size_t size);
  inline ::std::string* mutable_selfcode();
  inline ::std::string* release_selfcode();
  
  // optional string othercode = 34;
  inline bool has_othercode() const;
  inline void clear_othercode();
  static const int kOthercodeFieldNumber = 34;
  inline const ::std::string& othercode() const;
  inline void set_othercode(const ::std::string& value);
  inline void set_othercode(const char* value);
  inline void set_othercode(const char* value, size_t size);
  inline ::std::string* mutable_othercode();
  inline ::std::string* release_othercode();
  
  // repeated int32 haloCount = 35;
  inline int haloCount_size() const;
  inline void clear_haloCount();
  static const int kHaloCountFieldNumber = 35;
  inline ::google::protobuf::int32 haloCount(int index) const;
  inline void set_haloCount(int index, ::google::protobuf::int32 value);
  inline void add_haloCount(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      haloCount() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_haloCount();
  
  // @@protoc_insertion_point(class_scope:PB_PlayerAtt)
 private:
  inline void set_has_att();
  inline void clear_has_att();
  inline void set_has_missions();
  inline void clear_has_missions();
  inline void set_has_itemPackage();
  inline void clear_has_itemPackage();
  inline void set_has_alt();
  inline void clear_has_alt();
  inline void set_has_prevLogin();
  inline void clear_has_prevLogin();
  inline void set_has_prevLogout();
  inline void clear_has_prevLogout();
  inline void set_has_firstLoginIP();
  inline void clear_has_firstLoginIP();
  inline void set_has_lastLoginIP();
  inline void clear_has_lastLoginIP();
  inline void set_has_totalNum();
  inline void clear_has_totalNum();
  inline void set_has_loginNum();
  inline void clear_has_loginNum();
  inline void set_has_createTime();
  inline void clear_has_createTime();
  inline void set_has_faction();
  inline void clear_has_faction();
  inline void set_has_godDueDate();
  inline void clear_has_godDueDate();
  inline void set_has_godRankIndex();
  inline void clear_has_godRankIndex();
  inline void set_has_minGodRank();
  inline void clear_has_minGodRank();
  inline void set_has_selfcode();
  inline void clear_has_selfcode();
  inline void set_has_othercode();
  inline void clear_has_othercode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::PB_RoleAtt* att_;
  ::PB_MissionAllRecord* missions_;
  ::PB_ItemPackage* itemPackage_;
  ::PB_ALT* alt_;
  ::google::protobuf::int64 prevLogin_;
  ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo > friends_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > passGuide_;
  ::google::protobuf::int64 prevLogout_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dayEvent_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > fixedEvent_;
  ::google::protobuf::RepeatedPtrField< ::PB_DesignationRecord > designationRecord_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > showDesignation_;
  ::google::protobuf::RepeatedPtrField< ::PB_MailInfo > mails_;
  ::google::protobuf::RepeatedPtrField< ::PB_PetAsset > pets_;
  ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo > fans_;
  ::std::string* firstLoginIP_;
  ::std::string* lastLoginIP_;
  ::google::protobuf::int32 totalNum_;
  ::google::protobuf::int32 loginNum_;
  ::std::string* faction_;
  ::google::protobuf::int32 createTime_;
  ::google::protobuf::int32 godDueDate_;
  ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo > godRecordInfo_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > godRecordArg1_;
  ::google::protobuf::int32 godRankIndex_;
  ::google::protobuf::int32 minGodRank_;
  ::google::protobuf::RepeatedField< bool > godRankRecords_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > propertieType_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > haloLevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > haloValue_;
  ::std::string* selfcode_;
  ::std::string* othercode_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > haloCount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(33 + 31) / 32];
  
  friend void  protobuf_AddDesc_PlayerAtt_2eproto();
  friend void protobuf_AssignDesc_PlayerAtt_2eproto();
  friend void protobuf_ShutdownFile_PlayerAtt_2eproto();
  
  void InitAsDefaultInstance();
  static PB_PlayerAtt* default_instance_;
};
// ===================================================================


// ===================================================================

// RoomInfo

// optional int32 id = 1;
inline bool RoomInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RoomInfo::id() const {
  return id_;
}
inline void RoomInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 map = 2;
inline bool RoomInfo::has_map() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomInfo::set_has_map() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomInfo::clear_has_map() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomInfo::clear_map() {
  map_ = 0;
  clear_has_map();
}
inline ::google::protobuf::int32 RoomInfo::map() const {
  return map_;
}
inline void RoomInfo::set_map(::google::protobuf::int32 value) {
  set_has_map();
  map_ = value;
}

// optional string leader = 3;
inline bool RoomInfo::has_leader() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomInfo::set_has_leader() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomInfo::clear_has_leader() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomInfo::clear_leader() {
  if (leader_ != &::google::protobuf::internal::kEmptyString) {
    leader_->clear();
  }
  clear_has_leader();
}
inline const ::std::string& RoomInfo::leader() const {
  return *leader_;
}
inline void RoomInfo::set_leader(const ::std::string& value) {
  set_has_leader();
  if (leader_ == &::google::protobuf::internal::kEmptyString) {
    leader_ = new ::std::string;
  }
  leader_->assign(value);
}
inline void RoomInfo::set_leader(const char* value) {
  set_has_leader();
  if (leader_ == &::google::protobuf::internal::kEmptyString) {
    leader_ = new ::std::string;
  }
  leader_->assign(value);
}
inline void RoomInfo::set_leader(const char* value, size_t size) {
  set_has_leader();
  if (leader_ == &::google::protobuf::internal::kEmptyString) {
    leader_ = new ::std::string;
  }
  leader_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoomInfo::mutable_leader() {
  set_has_leader();
  if (leader_ == &::google::protobuf::internal::kEmptyString) {
    leader_ = new ::std::string;
  }
  return leader_;
}
inline ::std::string* RoomInfo::release_leader() {
  clear_has_leader();
  if (leader_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = leader_;
    leader_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 count = 4;
inline bool RoomInfo::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomInfo::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomInfo::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 RoomInfo::count() const {
  return count_;
}
inline void RoomInfo::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// repeated int32 roles = 5;
inline int RoomInfo::roles_size() const {
  return roles_.size();
}
inline void RoomInfo::clear_roles() {
  roles_.Clear();
}
inline ::google::protobuf::int32 RoomInfo::roles(int index) const {
  return roles_.Get(index);
}
inline void RoomInfo::set_roles(int index, ::google::protobuf::int32 value) {
  roles_.Set(index, value);
}
inline void RoomInfo::add_roles(::google::protobuf::int32 value) {
  roles_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoomInfo::roles() const {
  return roles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoomInfo::mutable_roles() {
  return &roles_;
}

// optional bool noPower = 6;
inline bool RoomInfo::has_noPower() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoomInfo::set_has_noPower() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoomInfo::clear_has_noPower() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoomInfo::clear_noPower() {
  noPower_ = false;
  clear_has_noPower();
}
inline bool RoomInfo::noPower() const {
  return noPower_;
}
inline void RoomInfo::set_noPower(bool value) {
  set_has_noPower();
  noPower_ = value;
}

// -------------------------------------------------------------------

// PB_FriendInfo

// optional int64 roleID = 1 [default = -1];
inline bool PB_FriendInfo::has_roleID() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_FriendInfo::set_has_roleID() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_FriendInfo::clear_has_roleID() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_FriendInfo::clear_roleID() {
  roleID_ = GOOGLE_LONGLONG(-1);
  clear_has_roleID();
}
inline ::google::protobuf::int64 PB_FriendInfo::roleID() const {
  return roleID_;
}
inline void PB_FriendInfo::set_roleID(::google::protobuf::int64 value) {
  set_has_roleID();
  roleID_ = value;
}

// optional string name = 2;
inline bool PB_FriendInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_FriendInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_FriendInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_FriendInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PB_FriendInfo::name() const {
  return *name_;
}
inline void PB_FriendInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PB_FriendInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PB_FriendInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PB_FriendInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PB_FriendInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .PB_ProfessionInfo.Type professionType = 3;
inline bool PB_FriendInfo::has_professionType() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_FriendInfo::set_has_professionType() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_FriendInfo::clear_has_professionType() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_FriendInfo::clear_professionType() {
  professionType_ = 0;
  clear_has_professionType();
}
inline ::PB_ProfessionInfo_Type PB_FriendInfo::professionType() const {
  return static_cast< ::PB_ProfessionInfo_Type >(professionType_);
}
inline void PB_FriendInfo::set_professionType(::PB_ProfessionInfo_Type value) {
  GOOGLE_DCHECK(::PB_ProfessionInfo_Type_IsValid(value));
  set_has_professionType();
  professionType_ = value;
}

// optional bool loveHeart = 4;
inline bool PB_FriendInfo::has_loveHeart() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_FriendInfo::set_has_loveHeart() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_FriendInfo::clear_has_loveHeart() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_FriendInfo::clear_loveHeart() {
  loveHeart_ = false;
  clear_has_loveHeart();
}
inline bool PB_FriendInfo::loveHeart() const {
  return loveHeart_;
}
inline void PB_FriendInfo::set_loveHeart(bool value) {
  set_has_loveHeart();
  loveHeart_ = value;
}

// optional bool flag = 5;
inline bool PB_FriendInfo::has_flag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_FriendInfo::set_has_flag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_FriendInfo::clear_has_flag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_FriendInfo::clear_flag() {
  flag_ = false;
  clear_has_flag();
}
inline bool PB_FriendInfo::flag() const {
  return flag_;
}
inline void PB_FriendInfo::set_flag(bool value) {
  set_has_flag();
  flag_ = value;
}

// optional int32 vip = 6;
inline bool PB_FriendInfo::has_vip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PB_FriendInfo::set_has_vip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PB_FriendInfo::clear_has_vip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PB_FriendInfo::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 PB_FriendInfo::vip() const {
  return vip_;
}
inline void PB_FriendInfo::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// optional int32 level = 7;
inline bool PB_FriendInfo::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PB_FriendInfo::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PB_FriendInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PB_FriendInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PB_FriendInfo::level() const {
  return level_;
}
inline void PB_FriendInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 power = 8;
inline bool PB_FriendInfo::has_power() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PB_FriendInfo::set_has_power() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PB_FriendInfo::clear_has_power() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PB_FriendInfo::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 PB_FriendInfo::power() const {
  return power_;
}
inline void PB_FriendInfo::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
}

// -------------------------------------------------------------------

// RecordInfo

// optional .PB_FriendInfo role = 1;
inline bool RecordInfo::has_role() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecordInfo::set_has_role() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecordInfo::clear_has_role() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecordInfo::clear_role() {
  if (role_ != NULL) role_->::PB_FriendInfo::Clear();
  clear_has_role();
}
inline const ::PB_FriendInfo& RecordInfo::role() const {
  return role_ != NULL ? *role_ : *default_instance_->role_;
}
inline ::PB_FriendInfo* RecordInfo::mutable_role() {
  set_has_role();
  if (role_ == NULL) role_ = new ::PB_FriendInfo;
  return role_;
}
inline ::PB_FriendInfo* RecordInfo::release_role() {
  clear_has_role();
  ::PB_FriendInfo* temp = role_;
  role_ = NULL;
  return temp;
}

// optional int64 arg1 = 2;
inline bool RecordInfo::has_arg1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecordInfo::set_has_arg1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecordInfo::clear_has_arg1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecordInfo::clear_arg1() {
  arg1_ = GOOGLE_LONGLONG(0);
  clear_has_arg1();
}
inline ::google::protobuf::int64 RecordInfo::arg1() const {
  return arg1_;
}
inline void RecordInfo::set_arg1(::google::protobuf::int64 value) {
  set_has_arg1();
  arg1_ = value;
}

// -------------------------------------------------------------------

// PB_DesignationRecord

// optional bool has = 1;
inline bool PB_DesignationRecord::has_has() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_DesignationRecord::set_has_has() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_DesignationRecord::clear_has_has() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_DesignationRecord::clear_has() {
  has_ = false;
  clear_has_has();
}
inline bool PB_DesignationRecord::has() const {
  return has_;
}
inline void PB_DesignationRecord::set_has(bool value) {
  set_has_has();
  has_ = value;
}

// optional int64 start = 2;
inline bool PB_DesignationRecord::has_start() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_DesignationRecord::set_has_start() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_DesignationRecord::clear_has_start() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_DesignationRecord::clear_start() {
  start_ = GOOGLE_LONGLONG(0);
  clear_has_start();
}
inline ::google::protobuf::int64 PB_DesignationRecord::start() const {
  return start_;
}
inline void PB_DesignationRecord::set_start(::google::protobuf::int64 value) {
  set_has_start();
  start_ = value;
}

// -------------------------------------------------------------------

// PB_PetAsset

// optional int32 id = 1 [default = -1];
inline bool PB_PetAsset::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_PetAsset::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_PetAsset::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_PetAsset::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 PB_PetAsset::id() const {
  return id_;
}
inline void PB_PetAsset::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool PB_PetAsset::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_PetAsset::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_PetAsset::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_PetAsset::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PB_PetAsset::name() const {
  return *name_;
}
inline void PB_PetAsset::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PB_PetAsset::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PB_PetAsset::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PB_PetAsset::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PB_PetAsset::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 pet_level = 3;
inline bool PB_PetAsset::has_pet_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_PetAsset::set_has_pet_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_PetAsset::clear_has_pet_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_PetAsset::clear_pet_level() {
  pet_level_ = 0;
  clear_has_pet_level();
}
inline ::google::protobuf::int32 PB_PetAsset::pet_level() const {
  return pet_level_;
}
inline void PB_PetAsset::set_pet_level(::google::protobuf::int32 value) {
  set_has_pet_level();
  pet_level_ = value;
}

// optional int32 quality = 4;
inline bool PB_PetAsset::has_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_PetAsset::set_has_quality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_PetAsset::clear_has_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_PetAsset::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 PB_PetAsset::quality() const {
  return quality_;
}
inline void PB_PetAsset::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 level = 5;
inline bool PB_PetAsset::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_PetAsset::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_PetAsset::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_PetAsset::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PB_PetAsset::level() const {
  return level_;
}
inline void PB_PetAsset::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// PB_PlayerAtt

// optional .PB_RoleAtt att = 1;
inline bool PB_PlayerAtt::has_att() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PB_PlayerAtt::set_has_att() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PB_PlayerAtt::clear_has_att() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PB_PlayerAtt::clear_att() {
  if (att_ != NULL) att_->::PB_RoleAtt::Clear();
  clear_has_att();
}
inline const ::PB_RoleAtt& PB_PlayerAtt::att() const {
  return att_ != NULL ? *att_ : *default_instance_->att_;
}
inline ::PB_RoleAtt* PB_PlayerAtt::mutable_att() {
  set_has_att();
  if (att_ == NULL) att_ = new ::PB_RoleAtt;
  return att_;
}
inline ::PB_RoleAtt* PB_PlayerAtt::release_att() {
  clear_has_att();
  ::PB_RoleAtt* temp = att_;
  att_ = NULL;
  return temp;
}

// optional .PB_MissionAllRecord missions = 2;
inline bool PB_PlayerAtt::has_missions() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PB_PlayerAtt::set_has_missions() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PB_PlayerAtt::clear_has_missions() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PB_PlayerAtt::clear_missions() {
  if (missions_ != NULL) missions_->::PB_MissionAllRecord::Clear();
  clear_has_missions();
}
inline const ::PB_MissionAllRecord& PB_PlayerAtt::missions() const {
  return missions_ != NULL ? *missions_ : *default_instance_->missions_;
}
inline ::PB_MissionAllRecord* PB_PlayerAtt::mutable_missions() {
  set_has_missions();
  if (missions_ == NULL) missions_ = new ::PB_MissionAllRecord;
  return missions_;
}
inline ::PB_MissionAllRecord* PB_PlayerAtt::release_missions() {
  clear_has_missions();
  ::PB_MissionAllRecord* temp = missions_;
  missions_ = NULL;
  return temp;
}

// optional .PB_ItemPackage itemPackage = 3;
inline bool PB_PlayerAtt::has_itemPackage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PB_PlayerAtt::set_has_itemPackage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PB_PlayerAtt::clear_has_itemPackage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PB_PlayerAtt::clear_itemPackage() {
  if (itemPackage_ != NULL) itemPackage_->::PB_ItemPackage::Clear();
  clear_has_itemPackage();
}
inline const ::PB_ItemPackage& PB_PlayerAtt::itemPackage() const {
  return itemPackage_ != NULL ? *itemPackage_ : *default_instance_->itemPackage_;
}
inline ::PB_ItemPackage* PB_PlayerAtt::mutable_itemPackage() {
  set_has_itemPackage();
  if (itemPackage_ == NULL) itemPackage_ = new ::PB_ItemPackage;
  return itemPackage_;
}
inline ::PB_ItemPackage* PB_PlayerAtt::release_itemPackage() {
  clear_has_itemPackage();
  ::PB_ItemPackage* temp = itemPackage_;
  itemPackage_ = NULL;
  return temp;
}

// optional .PB_ALT alt = 4;
inline bool PB_PlayerAtt::has_alt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PB_PlayerAtt::set_has_alt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PB_PlayerAtt::clear_has_alt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PB_PlayerAtt::clear_alt() {
  if (alt_ != NULL) alt_->::PB_ALT::Clear();
  clear_has_alt();
}
inline const ::PB_ALT& PB_PlayerAtt::alt() const {
  return alt_ != NULL ? *alt_ : *default_instance_->alt_;
}
inline ::PB_ALT* PB_PlayerAtt::mutable_alt() {
  set_has_alt();
  if (alt_ == NULL) alt_ = new ::PB_ALT;
  return alt_;
}
inline ::PB_ALT* PB_PlayerAtt::release_alt() {
  clear_has_alt();
  ::PB_ALT* temp = alt_;
  alt_ = NULL;
  return temp;
}

// optional int64 prevLogin = 5;
inline bool PB_PlayerAtt::has_prevLogin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PB_PlayerAtt::set_has_prevLogin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PB_PlayerAtt::clear_has_prevLogin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PB_PlayerAtt::clear_prevLogin() {
  prevLogin_ = GOOGLE_LONGLONG(0);
  clear_has_prevLogin();
}
inline ::google::protobuf::int64 PB_PlayerAtt::prevLogin() const {
  return prevLogin_;
}
inline void PB_PlayerAtt::set_prevLogin(::google::protobuf::int64 value) {
  set_has_prevLogin();
  prevLogin_ = value;
}

// repeated .PB_FriendInfo friends = 6;
inline int PB_PlayerAtt::friends_size() const {
  return friends_.size();
}
inline void PB_PlayerAtt::clear_friends() {
  friends_.Clear();
}
inline const ::PB_FriendInfo& PB_PlayerAtt::friends(int index) const {
  return friends_.Get(index);
}
inline ::PB_FriendInfo* PB_PlayerAtt::mutable_friends(int index) {
  return friends_.Mutable(index);
}
inline ::PB_FriendInfo* PB_PlayerAtt::add_friends() {
  return friends_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo >&
PB_PlayerAtt::friends() const {
  return friends_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo >*
PB_PlayerAtt::mutable_friends() {
  return &friends_;
}

// repeated int32 passGuide = 7;
inline int PB_PlayerAtt::passGuide_size() const {
  return passGuide_.size();
}
inline void PB_PlayerAtt::clear_passGuide() {
  passGuide_.Clear();
}
inline ::google::protobuf::int32 PB_PlayerAtt::passGuide(int index) const {
  return passGuide_.Get(index);
}
inline void PB_PlayerAtt::set_passGuide(int index, ::google::protobuf::int32 value) {
  passGuide_.Set(index, value);
}
inline void PB_PlayerAtt::add_passGuide(::google::protobuf::int32 value) {
  passGuide_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_PlayerAtt::passGuide() const {
  return passGuide_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_PlayerAtt::mutable_passGuide() {
  return &passGuide_;
}

// optional int64 prevLogout = 8;
inline bool PB_PlayerAtt::has_prevLogout() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PB_PlayerAtt::set_has_prevLogout() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PB_PlayerAtt::clear_has_prevLogout() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PB_PlayerAtt::clear_prevLogout() {
  prevLogout_ = GOOGLE_LONGLONG(0);
  clear_has_prevLogout();
}
inline ::google::protobuf::int64 PB_PlayerAtt::prevLogout() const {
  return prevLogout_;
}
inline void PB_PlayerAtt::set_prevLogout(::google::protobuf::int64 value) {
  set_has_prevLogout();
  prevLogout_ = value;
}

// repeated int32 dayEvent = 9;
inline int PB_PlayerAtt::dayEvent_size() const {
  return dayEvent_.size();
}
inline void PB_PlayerAtt::clear_dayEvent() {
  dayEvent_.Clear();
}
inline ::google::protobuf::int32 PB_PlayerAtt::dayEvent(int index) const {
  return dayEvent_.Get(index);
}
inline void PB_PlayerAtt::set_dayEvent(int index, ::google::protobuf::int32 value) {
  dayEvent_.Set(index, value);
}
inline void PB_PlayerAtt::add_dayEvent(::google::protobuf::int32 value) {
  dayEvent_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_PlayerAtt::dayEvent() const {
  return dayEvent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_PlayerAtt::mutable_dayEvent() {
  return &dayEvent_;
}

// repeated int32 fixedEvent = 10;
inline int PB_PlayerAtt::fixedEvent_size() const {
  return fixedEvent_.size();
}
inline void PB_PlayerAtt::clear_fixedEvent() {
  fixedEvent_.Clear();
}
inline ::google::protobuf::int32 PB_PlayerAtt::fixedEvent(int index) const {
  return fixedEvent_.Get(index);
}
inline void PB_PlayerAtt::set_fixedEvent(int index, ::google::protobuf::int32 value) {
  fixedEvent_.Set(index, value);
}
inline void PB_PlayerAtt::add_fixedEvent(::google::protobuf::int32 value) {
  fixedEvent_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_PlayerAtt::fixedEvent() const {
  return fixedEvent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_PlayerAtt::mutable_fixedEvent() {
  return &fixedEvent_;
}

// repeated .PB_DesignationRecord designationRecord = 11;
inline int PB_PlayerAtt::designationRecord_size() const {
  return designationRecord_.size();
}
inline void PB_PlayerAtt::clear_designationRecord() {
  designationRecord_.Clear();
}
inline const ::PB_DesignationRecord& PB_PlayerAtt::designationRecord(int index) const {
  return designationRecord_.Get(index);
}
inline ::PB_DesignationRecord* PB_PlayerAtt::mutable_designationRecord(int index) {
  return designationRecord_.Mutable(index);
}
inline ::PB_DesignationRecord* PB_PlayerAtt::add_designationRecord() {
  return designationRecord_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_DesignationRecord >&
PB_PlayerAtt::designationRecord() const {
  return designationRecord_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_DesignationRecord >*
PB_PlayerAtt::mutable_designationRecord() {
  return &designationRecord_;
}

// repeated int32 showDesignation = 12;
inline int PB_PlayerAtt::showDesignation_size() const {
  return showDesignation_.size();
}
inline void PB_PlayerAtt::clear_showDesignation() {
  showDesignation_.Clear();
}
inline ::google::protobuf::int32 PB_PlayerAtt::showDesignation(int index) const {
  return showDesignation_.Get(index);
}
inline void PB_PlayerAtt::set_showDesignation(int index, ::google::protobuf::int32 value) {
  showDesignation_.Set(index, value);
}
inline void PB_PlayerAtt::add_showDesignation(::google::protobuf::int32 value) {
  showDesignation_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_PlayerAtt::showDesignation() const {
  return showDesignation_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_PlayerAtt::mutable_showDesignation() {
  return &showDesignation_;
}

// repeated .PB_MailInfo mails = 13;
inline int PB_PlayerAtt::mails_size() const {
  return mails_.size();
}
inline void PB_PlayerAtt::clear_mails() {
  mails_.Clear();
}
inline const ::PB_MailInfo& PB_PlayerAtt::mails(int index) const {
  return mails_.Get(index);
}
inline ::PB_MailInfo* PB_PlayerAtt::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::PB_MailInfo* PB_PlayerAtt::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_MailInfo >&
PB_PlayerAtt::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_MailInfo >*
PB_PlayerAtt::mutable_mails() {
  return &mails_;
}

// repeated .PB_PetAsset pets = 14;
inline int PB_PlayerAtt::pets_size() const {
  return pets_.size();
}
inline void PB_PlayerAtt::clear_pets() {
  pets_.Clear();
}
inline const ::PB_PetAsset& PB_PlayerAtt::pets(int index) const {
  return pets_.Get(index);
}
inline ::PB_PetAsset* PB_PlayerAtt::mutable_pets(int index) {
  return pets_.Mutable(index);
}
inline ::PB_PetAsset* PB_PlayerAtt::add_pets() {
  return pets_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_PetAsset >&
PB_PlayerAtt::pets() const {
  return pets_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_PetAsset >*
PB_PlayerAtt::mutable_pets() {
  return &pets_;
}

// repeated .PB_FriendInfo fans = 15;
inline int PB_PlayerAtt::fans_size() const {
  return fans_.size();
}
inline void PB_PlayerAtt::clear_fans() {
  fans_.Clear();
}
inline const ::PB_FriendInfo& PB_PlayerAtt::fans(int index) const {
  return fans_.Get(index);
}
inline ::PB_FriendInfo* PB_PlayerAtt::mutable_fans(int index) {
  return fans_.Mutable(index);
}
inline ::PB_FriendInfo* PB_PlayerAtt::add_fans() {
  return fans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo >&
PB_PlayerAtt::fans() const {
  return fans_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo >*
PB_PlayerAtt::mutable_fans() {
  return &fans_;
}

// optional string firstLoginIP = 16;
inline bool PB_PlayerAtt::has_firstLoginIP() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PB_PlayerAtt::set_has_firstLoginIP() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PB_PlayerAtt::clear_has_firstLoginIP() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PB_PlayerAtt::clear_firstLoginIP() {
  if (firstLoginIP_ != &::google::protobuf::internal::kEmptyString) {
    firstLoginIP_->clear();
  }
  clear_has_firstLoginIP();
}
inline const ::std::string& PB_PlayerAtt::firstLoginIP() const {
  return *firstLoginIP_;
}
inline void PB_PlayerAtt::set_firstLoginIP(const ::std::string& value) {
  set_has_firstLoginIP();
  if (firstLoginIP_ == &::google::protobuf::internal::kEmptyString) {
    firstLoginIP_ = new ::std::string;
  }
  firstLoginIP_->assign(value);
}
inline void PB_PlayerAtt::set_firstLoginIP(const char* value) {
  set_has_firstLoginIP();
  if (firstLoginIP_ == &::google::protobuf::internal::kEmptyString) {
    firstLoginIP_ = new ::std::string;
  }
  firstLoginIP_->assign(value);
}
inline void PB_PlayerAtt::set_firstLoginIP(const char* value, size_t size) {
  set_has_firstLoginIP();
  if (firstLoginIP_ == &::google::protobuf::internal::kEmptyString) {
    firstLoginIP_ = new ::std::string;
  }
  firstLoginIP_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PB_PlayerAtt::mutable_firstLoginIP() {
  set_has_firstLoginIP();
  if (firstLoginIP_ == &::google::protobuf::internal::kEmptyString) {
    firstLoginIP_ = new ::std::string;
  }
  return firstLoginIP_;
}
inline ::std::string* PB_PlayerAtt::release_firstLoginIP() {
  clear_has_firstLoginIP();
  if (firstLoginIP_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = firstLoginIP_;
    firstLoginIP_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string lastLoginIP = 17;
inline bool PB_PlayerAtt::has_lastLoginIP() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PB_PlayerAtt::set_has_lastLoginIP() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PB_PlayerAtt::clear_has_lastLoginIP() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PB_PlayerAtt::clear_lastLoginIP() {
  if (lastLoginIP_ != &::google::protobuf::internal::kEmptyString) {
    lastLoginIP_->clear();
  }
  clear_has_lastLoginIP();
}
inline const ::std::string& PB_PlayerAtt::lastLoginIP() const {
  return *lastLoginIP_;
}
inline void PB_PlayerAtt::set_lastLoginIP(const ::std::string& value) {
  set_has_lastLoginIP();
  if (lastLoginIP_ == &::google::protobuf::internal::kEmptyString) {
    lastLoginIP_ = new ::std::string;
  }
  lastLoginIP_->assign(value);
}
inline void PB_PlayerAtt::set_lastLoginIP(const char* value) {
  set_has_lastLoginIP();
  if (lastLoginIP_ == &::google::protobuf::internal::kEmptyString) {
    lastLoginIP_ = new ::std::string;
  }
  lastLoginIP_->assign(value);
}
inline void PB_PlayerAtt::set_lastLoginIP(const char* value, size_t size) {
  set_has_lastLoginIP();
  if (lastLoginIP_ == &::google::protobuf::internal::kEmptyString) {
    lastLoginIP_ = new ::std::string;
  }
  lastLoginIP_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PB_PlayerAtt::mutable_lastLoginIP() {
  set_has_lastLoginIP();
  if (lastLoginIP_ == &::google::protobuf::internal::kEmptyString) {
    lastLoginIP_ = new ::std::string;
  }
  return lastLoginIP_;
}
inline ::std::string* PB_PlayerAtt::release_lastLoginIP() {
  clear_has_lastLoginIP();
  if (lastLoginIP_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = lastLoginIP_;
    lastLoginIP_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 totalNum = 18;
inline bool PB_PlayerAtt::has_totalNum() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PB_PlayerAtt::set_has_totalNum() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PB_PlayerAtt::clear_has_totalNum() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PB_PlayerAtt::clear_totalNum() {
  totalNum_ = 0;
  clear_has_totalNum();
}
inline ::google::protobuf::int32 PB_PlayerAtt::totalNum() const {
  return totalNum_;
}
inline void PB_PlayerAtt::set_totalNum(::google::protobuf::int32 value) {
  set_has_totalNum();
  totalNum_ = value;
}

// optional int32 loginNum = 19;
inline bool PB_PlayerAtt::has_loginNum() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PB_PlayerAtt::set_has_loginNum() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PB_PlayerAtt::clear_has_loginNum() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PB_PlayerAtt::clear_loginNum() {
  loginNum_ = 0;
  clear_has_loginNum();
}
inline ::google::protobuf::int32 PB_PlayerAtt::loginNum() const {
  return loginNum_;
}
inline void PB_PlayerAtt::set_loginNum(::google::protobuf::int32 value) {
  set_has_loginNum();
  loginNum_ = value;
}

// optional int32 createTime = 20;
inline bool PB_PlayerAtt::has_createTime() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PB_PlayerAtt::set_has_createTime() {
  _has_bits_[0] |= 0x00080000u;
}
inline void PB_PlayerAtt::clear_has_createTime() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void PB_PlayerAtt::clear_createTime() {
  createTime_ = 0;
  clear_has_createTime();
}
inline ::google::protobuf::int32 PB_PlayerAtt::createTime() const {
  return createTime_;
}
inline void PB_PlayerAtt::set_createTime(::google::protobuf::int32 value) {
  set_has_createTime();
  createTime_ = value;
}

// optional string faction = 21;
inline bool PB_PlayerAtt::has_faction() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PB_PlayerAtt::set_has_faction() {
  _has_bits_[0] |= 0x00100000u;
}
inline void PB_PlayerAtt::clear_has_faction() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void PB_PlayerAtt::clear_faction() {
  if (faction_ != &::google::protobuf::internal::kEmptyString) {
    faction_->clear();
  }
  clear_has_faction();
}
inline const ::std::string& PB_PlayerAtt::faction() const {
  return *faction_;
}
inline void PB_PlayerAtt::set_faction(const ::std::string& value) {
  set_has_faction();
  if (faction_ == &::google::protobuf::internal::kEmptyString) {
    faction_ = new ::std::string;
  }
  faction_->assign(value);
}
inline void PB_PlayerAtt::set_faction(const char* value) {
  set_has_faction();
  if (faction_ == &::google::protobuf::internal::kEmptyString) {
    faction_ = new ::std::string;
  }
  faction_->assign(value);
}
inline void PB_PlayerAtt::set_faction(const char* value, size_t size) {
  set_has_faction();
  if (faction_ == &::google::protobuf::internal::kEmptyString) {
    faction_ = new ::std::string;
  }
  faction_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PB_PlayerAtt::mutable_faction() {
  set_has_faction();
  if (faction_ == &::google::protobuf::internal::kEmptyString) {
    faction_ = new ::std::string;
  }
  return faction_;
}
inline ::std::string* PB_PlayerAtt::release_faction() {
  clear_has_faction();
  if (faction_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = faction_;
    faction_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 godDueDate = 23;
inline bool PB_PlayerAtt::has_godDueDate() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PB_PlayerAtt::set_has_godDueDate() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PB_PlayerAtt::clear_has_godDueDate() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PB_PlayerAtt::clear_godDueDate() {
  godDueDate_ = 0;
  clear_has_godDueDate();
}
inline ::google::protobuf::int32 PB_PlayerAtt::godDueDate() const {
  return godDueDate_;
}
inline void PB_PlayerAtt::set_godDueDate(::google::protobuf::int32 value) {
  set_has_godDueDate();
  godDueDate_ = value;
}

// optional int32 godRankIndex = 24;
inline bool PB_PlayerAtt::has_godRankIndex() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void PB_PlayerAtt::set_has_godRankIndex() {
  _has_bits_[0] |= 0x00400000u;
}
inline void PB_PlayerAtt::clear_has_godRankIndex() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void PB_PlayerAtt::clear_godRankIndex() {
  godRankIndex_ = 0;
  clear_has_godRankIndex();
}
inline ::google::protobuf::int32 PB_PlayerAtt::godRankIndex() const {
  return godRankIndex_;
}
inline void PB_PlayerAtt::set_godRankIndex(::google::protobuf::int32 value) {
  set_has_godRankIndex();
  godRankIndex_ = value;
}

// repeated .PB_FriendInfo godRecordInfo = 25;
inline int PB_PlayerAtt::godRecordInfo_size() const {
  return godRecordInfo_.size();
}
inline void PB_PlayerAtt::clear_godRecordInfo() {
  godRecordInfo_.Clear();
}
inline const ::PB_FriendInfo& PB_PlayerAtt::godRecordInfo(int index) const {
  return godRecordInfo_.Get(index);
}
inline ::PB_FriendInfo* PB_PlayerAtt::mutable_godRecordInfo(int index) {
  return godRecordInfo_.Mutable(index);
}
inline ::PB_FriendInfo* PB_PlayerAtt::add_godRecordInfo() {
  return godRecordInfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo >&
PB_PlayerAtt::godRecordInfo() const {
  return godRecordInfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::PB_FriendInfo >*
PB_PlayerAtt::mutable_godRecordInfo() {
  return &godRecordInfo_;
}

// repeated int64 godRecordArg1 = 26;
inline int PB_PlayerAtt::godRecordArg1_size() const {
  return godRecordArg1_.size();
}
inline void PB_PlayerAtt::clear_godRecordArg1() {
  godRecordArg1_.Clear();
}
inline ::google::protobuf::int64 PB_PlayerAtt::godRecordArg1(int index) const {
  return godRecordArg1_.Get(index);
}
inline void PB_PlayerAtt::set_godRecordArg1(int index, ::google::protobuf::int64 value) {
  godRecordArg1_.Set(index, value);
}
inline void PB_PlayerAtt::add_godRecordArg1(::google::protobuf::int64 value) {
  godRecordArg1_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
PB_PlayerAtt::godRecordArg1() const {
  return godRecordArg1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
PB_PlayerAtt::mutable_godRecordArg1() {
  return &godRecordArg1_;
}

// repeated bool godRankRecords = 27;
inline int PB_PlayerAtt::godRankRecords_size() const {
  return godRankRecords_.size();
}
inline void PB_PlayerAtt::clear_godRankRecords() {
  godRankRecords_.Clear();
}
inline bool PB_PlayerAtt::godRankRecords(int index) const {
  return godRankRecords_.Get(index);
}
inline void PB_PlayerAtt::set_godRankRecords(int index, bool value) {
  godRankRecords_.Set(index, value);
}
inline void PB_PlayerAtt::add_godRankRecords(bool value) {
  godRankRecords_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
PB_PlayerAtt::godRankRecords() const {
  return godRankRecords_;
}
inline ::google::protobuf::RepeatedField< bool >*
PB_PlayerAtt::mutable_godRankRecords() {
  return &godRankRecords_;
}

// optional int32 minGodRank = 29 [default = -1];
inline bool PB_PlayerAtt::has_minGodRank() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void PB_PlayerAtt::set_has_minGodRank() {
  _has_bits_[0] |= 0x04000000u;
}
inline void PB_PlayerAtt::clear_has_minGodRank() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void PB_PlayerAtt::clear_minGodRank() {
  minGodRank_ = -1;
  clear_has_minGodRank();
}
inline ::google::protobuf::int32 PB_PlayerAtt::minGodRank() const {
  return minGodRank_;
}
inline void PB_PlayerAtt::set_minGodRank(::google::protobuf::int32 value) {
  set_has_minGodRank();
  minGodRank_ = value;
}

// repeated int32 propertieType = 30;
inline int PB_PlayerAtt::propertieType_size() const {
  return propertieType_.size();
}
inline void PB_PlayerAtt::clear_propertieType() {
  propertieType_.Clear();
}
inline ::google::protobuf::int32 PB_PlayerAtt::propertieType(int index) const {
  return propertieType_.Get(index);
}
inline void PB_PlayerAtt::set_propertieType(int index, ::google::protobuf::int32 value) {
  propertieType_.Set(index, value);
}
inline void PB_PlayerAtt::add_propertieType(::google::protobuf::int32 value) {
  propertieType_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_PlayerAtt::propertieType() const {
  return propertieType_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_PlayerAtt::mutable_propertieType() {
  return &propertieType_;
}

// repeated int32 haloLevel = 31;
inline int PB_PlayerAtt::haloLevel_size() const {
  return haloLevel_.size();
}
inline void PB_PlayerAtt::clear_haloLevel() {
  haloLevel_.Clear();
}
inline ::google::protobuf::int32 PB_PlayerAtt::haloLevel(int index) const {
  return haloLevel_.Get(index);
}
inline void PB_PlayerAtt::set_haloLevel(int index, ::google::protobuf::int32 value) {
  haloLevel_.Set(index, value);
}
inline void PB_PlayerAtt::add_haloLevel(::google::protobuf::int32 value) {
  haloLevel_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_PlayerAtt::haloLevel() const {
  return haloLevel_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_PlayerAtt::mutable_haloLevel() {
  return &haloLevel_;
}

// repeated int32 haloValue = 32;
inline int PB_PlayerAtt::haloValue_size() const {
  return haloValue_.size();
}
inline void PB_PlayerAtt::clear_haloValue() {
  haloValue_.Clear();
}
inline ::google::protobuf::int32 PB_PlayerAtt::haloValue(int index) const {
  return haloValue_.Get(index);
}
inline void PB_PlayerAtt::set_haloValue(int index, ::google::protobuf::int32 value) {
  haloValue_.Set(index, value);
}
inline void PB_PlayerAtt::add_haloValue(::google::protobuf::int32 value) {
  haloValue_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_PlayerAtt::haloValue() const {
  return haloValue_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_PlayerAtt::mutable_haloValue() {
  return &haloValue_;
}

// optional string selfcode = 33;
inline bool PB_PlayerAtt::has_selfcode() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void PB_PlayerAtt::set_has_selfcode() {
  _has_bits_[0] |= 0x40000000u;
}
inline void PB_PlayerAtt::clear_has_selfcode() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void PB_PlayerAtt::clear_selfcode() {
  if (selfcode_ != &::google::protobuf::internal::kEmptyString) {
    selfcode_->clear();
  }
  clear_has_selfcode();
}
inline const ::std::string& PB_PlayerAtt::selfcode() const {
  return *selfcode_;
}
inline void PB_PlayerAtt::set_selfcode(const ::std::string& value) {
  set_has_selfcode();
  if (selfcode_ == &::google::protobuf::internal::kEmptyString) {
    selfcode_ = new ::std::string;
  }
  selfcode_->assign(value);
}
inline void PB_PlayerAtt::set_selfcode(const char* value) {
  set_has_selfcode();
  if (selfcode_ == &::google::protobuf::internal::kEmptyString) {
    selfcode_ = new ::std::string;
  }
  selfcode_->assign(value);
}
inline void PB_PlayerAtt::set_selfcode(const char* value, size_t size) {
  set_has_selfcode();
  if (selfcode_ == &::google::protobuf::internal::kEmptyString) {
    selfcode_ = new ::std::string;
  }
  selfcode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PB_PlayerAtt::mutable_selfcode() {
  set_has_selfcode();
  if (selfcode_ == &::google::protobuf::internal::kEmptyString) {
    selfcode_ = new ::std::string;
  }
  return selfcode_;
}
inline ::std::string* PB_PlayerAtt::release_selfcode() {
  clear_has_selfcode();
  if (selfcode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = selfcode_;
    selfcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string othercode = 34;
inline bool PB_PlayerAtt::has_othercode() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void PB_PlayerAtt::set_has_othercode() {
  _has_bits_[0] |= 0x80000000u;
}
inline void PB_PlayerAtt::clear_has_othercode() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void PB_PlayerAtt::clear_othercode() {
  if (othercode_ != &::google::protobuf::internal::kEmptyString) {
    othercode_->clear();
  }
  clear_has_othercode();
}
inline const ::std::string& PB_PlayerAtt::othercode() const {
  return *othercode_;
}
inline void PB_PlayerAtt::set_othercode(const ::std::string& value) {
  set_has_othercode();
  if (othercode_ == &::google::protobuf::internal::kEmptyString) {
    othercode_ = new ::std::string;
  }
  othercode_->assign(value);
}
inline void PB_PlayerAtt::set_othercode(const char* value) {
  set_has_othercode();
  if (othercode_ == &::google::protobuf::internal::kEmptyString) {
    othercode_ = new ::std::string;
  }
  othercode_->assign(value);
}
inline void PB_PlayerAtt::set_othercode(const char* value, size_t size) {
  set_has_othercode();
  if (othercode_ == &::google::protobuf::internal::kEmptyString) {
    othercode_ = new ::std::string;
  }
  othercode_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PB_PlayerAtt::mutable_othercode() {
  set_has_othercode();
  if (othercode_ == &::google::protobuf::internal::kEmptyString) {
    othercode_ = new ::std::string;
  }
  return othercode_;
}
inline ::std::string* PB_PlayerAtt::release_othercode() {
  clear_has_othercode();
  if (othercode_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = othercode_;
    othercode_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated int32 haloCount = 35;
inline int PB_PlayerAtt::haloCount_size() const {
  return haloCount_.size();
}
inline void PB_PlayerAtt::clear_haloCount() {
  haloCount_.Clear();
}
inline ::google::protobuf::int32 PB_PlayerAtt::haloCount(int index) const {
  return haloCount_.Get(index);
}
inline void PB_PlayerAtt::set_haloCount(int index, ::google::protobuf::int32 value) {
  haloCount_.Set(index, value);
}
inline void PB_PlayerAtt::add_haloCount(::google::protobuf::int32 value) {
  haloCount_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
PB_PlayerAtt::haloCount() const {
  return haloCount_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
PB_PlayerAtt::mutable_haloCount() {
  return &haloCount_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PlayerAtt_2eproto__INCLUDED
