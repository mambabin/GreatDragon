// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActiveInfo.proto

#ifndef PROTOBUF_ActiveInfo_2eproto__INCLUDED
#define PROTOBUF_ActiveInfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ActiveInfo_2eproto();
void protobuf_AssignDesc_ActiveInfo_2eproto();
void protobuf_ShutdownFile_ActiveInfo_2eproto();

class ActiveInfo;
class AllActives;

// ===================================================================

class ActiveInfo : public ::google::protobuf::Message {
 public:
  ActiveInfo();
  virtual ~ActiveInfo();
  
  ActiveInfo(const ActiveInfo& from);
  
  inline ActiveInfo& operator=(const ActiveInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveInfo& default_instance();
  
  void Swap(ActiveInfo* other);
  
  // implements Message ----------------------------------------------
  
  ActiveInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActiveInfo& from);
  void MergeFrom(const ActiveInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // repeated int32 beginTime = 2;
  inline int beginTime_size() const;
  inline void clear_beginTime();
  static const int kBeginTimeFieldNumber = 2;
  inline ::google::protobuf::int32 beginTime(int index) const;
  inline void set_beginTime(int index, ::google::protobuf::int32 value);
  inline void add_beginTime(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      beginTime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_beginTime();
  
  // repeated int32 endTime = 3;
  inline int endTime_size() const;
  inline void clear_endTime();
  static const int kEndTimeFieldNumber = 3;
  inline ::google::protobuf::int32 endTime(int index) const;
  inline void set_endTime(int index, ::google::protobuf::int32 value);
  inline void add_endTime(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      endTime() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_endTime();
  
  // @@protoc_insertion_point(class_scope:ActiveInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > beginTime_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > endTime_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_ActiveInfo_2eproto();
  friend void protobuf_AssignDesc_ActiveInfo_2eproto();
  friend void protobuf_ShutdownFile_ActiveInfo_2eproto();
  
  void InitAsDefaultInstance();
  static ActiveInfo* default_instance_;
};
// -------------------------------------------------------------------

class AllActives : public ::google::protobuf::Message {
 public:
  AllActives();
  virtual ~AllActives();
  
  AllActives(const AllActives& from);
  
  inline AllActives& operator=(const AllActives& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllActives& default_instance();
  
  void Swap(AllActives* other);
  
  // implements Message ----------------------------------------------
  
  AllActives* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllActives& from);
  void MergeFrom(const AllActives& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .ActiveInfo allActives = 1;
  inline int allActives_size() const;
  inline void clear_allActives();
  static const int kAllActivesFieldNumber = 1;
  inline const ::ActiveInfo& allActives(int index) const;
  inline ::ActiveInfo* mutable_allActives(int index);
  inline ::ActiveInfo* add_allActives();
  inline const ::google::protobuf::RepeatedPtrField< ::ActiveInfo >&
      allActives() const;
  inline ::google::protobuf::RepeatedPtrField< ::ActiveInfo >*
      mutable_allActives();
  
  // @@protoc_insertion_point(class_scope:AllActives)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::ActiveInfo > allActives_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_ActiveInfo_2eproto();
  friend void protobuf_AssignDesc_ActiveInfo_2eproto();
  friend void protobuf_ShutdownFile_ActiveInfo_2eproto();
  
  void InitAsDefaultInstance();
  static AllActives* default_instance_;
};
// ===================================================================


// ===================================================================

// ActiveInfo

// optional int32 id = 1;
inline bool ActiveInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActiveInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActiveInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActiveInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ActiveInfo::id() const {
  return id_;
}
inline void ActiveInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// repeated int32 beginTime = 2;
inline int ActiveInfo::beginTime_size() const {
  return beginTime_.size();
}
inline void ActiveInfo::clear_beginTime() {
  beginTime_.Clear();
}
inline ::google::protobuf::int32 ActiveInfo::beginTime(int index) const {
  return beginTime_.Get(index);
}
inline void ActiveInfo::set_beginTime(int index, ::google::protobuf::int32 value) {
  beginTime_.Set(index, value);
}
inline void ActiveInfo::add_beginTime(::google::protobuf::int32 value) {
  beginTime_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ActiveInfo::beginTime() const {
  return beginTime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ActiveInfo::mutable_beginTime() {
  return &beginTime_;
}

// repeated int32 endTime = 3;
inline int ActiveInfo::endTime_size() const {
  return endTime_.size();
}
inline void ActiveInfo::clear_endTime() {
  endTime_.Clear();
}
inline ::google::protobuf::int32 ActiveInfo::endTime(int index) const {
  return endTime_.Get(index);
}
inline void ActiveInfo::set_endTime(int index, ::google::protobuf::int32 value) {
  endTime_.Set(index, value);
}
inline void ActiveInfo::add_endTime(::google::protobuf::int32 value) {
  endTime_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ActiveInfo::endTime() const {
  return endTime_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ActiveInfo::mutable_endTime() {
  return &endTime_;
}

// -------------------------------------------------------------------

// AllActives

// repeated .ActiveInfo allActives = 1;
inline int AllActives::allActives_size() const {
  return allActives_.size();
}
inline void AllActives::clear_allActives() {
  allActives_.Clear();
}
inline const ::ActiveInfo& AllActives::allActives(int index) const {
  return allActives_.Get(index);
}
inline ::ActiveInfo* AllActives::mutable_allActives(int index) {
  return allActives_.Mutable(index);
}
inline ::ActiveInfo* AllActives::add_allActives() {
  return allActives_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ActiveInfo >&
AllActives::allActives() const {
  return allActives_;
}
inline ::google::protobuf::RepeatedPtrField< ::ActiveInfo >*
AllActives::mutable_allActives() {
  return &allActives_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ActiveInfo_2eproto__INCLUDED
